29c10a48b0e47d73cbd010d7939f4a4e
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b;
Object.defineProperty(exports, "__esModule", { value: true });
exports.Analytics = void 0;
const typeorm_1 = require("typeorm");
const swagger_1 = require("@nestjs/swagger");
/**
 * Analytics entity representing analytics events and records.
 */
let Analytics = class Analytics {
};
exports.Analytics = Analytics;
__decorate([
    (0, swagger_1.ApiProperty)({ description: 'Analytics record ID', example: 1 }),
    (0, typeorm_1.PrimaryGeneratedColumn)(),
    __metadata("design:type", Number)
], Analytics.prototype, "id", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ description: 'Event type', example: 'course_view' }),
    (0, typeorm_1.Index)() // Optimized for querying analytics by event type
    ,
    (0, typeorm_1.Column)(),
    __metadata("design:type", String)
], Analytics.prototype, "eventType", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ description: 'User ID', example: 123 }),
    (0, typeorm_1.Index)() // Indexing improves search performance for user-based analytics
    ,
    (0, typeorm_1.Column)(),
    __metadata("design:type", Number)
], Analytics.prototype, "userId", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ description: 'Course ID (optional)', example: 456 }),
    (0, typeorm_1.Column)({ nullable: true }),
    __metadata("design:type", Number)
], Analytics.prototype, "courseId", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ description: 'Additional event data (optional)', type: 'object' }),
    (0, typeorm_1.Column)({ type: 'json', nullable: true }),
    __metadata("design:type", typeof (_a = typeof Record !== "undefined" && Record) === "function" ? _a : Object)
], Analytics.prototype, "additionalData", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ description: 'Event creation date', example: '2025-06-28T12:00:00Z' }),
    (0, typeorm_1.CreateDateColumn)(),
    __metadata("design:type", typeof (_b = typeof Date !== "undefined" && Date) === "function" ? _b : Object)
], Analytics.prototype, "createdAt", void 0);
exports.Analytics = Analytics = __decorate([
    (0, typeorm_1.Entity)('analytics')
], Analytics);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiQzpcXFVzZXJzXFxnLWVrb2hcXERlc2t0b3BcXFN0cmVsbGVyTWluZHMtQmFja2VuZFxcc3JjXFxhbmFseXRpY3NcXGVudGl0aWVzXFxhbmFseXRpY3MuZW50aXR5LnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBQSxxQ0FBMEY7QUFDMUYsNkNBQW1FO0FBRW5FOztHQUVHO0FBRUksSUFBTSxTQUFTLEdBQWYsTUFBTSxTQUFTO0NBMEJyQixDQUFBO0FBMUJZLDhCQUFTO0FBR3BCO0lBRkMsSUFBQSxxQkFBVyxFQUFDLEVBQUUsV0FBVyxFQUFFLHFCQUFxQixFQUFFLE9BQU8sRUFBRSxDQUFDLEVBQUUsQ0FBQztJQUMvRCxJQUFBLGdDQUFzQixHQUFFOztxQ0FDZDtBQUtYO0lBSEMsSUFBQSxxQkFBVyxFQUFDLEVBQUUsV0FBVyxFQUFFLFlBQVksRUFBRSxPQUFPLEVBQUUsYUFBYSxFQUFFLENBQUM7SUFDbEUsSUFBQSxlQUFLLEdBQUUsQ0FBQyxpREFBaUQ7O0lBQ3pELElBQUEsZ0JBQU0sR0FBRTs7NENBQ1M7QUFLbEI7SUFIQyxJQUFBLHFCQUFXLEVBQUMsRUFBRSxXQUFXLEVBQUUsU0FBUyxFQUFFLE9BQU8sRUFBRSxHQUFHLEVBQUUsQ0FBQztJQUNyRCxJQUFBLGVBQUssR0FBRSxDQUFDLGdFQUFnRTs7SUFDeEUsSUFBQSxnQkFBTSxHQUFFOzt5Q0FDTTtBQUlmO0lBRkMsSUFBQSw2QkFBbUIsRUFBQyxFQUFFLFdBQVcsRUFBRSxzQkFBc0IsRUFBRSxPQUFPLEVBQUUsR0FBRyxFQUFFLENBQUM7SUFDMUUsSUFBQSxnQkFBTSxFQUFDLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBRSxDQUFDOzsyQ0FDVDtBQUlsQjtJQUZDLElBQUEsNkJBQW1CLEVBQUMsRUFBRSxXQUFXLEVBQUUsa0NBQWtDLEVBQUUsSUFBSSxFQUFFLFFBQVEsRUFBRSxDQUFDO0lBQ3hGLElBQUEsZ0JBQU0sRUFBQyxFQUFFLElBQUksRUFBRSxNQUFNLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBRSxDQUFDO2tEQUN4QixNQUFNLG9CQUFOLE1BQU07aURBQWM7QUFJckM7SUFGQyxJQUFBLHFCQUFXLEVBQUMsRUFBRSxXQUFXLEVBQUUscUJBQXFCLEVBQUUsT0FBTyxFQUFFLHNCQUFzQixFQUFFLENBQUM7SUFDcEYsSUFBQSwwQkFBZ0IsR0FBRTtrREFDUixJQUFJLG9CQUFKLElBQUk7NENBQUM7b0JBekJMLFNBQVM7SUFEckIsSUFBQSxnQkFBTSxFQUFDLFdBQVcsQ0FBQztHQUNQLFNBQVMsQ0EwQnJCIiwibmFtZXMiOltdLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcZy1la29oXFxEZXNrdG9wXFxTdHJlbGxlck1pbmRzLUJhY2tlbmRcXHNyY1xcYW5hbHl0aWNzXFxlbnRpdGllc1xcYW5hbHl0aWNzLmVudGl0eS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFbnRpdHksIFByaW1hcnlHZW5lcmF0ZWRDb2x1bW4sIENvbHVtbiwgQ3JlYXRlRGF0ZUNvbHVtbiwgSW5kZXggfSBmcm9tICd0eXBlb3JtJztcclxuaW1wb3J0IHsgQXBpUHJvcGVydHksIEFwaVByb3BlcnR5T3B0aW9uYWwgfSBmcm9tICdAbmVzdGpzL3N3YWdnZXInO1xyXG5cclxuLyoqXHJcbiAqIEFuYWx5dGljcyBlbnRpdHkgcmVwcmVzZW50aW5nIGFuYWx5dGljcyBldmVudHMgYW5kIHJlY29yZHMuXHJcbiAqL1xyXG5ARW50aXR5KCdhbmFseXRpY3MnKVxyXG5leHBvcnQgY2xhc3MgQW5hbHl0aWNzIHtcclxuICBAQXBpUHJvcGVydHkoeyBkZXNjcmlwdGlvbjogJ0FuYWx5dGljcyByZWNvcmQgSUQnLCBleGFtcGxlOiAxIH0pXHJcbiAgQFByaW1hcnlHZW5lcmF0ZWRDb2x1bW4oKVxyXG4gIGlkOiBudW1iZXI7XHJcblxyXG4gIEBBcGlQcm9wZXJ0eSh7IGRlc2NyaXB0aW9uOiAnRXZlbnQgdHlwZScsIGV4YW1wbGU6ICdjb3Vyc2VfdmlldycgfSlcclxuICBASW5kZXgoKSAvLyBPcHRpbWl6ZWQgZm9yIHF1ZXJ5aW5nIGFuYWx5dGljcyBieSBldmVudCB0eXBlXHJcbiAgQENvbHVtbigpXHJcbiAgZXZlbnRUeXBlOiBzdHJpbmc7IC8vIGUuZy4sIFwiY291cnNlX3ZpZXdcIiwgXCJsZXNzb25fY29tcGxldGVkXCJcclxuXHJcbiAgQEFwaVByb3BlcnR5KHsgZGVzY3JpcHRpb246ICdVc2VyIElEJywgZXhhbXBsZTogMTIzIH0pXHJcbiAgQEluZGV4KCkgLy8gSW5kZXhpbmcgaW1wcm92ZXMgc2VhcmNoIHBlcmZvcm1hbmNlIGZvciB1c2VyLWJhc2VkIGFuYWx5dGljc1xyXG4gIEBDb2x1bW4oKVxyXG4gIHVzZXJJZDogbnVtYmVyO1xyXG5cclxuICBAQXBpUHJvcGVydHlPcHRpb25hbCh7IGRlc2NyaXB0aW9uOiAnQ291cnNlIElEIChvcHRpb25hbCknLCBleGFtcGxlOiA0NTYgfSlcclxuICBAQ29sdW1uKHsgbnVsbGFibGU6IHRydWUgfSlcclxuICBjb3Vyc2VJZD86IG51bWJlcjsgLy8gT3B0aW9uYWwgZm9yIGNvdXJzZS1yZWxhdGVkIGV2ZW50c1xyXG5cclxuICBAQXBpUHJvcGVydHlPcHRpb25hbCh7IGRlc2NyaXB0aW9uOiAnQWRkaXRpb25hbCBldmVudCBkYXRhIChvcHRpb25hbCknLCB0eXBlOiAnb2JqZWN0JyB9KVxyXG4gIEBDb2x1bW4oeyB0eXBlOiAnanNvbicsIG51bGxhYmxlOiB0cnVlIH0pXHJcbiAgYWRkaXRpb25hbERhdGE/OiBSZWNvcmQ8c3RyaW5nLCBhbnk+OyAvLyBQcm9wZXJseSBzdG9yZWQgYXMgSlNPTlxyXG5cclxuICBAQXBpUHJvcGVydHkoeyBkZXNjcmlwdGlvbjogJ0V2ZW50IGNyZWF0aW9uIGRhdGUnLCBleGFtcGxlOiAnMjAyNS0wNi0yOFQxMjowMDowMFonIH0pXHJcbiAgQENyZWF0ZURhdGVDb2x1bW4oKVxyXG4gIGNyZWF0ZWRBdDogRGF0ZTtcclxufVxyXG4iXSwidmVyc2lvbiI6M30=