{"file":"C:\\Users\\g-ekoh\\Desktop\\StrellerMinds-Backend\\src\\data-quality\\decorators\\data-quality.decorators.ts","mappings":";;;AAsCA,0CAEC;AAGD,8CAEC;AAGD,sCAUC;AAED,sCAEC;AAGD,gCAUC;AAED,kCAkBC;AAED,kCAoBC;AAED,8BAYC;AAED,8BAUC;AAED,oCAUC;AAGD,oCAWC;AAGD,8BAWC;AAGD,kCAQC;AAGD,kCAQC;AAGD,wCAcC;AAGD,kCAUC;AAGD,4CAYC;AAGD,4BAYC;AAGD,0CAYC;AAGD,4BAYC;AAGD,wCAYC;AAtTD,2CAA8D;AAC9D,qDAAoK;AACpK,yDAAoD;AAEpD,uCAAuC;AAC1B,QAAA,sBAAsB,GAAG,oBAAoB,CAAC;AAC9C,QAAA,uBAAuB,GAAG,qBAAqB,CAAC;AAE7D,0BAA0B;AAC1B,IAAY,mBAQX;AARD,WAAY,mBAAmB;IAC7B,oDAA6B,CAAA;IAC7B,4CAAqB,CAAA;IACrB,kDAA2B,CAAA;IAC3B,4CAAqB,CAAA;IACrB,gDAAyB,CAAA;IACzB,gDAAyB,CAAA;IACzB,gDAAyB,CAAA;AAC3B,CAAC,EARW,mBAAmB,mCAAnB,mBAAmB,QAQ9B;AAED,+BAA+B;AAC/B,IAAY,mBAKX;AALD,WAAY,mBAAmB;IAC7B,kCAAW,CAAA;IACX,wCAAiB,CAAA;IACjB,oCAAa,CAAA;IACb,4CAAqB,CAAA;AACvB,CAAC,EALW,mBAAmB,mCAAnB,mBAAmB,QAK9B;AAYD,wCAAwC;AACxC,SAAgB,eAAe,CAAC,QAAiC;IAC/D,OAAO,IAAA,oBAAW,EAAC,8BAAsB,EAAE,QAAQ,CAAC,CAAC;AACvD,CAAC;AAED,0CAA0C;AAC1C,SAAgB,iBAAiB,CAAC,UAAkB;IAClD,OAAO,IAAA,oBAAW,EAAC,+BAAuB,EAAE,UAAU,CAAC,CAAC;AAC1D,CAAC;AAED,0BAA0B;AAC1B,SAAgB,aAAa,CAAC,OAAgB,EAAE,WAAgC,mBAAmB,CAAC,IAAI;IACtG,OAAO,IAAA,wBAAe,EACpB,IAAA,4BAAU,EAAC,EAAE,OAAO,EAAE,OAAO,IAAI,mBAAmB,EAAE,CAAC,EACvD,eAAe,CAAC;QACd,QAAQ,EAAE,mBAAmB,CAAC,YAAY;QAC1C,QAAQ;QACR,SAAS,EAAE,GAAG;QACd,OAAO,EAAE,OAAO,IAAI,yBAAyB;KAC9C,CAAC,CACH,CAAC;AACJ,CAAC;AAED,SAAgB,aAAa;IAC3B,OAAO,IAAA,4BAAU,GAAE,CAAC;AACtB,CAAC;AAED,sBAAsB;AACtB,SAAgB,UAAU,CAAC,WAAgC,mBAAmB,CAAC,IAAI;IACjF,OAAO,IAAA,wBAAe,EACpB,IAAA,yBAAO,EAAC,EAAE,EAAE,EAAE,OAAO,EAAE,+BAA+B,EAAE,CAAC,EACzD,eAAe,CAAC;QACd,QAAQ,EAAE,mBAAmB,CAAC,QAAQ;QACtC,QAAQ;QACR,SAAS,EAAE,GAAG;QACd,OAAO,EAAE,yBAAyB;KACnC,CAAC,CACH,CAAC;AACJ,CAAC;AAED,SAAgB,WAAW,CAAC,SAAkB,EAAE,SAAkB,EAAE,WAAgC,mBAAmB,CAAC,MAAM;IAC5H,MAAM,UAAU,GAAG;QACjB,IAAA,0BAAQ,EAAC,EAAE,OAAO,EAAE,kBAAkB,EAAE,CAAC;QACzC,eAAe,CAAC;YACd,QAAQ,EAAE,mBAAmB,CAAC,QAAQ;YACtC,QAAQ;YACR,SAAS,EAAE,GAAG;YACd,OAAO,EAAE,0BAA0B;SACpC,CAAC;KACH,CAAC;IAEF,IAAI,SAAS,KAAK,SAAS,IAAI,SAAS,KAAK,SAAS,EAAE,CAAC;QACvD,UAAU,CAAC,IAAI,CAAC,IAAA,wBAAM,EAAC,SAAS,IAAI,CAAC,EAAE,SAAS,IAAI,IAAI,EAAE;YACxD,OAAO,EAAE,iCAAiC,SAAS,IAAI,CAAC,QAAQ,SAAS,IAAI,IAAI,aAAa;SAC/F,CAAC,CAAC,CAAC;IACN,CAAC;IAED,OAAO,IAAA,wBAAe,EAAC,GAAG,UAAU,CAAC,CAAC;AACxC,CAAC;AAED,SAAgB,WAAW,CAAC,GAAY,EAAE,GAAY,EAAE,WAAgC,mBAAmB,CAAC,MAAM;IAChH,MAAM,UAAU,GAAG;QACjB,IAAA,0BAAQ,EAAC,EAAE,EAAE,EAAE,OAAO,EAAE,kBAAkB,EAAE,CAAC;QAC7C,eAAe,CAAC;YACd,QAAQ,EAAE,mBAAmB,CAAC,QAAQ;YACtC,QAAQ;YACR,SAAS,EAAE,GAAG;YACd,OAAO,EAAE,0BAA0B;SACpC,CAAC;KACH,CAAC;IAEF,IAAI,GAAG,KAAK,SAAS,EAAE,CAAC;QACtB,UAAU,CAAC,IAAI,CAAC,IAAA,qBAAG,EAAC,GAAG,EAAE,EAAE,OAAO,EAAE,2BAA2B,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC;IAC3E,CAAC;IAED,IAAI,GAAG,KAAK,SAAS,EAAE,CAAC;QACtB,UAAU,CAAC,IAAI,CAAC,IAAA,qBAAG,EAAC,GAAG,EAAE,EAAE,OAAO,EAAE,0BAA0B,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC;IAC1E,CAAC;IAED,OAAO,IAAA,wBAAe,EAAC,GAAG,UAAU,CAAC,CAAC;AACxC,CAAC;AAED,SAAgB,SAAS,CAAC,WAAgC,mBAAmB,CAAC,MAAM;IAClF,OAAO,IAAA,wBAAe,EACpB,IAAA,wBAAM,EAAC,EAAE,OAAO,EAAE,sBAAsB,EAAE,CAAC,EAC3C,IAAA,wBAAI,EAAC,GAAG,EAAE,CAAC,IAAI,CAAC,EAChB,IAAA,6BAAS,EAAC,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,KAAK,YAAY,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,EACzE,eAAe,CAAC;QACd,QAAQ,EAAE,mBAAmB,CAAC,QAAQ;QACtC,QAAQ;QACR,SAAS,EAAE,GAAG;QACd,OAAO,EAAE,wBAAwB;KAClC,CAAC,CACH,CAAC;AACJ,CAAC;AAED,SAAgB,SAAS,CAAC,WAAgC,mBAAmB,CAAC,IAAI;IAChF,OAAO,IAAA,wBAAe,EACpB,IAAA,wBAAM,EAAC,GAAG,EAAE,EAAE,OAAO,EAAE,sBAAsB,EAAE,CAAC,EAChD,eAAe,CAAC;QACd,QAAQ,EAAE,mBAAmB,CAAC,QAAQ;QACtC,QAAQ;QACR,SAAS,EAAE,GAAG;QACd,OAAO,EAAE,wBAAwB;KAClC,CAAC,CACH,CAAC;AACJ,CAAC;AAED,SAAgB,YAAY,CAAC,WAAgC,mBAAmB,CAAC,GAAG;IAClF,OAAO,IAAA,wBAAe,EACpB,IAAA,2BAAS,EAAC,EAAE,OAAO,EAAE,yBAAyB,EAAE,CAAC,EACjD,eAAe,CAAC;QACd,QAAQ,EAAE,mBAAmB,CAAC,QAAQ;QACtC,QAAQ;QACR,SAAS,EAAE,GAAG;QACd,OAAO,EAAE,2BAA2B;KACrC,CAAC,CACH,CAAC;AACJ,CAAC;AAED,6BAA6B;AAC7B,SAAgB,YAAY,CAAC,OAAe,EAAE,OAAgB,EAAE,WAAgC,mBAAmB,CAAC,MAAM;IACxH,OAAO,IAAA,wBAAe,EACpB,IAAA,yBAAO,EAAC,OAAO,EAAE,EAAE,OAAO,EAAE,OAAO,IAAI,iCAAiC,EAAE,CAAC,EAC3E,eAAe,CAAC;QACd,QAAQ,EAAE,mBAAmB,CAAC,UAAU;QACxC,QAAQ;QACR,SAAS,EAAE,GAAG;QACd,OAAO,EAAE,OAAO,IAAI,2BAA2B;QAC/C,UAAU,EAAE,EAAE,OAAO,EAAE,OAAO,CAAC,MAAM,EAAE;KACxC,CAAC,CACH,CAAC;AACJ,CAAC;AAED,4BAA4B;AAC5B,SAAgB,SAAS,CAAI,UAAa,EAAE,WAAgC,mBAAmB,CAAC,MAAM;IACpG,OAAO,IAAA,wBAAe,EACpB,IAAA,wBAAM,EAAC,UAAU,EAAE,EAAE,OAAO,EAAE,4BAA4B,EAAE,CAAC,EAC7D,eAAe,CAAC;QACd,QAAQ,EAAE,mBAAmB,CAAC,QAAQ;QACtC,QAAQ;QACR,SAAS,EAAE,GAAG;QACd,OAAO,EAAE,wBAAwB;QACjC,UAAU,EAAE,EAAE,aAAa,EAAE,MAAM,CAAC,MAAM,CAAC,UAAiB,CAAC,EAAE;KAChE,CAAC,CACH,CAAC;AACJ,CAAC;AAED,wDAAwD;AACxD,SAAgB,WAAW,CAAC,KAAgB,EAAE,WAAgC,mBAAmB,CAAC,IAAI;IACpG,OAAO,eAAe,CAAC;QACrB,QAAQ,EAAE,mBAAmB,CAAC,UAAU;QACxC,QAAQ;QACR,SAAS,EAAE,GAAG;QACd,OAAO,EAAE,4BAA4B;QACrC,UAAU,EAAE,EAAE,KAAK,EAAE,KAAK,IAAI,EAAE,EAAE;KACnC,CAAC,CAAC;AACL,CAAC;AAED,uBAAuB;AACvB,SAAgB,WAAW,CAAC,WAAmB,EAAE,WAAgC,mBAAmB,CAAC,MAAM;IACzG,OAAO,eAAe,CAAC;QACrB,QAAQ,EAAE,mBAAmB,CAAC,UAAU;QACxC,QAAQ;QACR,SAAS,EAAE,GAAG;QACd,OAAO,EAAE,oCAAoC,WAAW,SAAS;QACjE,UAAU,EAAE,EAAE,MAAM,EAAE,WAAW,EAAE;KACpC,CAAC,CAAC;AACL,CAAC;AAED,yBAAyB;AACzB,SAAgB,cAAc,CAAC,YAAoB,EAAE,WAAoD,QAAQ,EAAE,WAAgC,mBAAmB,CAAC,MAAM;IAC3K,OAAO,eAAe,CAAC;QACrB,QAAQ,EAAE,mBAAmB,CAAC,WAAW;QACzC,QAAQ;QACR,SAAS,EAAE,GAAG;QACd,OAAO,EAAE,iCAAiC,YAAY,EAAE;QACxD,UAAU,EAAE;YACV,KAAK,EAAE,CAAC;oBACN,MAAM,EAAE,eAAe;oBACvB,MAAM,EAAE,YAAY;oBACpB,QAAQ;iBACT,CAAC;SACH;KACF,CAAC,CAAC;AACL,CAAC;AAED,2BAA2B;AAC3B,SAAgB,WAAW,CAAC,WAAgC,mBAAmB,CAAC,MAAM;IACpF,OAAO,IAAA,wBAAe,EACpB,IAAA,gCAAc,GAAE,EAChB,eAAe,CAAC;QACd,QAAQ,EAAE,mBAAmB,CAAC,UAAU;QACxC,QAAQ;QACR,SAAS,EAAE,GAAG;QACd,OAAO,EAAE,iCAAiC;KAC3C,CAAC,CACH,CAAC;AACJ,CAAC;AAED,0BAA0B;AAC1B,SAAgB,gBAAgB,CAAC,WAAgC,mBAAmB,CAAC,MAAM;IACzF,MAAM,YAAY,GAAG,wBAAwB,CAAC;IAC9C,OAAO,IAAA,wBAAe,EACpB,IAAA,yBAAO,EAAC,YAAY,EAAE,EAAE,OAAO,EAAE,8BAA8B,EAAE,CAAC,EAClE,eAAe,CAAC;QACd,QAAQ,EAAE,mBAAmB,CAAC,QAAQ;QACtC,QAAQ;QACR,SAAS,EAAE,GAAG;QACd,OAAO,EAAE,gCAAgC;QACzC,UAAU,EAAE,EAAE,OAAO,EAAE,YAAY,CAAC,MAAM,EAAE;KAC7C,CAAC,CACH,CAAC;AACJ,CAAC;AAED,iBAAiB;AACjB,SAAgB,QAAQ,CAAC,WAAgC,mBAAmB,CAAC,MAAM;IACjF,MAAM,UAAU,GAAG,yGAAyG,CAAC;IAC7H,OAAO,IAAA,wBAAe,EACpB,IAAA,yBAAO,EAAC,UAAU,EAAE,EAAE,OAAO,EAAE,qBAAqB,EAAE,CAAC,EACvD,eAAe,CAAC;QACd,QAAQ,EAAE,mBAAmB,CAAC,QAAQ;QACtC,QAAQ;QACR,SAAS,EAAE,GAAG;QACd,OAAO,EAAE,uBAAuB;QAChC,UAAU,EAAE,EAAE,OAAO,EAAE,UAAU,CAAC,MAAM,EAAE;KAC3C,CAAC,CACH,CAAC;AACJ,CAAC;AAED,yBAAyB;AACzB,SAAgB,eAAe,CAAC,WAAgC,mBAAmB,CAAC,IAAI;IACtF,MAAM,SAAS,GAAG,qGAAqG,CAAC;IACxH,OAAO,IAAA,wBAAe,EACpB,IAAA,yBAAO,EAAC,SAAS,EAAE,EAAE,OAAO,EAAE,oCAAoC,EAAE,CAAC,EACrE,eAAe,CAAC;QACd,QAAQ,EAAE,mBAAmB,CAAC,QAAQ;QACtC,QAAQ;QACR,SAAS,EAAE,GAAG;QACd,OAAO,EAAE,+BAA+B;QACxC,UAAU,EAAE,EAAE,OAAO,EAAE,SAAS,CAAC,MAAM,EAAE;KAC1C,CAAC,CACH,CAAC;AACJ,CAAC;AAED,gDAAgD;AAChD,SAAgB,QAAQ,CAAC,WAAgC,mBAAmB,CAAC,QAAQ;IACnF,MAAM,UAAU,GAAG,yDAAyD,CAAC;IAC7E,OAAO,IAAA,wBAAe,EACpB,IAAA,yBAAO,EAAC,UAAU,EAAE,EAAE,OAAO,EAAE,0CAA0C,EAAE,CAAC,EAC5E,eAAe,CAAC;QACd,QAAQ,EAAE,mBAAmB,CAAC,QAAQ;QACtC,QAAQ;QACR,SAAS,EAAE,GAAG;QACd,OAAO,EAAE,uBAAuB;QAChC,UAAU,EAAE,EAAE,OAAO,EAAE,UAAU,CAAC,MAAM,EAAE;KAC3C,CAAC,CACH,CAAC;AACJ,CAAC;AAED,wBAAwB;AACxB,SAAgB,cAAc,CAAC,WAAgC,mBAAmB,CAAC,MAAM;IACvF,MAAM,SAAS,GAAG,6FAA6F,CAAC;IAChH,OAAO,IAAA,wBAAe,EACpB,IAAA,yBAAO,EAAC,SAAS,EAAE,EAAE,OAAO,EAAE,4BAA4B,EAAE,CAAC,EAC7D,eAAe,CAAC;QACd,QAAQ,EAAE,mBAAmB,CAAC,QAAQ;QACtC,QAAQ;QACR,SAAS,EAAE,GAAG;QACd,OAAO,EAAE,8BAA8B;QACvC,UAAU,EAAE,EAAE,OAAO,EAAE,SAAS,CAAC,MAAM,EAAE;KAC1C,CAAC,CACH,CAAC;AACJ,CAAC","names":[],"sources":["C:\\Users\\g-ekoh\\Desktop\\StrellerMinds-Backend\\src\\data-quality\\decorators\\data-quality.decorators.ts"],"sourcesContent":["import { applyDecorators, SetMetadata } from '@nestjs/common';\r\nimport { IsNotEmpty, IsEmail, IsString, IsNumber, IsDate, IsOptional, ValidateNested, IsEnum, IsUUID, IsBoolean, Min, Max, Length, Matches } from 'class-validator';\r\nimport { Transform, Type } from 'class-transformer';\r\n\r\n// Metadata keys for data quality rules\r\nexport const DATA_QUALITY_RULES_KEY = 'data_quality_rules';\r\nexport const DATA_QUALITY_ENTITY_KEY = 'data_quality_entity';\r\n\r\n// Data quality rule types\r\nexport enum DataQualityRuleType {\r\n  COMPLETENESS = 'completeness',\r\n  ACCURACY = 'accuracy',\r\n  CONSISTENCY = 'consistency',\r\n  VALIDITY = 'validity',\r\n  UNIQUENESS = 'uniqueness',\r\n  TIMELINESS = 'timeliness',\r\n  CONFORMITY = 'conformity',\r\n}\r\n\r\n// Data quality severity levels\r\nexport enum DataQualitySeverity {\r\n  LOW = 'low',\r\n  MEDIUM = 'medium',\r\n  HIGH = 'high',\r\n  CRITICAL = 'critical',\r\n}\r\n\r\n// Interface for data quality rule metadata\r\nexport interface DataQualityRuleMetadata {\r\n  ruleType: DataQualityRuleType;\r\n  severity: DataQualitySeverity;\r\n  threshold?: number;\r\n  message?: string;\r\n  autoFix?: boolean;\r\n  conditions?: Record<string, any>;\r\n}\r\n\r\n// Base decorator for data quality rules\r\nexport function DataQualityRule(metadata: DataQualityRuleMetadata) {\r\n  return SetMetadata(DATA_QUALITY_RULES_KEY, metadata);\r\n}\r\n\r\n// Mark entity for data quality monitoring\r\nexport function DataQualityEntity(entityType: string) {\r\n  return SetMetadata(DATA_QUALITY_ENTITY_KEY, entityType);\r\n}\r\n\r\n// Completeness decorators\r\nexport function RequiredField(message?: string, severity: DataQualitySeverity = DataQualitySeverity.HIGH) {\r\n  return applyDecorators(\r\n    IsNotEmpty({ message: message || 'Field is required' }),\r\n    DataQualityRule({\r\n      ruleType: DataQualityRuleType.COMPLETENESS,\r\n      severity,\r\n      threshold: 100,\r\n      message: message || 'Field must not be empty',\r\n    })\r\n  );\r\n}\r\n\r\nexport function OptionalField() {\r\n  return IsOptional();\r\n}\r\n\r\n// Accuracy decorators\r\nexport function ValidEmail(severity: DataQualitySeverity = DataQualitySeverity.HIGH) {\r\n  return applyDecorators(\r\n    IsEmail({}, { message: 'Must be a valid email address' }),\r\n    DataQualityRule({\r\n      ruleType: DataQualityRuleType.ACCURACY,\r\n      severity,\r\n      threshold: 100,\r\n      message: 'Email format is invalid',\r\n    })\r\n  );\r\n}\r\n\r\nexport function ValidString(minLength?: number, maxLength?: number, severity: DataQualitySeverity = DataQualitySeverity.MEDIUM) {\r\n  const decorators = [\r\n    IsString({ message: 'Must be a string' }),\r\n    DataQualityRule({\r\n      ruleType: DataQualityRuleType.ACCURACY,\r\n      severity,\r\n      threshold: 100,\r\n      message: 'String format is invalid',\r\n    })\r\n  ];\r\n\r\n  if (minLength !== undefined || maxLength !== undefined) {\r\n    decorators.push(Length(minLength || 0, maxLength || 1000, {\r\n      message: `String length must be between ${minLength || 0} and ${maxLength || 1000} characters`\r\n    }));\r\n  }\r\n\r\n  return applyDecorators(...decorators);\r\n}\r\n\r\nexport function ValidNumber(min?: number, max?: number, severity: DataQualitySeverity = DataQualitySeverity.MEDIUM) {\r\n  const decorators = [\r\n    IsNumber({}, { message: 'Must be a number' }),\r\n    DataQualityRule({\r\n      ruleType: DataQualityRuleType.ACCURACY,\r\n      severity,\r\n      threshold: 100,\r\n      message: 'Number format is invalid',\r\n    })\r\n  ];\r\n\r\n  if (min !== undefined) {\r\n    decorators.push(Min(min, { message: `Number must be at least ${min}` }));\r\n  }\r\n\r\n  if (max !== undefined) {\r\n    decorators.push(Max(max, { message: `Number must not exceed ${max}` }));\r\n  }\r\n\r\n  return applyDecorators(...decorators);\r\n}\r\n\r\nexport function ValidDate(severity: DataQualitySeverity = DataQualitySeverity.MEDIUM) {\r\n  return applyDecorators(\r\n    IsDate({ message: 'Must be a valid date' }),\r\n    Type(() => Date),\r\n    Transform(({ value }) => value instanceof Date ? value : new Date(value)),\r\n    DataQualityRule({\r\n      ruleType: DataQualityRuleType.ACCURACY,\r\n      severity,\r\n      threshold: 100,\r\n      message: 'Date format is invalid',\r\n    })\r\n  );\r\n}\r\n\r\nexport function ValidUUID(severity: DataQualitySeverity = DataQualitySeverity.HIGH) {\r\n  return applyDecorators(\r\n    IsUUID('4', { message: 'Must be a valid UUID' }),\r\n    DataQualityRule({\r\n      ruleType: DataQualityRuleType.ACCURACY,\r\n      severity,\r\n      threshold: 100,\r\n      message: 'UUID format is invalid',\r\n    })\r\n  );\r\n}\r\n\r\nexport function ValidBoolean(severity: DataQualitySeverity = DataQualitySeverity.LOW) {\r\n  return applyDecorators(\r\n    IsBoolean({ message: 'Must be a boolean value' }),\r\n    DataQualityRule({\r\n      ruleType: DataQualityRuleType.ACCURACY,\r\n      severity,\r\n      threshold: 100,\r\n      message: 'Boolean format is invalid',\r\n    })\r\n  );\r\n}\r\n\r\n// Pattern matching decorator\r\nexport function ValidPattern(pattern: RegExp, message?: string, severity: DataQualitySeverity = DataQualitySeverity.MEDIUM) {\r\n  return applyDecorators(\r\n    Matches(pattern, { message: message || 'Does not match required pattern' }),\r\n    DataQualityRule({\r\n      ruleType: DataQualityRuleType.CONFORMITY,\r\n      severity,\r\n      threshold: 100,\r\n      message: message || 'Pattern validation failed',\r\n      conditions: { pattern: pattern.source },\r\n    })\r\n  );\r\n}\r\n\r\n// Enum validation decorator\r\nexport function ValidEnum<T>(enumObject: T, severity: DataQualitySeverity = DataQualitySeverity.MEDIUM) {\r\n  return applyDecorators(\r\n    IsEnum(enumObject, { message: 'Must be a valid enum value' }),\r\n    DataQualityRule({\r\n      ruleType: DataQualityRuleType.VALIDITY,\r\n      severity,\r\n      threshold: 100,\r\n      message: 'Enum validation failed',\r\n      conditions: { allowedValues: Object.values(enumObject as any) },\r\n    })\r\n  );\r\n}\r\n\r\n// Uniqueness decorator (for use with custom validation)\r\nexport function UniqueField(scope?: string[], severity: DataQualitySeverity = DataQualitySeverity.HIGH) {\r\n  return DataQualityRule({\r\n    ruleType: DataQualityRuleType.UNIQUENESS,\r\n    severity,\r\n    threshold: 100,\r\n    message: 'Field value must be unique',\r\n    conditions: { scope: scope || [] },\r\n  });\r\n}\r\n\r\n// Timeliness decorator\r\nexport function TimelyField(maxAgeHours: number, severity: DataQualitySeverity = DataQualitySeverity.MEDIUM) {\r\n  return DataQualityRule({\r\n    ruleType: DataQualityRuleType.TIMELINESS,\r\n    severity,\r\n    threshold: 100,\r\n    message: `Field value is too old (max age: ${maxAgeHours} hours)`,\r\n    conditions: { maxAge: maxAgeHours },\r\n  });\r\n}\r\n\r\n// Consistency decorators\r\nexport function ConsistentWith(relatedField: string, operator: 'equals' | 'greater_than' | 'less_than' = 'equals', severity: DataQualitySeverity = DataQualitySeverity.MEDIUM) {\r\n  return DataQualityRule({\r\n    ruleType: DataQualityRuleType.CONSISTENCY,\r\n    severity,\r\n    threshold: 100,\r\n    message: `Field must be consistent with ${relatedField}`,\r\n    conditions: {\r\n      rules: [{\r\n        field1: 'current_field',\r\n        field2: relatedField,\r\n        operator,\r\n      }],\r\n    },\r\n  });\r\n}\r\n\r\n// Nested object validation\r\nexport function ValidNested(severity: DataQualitySeverity = DataQualitySeverity.MEDIUM) {\r\n  return applyDecorators(\r\n    ValidateNested(),\r\n    DataQualityRule({\r\n      ruleType: DataQualityRuleType.CONFORMITY,\r\n      severity,\r\n      threshold: 100,\r\n      message: 'Nested object validation failed',\r\n    })\r\n  );\r\n}\r\n\r\n// Phone number validation\r\nexport function ValidPhoneNumber(severity: DataQualitySeverity = DataQualitySeverity.MEDIUM) {\r\n  const phonePattern = /^[\\+]?[1-9][\\d]{0,15}$/;\r\n  return applyDecorators(\r\n    Matches(phonePattern, { message: 'Must be a valid phone number' }),\r\n    DataQualityRule({\r\n      ruleType: DataQualityRuleType.ACCURACY,\r\n      severity,\r\n      threshold: 100,\r\n      message: 'Phone number format is invalid',\r\n      conditions: { pattern: phonePattern.source },\r\n    })\r\n  );\r\n}\r\n\r\n// URL validation\r\nexport function ValidURL(severity: DataQualitySeverity = DataQualitySeverity.MEDIUM) {\r\n  const urlPattern = /^https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_\\+.~#?&//=]*)$/;\r\n  return applyDecorators(\r\n    Matches(urlPattern, { message: 'Must be a valid URL' }),\r\n    DataQualityRule({\r\n      ruleType: DataQualityRuleType.ACCURACY,\r\n      severity,\r\n      threshold: 100,\r\n      message: 'URL format is invalid',\r\n      conditions: { pattern: urlPattern.source },\r\n    })\r\n  );\r\n}\r\n\r\n// Credit card validation\r\nexport function ValidCreditCard(severity: DataQualitySeverity = DataQualitySeverity.HIGH) {\r\n  const ccPattern = /^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|3[47][0-9]{13}|3[0-9]{13}|6(?:011|5[0-9]{2})[0-9]{12})$/;\r\n  return applyDecorators(\r\n    Matches(ccPattern, { message: 'Must be a valid credit card number' }),\r\n    DataQualityRule({\r\n      ruleType: DataQualityRuleType.ACCURACY,\r\n      severity,\r\n      threshold: 100,\r\n      message: 'Credit card format is invalid',\r\n      conditions: { pattern: ccPattern.source },\r\n    })\r\n  );\r\n}\r\n\r\n// Social Security Number validation (US format)\r\nexport function ValidSSN(severity: DataQualitySeverity = DataQualitySeverity.CRITICAL) {\r\n  const ssnPattern = /^(?!666|000|9\\\\d{2})\\\\d{3}-(?!00)\\\\d{2}-(?!0{4})\\\\d{4}$/;\r\n  return applyDecorators(\r\n    Matches(ssnPattern, { message: 'Must be a valid SSN format (XXX-XX-XXXX)' }),\r\n    DataQualityRule({\r\n      ruleType: DataQualityRuleType.ACCURACY,\r\n      severity,\r\n      threshold: 100,\r\n      message: 'SSN format is invalid',\r\n      conditions: { pattern: ssnPattern.source },\r\n    })\r\n  );\r\n}\r\n\r\n// IP Address validation\r\nexport function ValidIPAddress(severity: DataQualitySeverity = DataQualitySeverity.MEDIUM) {\r\n  const ipPattern = /^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;\r\n  return applyDecorators(\r\n    Matches(ipPattern, { message: 'Must be a valid IP address' }),\r\n    DataQualityRule({\r\n      ruleType: DataQualityRuleType.ACCURACY,\r\n      severity,\r\n      threshold: 100,\r\n      message: 'IP address format is invalid',\r\n      conditions: { pattern: ipPattern.source },\r\n    })\r\n  );\r\n}\r\n"],"version":3}