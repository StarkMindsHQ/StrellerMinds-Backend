{"file":"C:\\Users\\g-ekoh\\Desktop\\StrellerMinds-Backend\\src\\mentorship\\mentorship.controller.ts","mappings":";;;;;;;;;;;;;;;;AAAA,2CAA2E;AAC3E,6CAAwF;AACxF,6DAAyD;AAEzD;;GAEG;AAGI,IAAM,oBAAoB,GAA1B,MAAM,oBAAoB;IAC/B,YAA6B,iBAAoC;QAApC,sBAAiB,GAAjB,iBAAiB,CAAmB;IAAG,CAAC;IAErE;;OAEG;IAKG,AAAN,KAAK,CAAC,WAAW,CAAS,IAAyC;QACjE,OAAO,IAAI,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;IAChF,CAAC;IAED;;OAEG;IAKG,AAAN,KAAK,CAAC,gBAAgB,CAAS,IAA4D;QACzF,OAAO,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;IAC3F,CAAC;IAED;;OAEG;IAKG,AAAN,KAAK,CAAC,eAAe,CAAc,EAAU;QAC3C,OAAO,IAAI,CAAC,iBAAiB,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC;IACpD,CAAC;IAED;;OAEG;IAMG,AAAN,KAAK,CAAC,aAAa,CAAc,YAAoB,EAAU,IAAqE;QAClI,OAAO,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,YAAY,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;IAChH,CAAC;IAED;;OAEG;IAIG,AAAN,KAAK,CAAC,YAAY;QAChB,OAAO,IAAI,CAAC,iBAAiB,CAAC,sBAAsB,EAAE,CAAC;IACzD,CAAC;CACF,CAAA;AAzDY,oDAAoB;AAUzB;IAJL,IAAA,aAAI,EAAC,OAAO,CAAC;IACb,IAAA,sBAAY,EAAC,EAAE,OAAO,EAAE,yBAAyB,EAAE,WAAW,EAAE,+CAA+C,EAAE,CAAC;IAClH,IAAA,iBAAO,EAAC,EAAE,MAAM,EAAE,EAAE,UAAU,EAAE,EAAE,QAAQ,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE,QAAQ,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE,EAAE,EAAE,CAAC;IACnG,IAAA,qBAAW,EAAC,EAAE,MAAM,EAAE,GAAG,EAAE,WAAW,EAAE,0BAA0B,EAAE,CAAC;IACnD,WAAA,IAAA,aAAI,GAAE,CAAA;;;;uDAExB;AASK;IAJL,IAAA,aAAI,GAAE;IACN,IAAA,sBAAY,EAAC,EAAE,OAAO,EAAE,mBAAmB,EAAE,WAAW,EAAE,qDAAqD,EAAE,CAAC;IAClH,IAAA,iBAAO,EAAC,EAAE,MAAM,EAAE,EAAE,UAAU,EAAE,EAAE,QAAQ,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE,QAAQ,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,CAAC;IAC/I,IAAA,qBAAW,EAAC,EAAE,MAAM,EAAE,GAAG,EAAE,WAAW,EAAE,qBAAqB,EAAE,CAAC;IACzC,WAAA,IAAA,aAAI,GAAE,CAAA;;;;4DAE7B;AASK;IAJL,IAAA,YAAG,EAAC,KAAK,CAAC;IACV,IAAA,sBAAY,EAAC,EAAE,OAAO,EAAE,kBAAkB,EAAE,WAAW,EAAE,+BAA+B,EAAE,CAAC;IAC3F,IAAA,kBAAQ,EAAC,EAAE,IAAI,EAAE,IAAI,EAAE,WAAW,EAAE,eAAe,EAAE,CAAC;IACtD,IAAA,qBAAW,EAAC,EAAE,MAAM,EAAE,GAAG,EAAE,WAAW,EAAE,qBAAqB,EAAE,CAAC;IAC1C,WAAA,IAAA,cAAK,EAAC,IAAI,CAAC,CAAA;;;;2DAEjC;AAUK;IALL,IAAA,aAAI,EAAC,aAAa,CAAC;IACnB,IAAA,sBAAY,EAAC,EAAE,OAAO,EAAE,2BAA2B,EAAE,WAAW,EAAE,2CAA2C,EAAE,CAAC;IAChH,IAAA,kBAAQ,EAAC,EAAE,IAAI,EAAE,IAAI,EAAE,WAAW,EAAE,eAAe,EAAE,CAAC;IACtD,IAAA,iBAAO,EAAC,EAAE,MAAM,EAAE,EAAE,UAAU,EAAE,EAAE,WAAW,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,MAAM,EAAE,WAAW,EAAE,EAAE,eAAe,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,CAAC;IAC/L,IAAA,qBAAW,EAAC,EAAE,MAAM,EAAE,GAAG,EAAE,WAAW,EAAE,kBAAkB,EAAE,CAAC;IACzC,WAAA,IAAA,cAAK,EAAC,IAAI,CAAC,CAAA;IAAwB,WAAA,IAAA,aAAI,GAAE,CAAA;;;;yDAE7D;AAQK;IAHL,IAAA,YAAG,EAAC,mBAAmB,CAAC;IACxB,IAAA,sBAAY,EAAC,EAAE,OAAO,EAAE,0BAA0B,EAAE,WAAW,EAAE,4CAA4C,EAAE,CAAC;IAChH,IAAA,qBAAW,EAAC,EAAE,MAAM,EAAE,GAAG,EAAE,WAAW,EAAE,oBAAoB,EAAE,CAAC;;;;wDAG/D;+BAxDU,oBAAoB;IAFhC,IAAA,iBAAO,EAAC,YAAY,CAAC;IACrB,IAAA,mBAAU,EAAC,YAAY,CAAC;yDAEyB,sCAAiB,oBAAjB,sCAAiB;GADtD,oBAAoB,CAyDhC","names":[],"sources":["C:\\Users\\g-ekoh\\Desktop\\StrellerMinds-Backend\\src\\mentorship\\mentorship.controller.ts"],"sourcesContent":["import { Controller, Post, Body, Param, Get, Query } from '@nestjs/common';\r\nimport { ApiTags, ApiOperation, ApiResponse, ApiParam, ApiBody } from '@nestjs/swagger';\r\nimport { MentorshipService } from './mentorship.service';\r\n\r\n/**\r\n * Controller for mentorship operations: matching, creation, tracking, sessions, and analytics.\r\n */\r\n@ApiTags('Mentorship')\r\n@Controller('mentorship')\r\nexport class MentorshipController {\r\n  constructor(private readonly mentorshipService: MentorshipService) {}\r\n\r\n  /**\r\n   * Match a mentee to potential mentors based on criteria.\r\n   */\r\n  @Post('match')\r\n  @ApiOperation({ summary: 'Match mentee to mentors', description: 'Finds mentors for a mentee based on criteria.' })\r\n  @ApiBody({ schema: { properties: { menteeId: { type: 'string' }, criteria: { type: 'object' } } } })\r\n  @ApiResponse({ status: 200, description: 'List of matched mentors.' })\r\n  async matchMentor(@Body() body: { menteeId: string; criteria: any }) {\r\n    return this.mentorshipService.matchMentorMentee(body.menteeId, body.criteria);\r\n  }\r\n\r\n  /**\r\n   * Create a new mentorship relationship.\r\n   */\r\n  @Post()\r\n  @ApiOperation({ summary: 'Create mentorship', description: 'Creates a new mentorship between mentor and mentee.' })\r\n  @ApiBody({ schema: { properties: { mentorId: { type: 'string' }, menteeId: { type: 'string' }, goals: { type: 'string', required: false } } } })\r\n  @ApiResponse({ status: 201, description: 'Mentorship created.' })\r\n  async createMentorship(@Body() body: { mentorId: string; menteeId: string; goals?: string }) {\r\n    return this.mentorshipService.createMentorship(body.mentorId, body.menteeId, body.goals);\r\n  }\r\n\r\n  /**\r\n   * Track a mentorship by ID.\r\n   */\r\n  @Get(':id')\r\n  @ApiOperation({ summary: 'Track mentorship', description: 'Get mentorship details by ID.' })\r\n  @ApiParam({ name: 'id', description: 'Mentorship ID' })\r\n  @ApiResponse({ status: 200, description: 'Mentorship details.' })\r\n  async trackMentorship(@Param('id') id: string) {\r\n    return this.mentorshipService.trackMentorship(id);\r\n  }\r\n\r\n  /**\r\n   * Create a session for a mentorship.\r\n   */\r\n  @Post(':id/session')\r\n  @ApiOperation({ summary: 'Create mentorship session', description: 'Schedules a new session for a mentorship.' })\r\n  @ApiParam({ name: 'id', description: 'Mentorship ID' })\r\n  @ApiBody({ schema: { properties: { scheduledAt: { type: 'string', format: 'date-time' }, durationMinutes: { type: 'number', required: false }, notes: { type: 'string', required: false } } } })\r\n  @ApiResponse({ status: 201, description: 'Session created.' })\r\n  async createSession(@Param('id') mentorshipId: string, @Body() body: { scheduledAt: Date; durationMinutes?: number; notes?: string }) {\r\n    return this.mentorshipService.createSession(mentorshipId, body.scheduledAt, body.durationMinutes, body.notes);\r\n  }\r\n\r\n  /**\r\n   * Get mentorship analytics summary.\r\n   */\r\n  @Get('analytics/summary')\r\n  @ApiOperation({ summary: 'Get mentorship analytics', description: 'Returns analytics summary for mentorships.' })\r\n  @ApiResponse({ status: 200, description: 'Analytics summary.' })\r\n  async getAnalytics() {\r\n    return this.mentorshipService.getMentorshipAnalytics();\r\n  }\r\n}\r\n"],"version":3}