{"file":"C:\\Users\\g-ekoh\\Desktop\\StrellerMinds-Backend\\src\\video-streaming\\entities\\video-quality.entity.ts","mappings":"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","names":[],"sources":["C:\\Users\\g-ekoh\\Desktop\\StrellerMinds-Backend\\src\\video-streaming\\entities\\video-quality.entity.ts"],"sourcesContent":["import {\r\n  Entity,\r\n  PrimaryGeneratedColumn,\r\n  Column,\r\n  CreateDateColumn,\r\n  UpdateDateColumn,\r\n  ManyToOne,\r\n  Index,\r\n  JoinColumn,\r\n} from 'typeorm';\r\nimport { ApiProperty } from '@nestjs/swagger';\r\nimport { Video } from './video.entity';\r\n\r\nexport enum QualityLevel {\r\n  AUDIO_ONLY = 'audio_only',\r\n  LOW = '240p',\r\n  MEDIUM = '360p',\r\n  STANDARD = '480p',\r\n  HIGH = '720p',\r\n  FULL_HD = '1080p',\r\n  QUAD_HD = '1440p',\r\n  ULTRA_HD = '2160p',\r\n}\r\n\r\nexport enum VideoContainer {\r\n  MP4 = 'mp4',\r\n  WEBM = 'webm',\r\n  MKV = 'mkv',\r\n  AVI = 'avi',\r\n  MOV = 'mov',\r\n}\r\n\r\n@Entity('video_qualities')\r\n@Index(['video', 'quality'])\r\n@Index(['status'])\r\nexport class VideoQuality {\r\n  @ApiProperty({ description: 'Quality variant ID' })\r\n  @PrimaryGeneratedColumn('uuid')\r\n  id: string;\r\n\r\n  @ApiProperty({ description: 'Quality level', enum: QualityLevel })\r\n  @Column({\r\n    type: 'enum',\r\n    enum: QualityLevel,\r\n  })\r\n  quality: QualityLevel;\r\n\r\n  @ApiProperty({ description: 'Video width in pixels' })\r\n  @Column({ type: 'int' })\r\n  width: number;\r\n\r\n  @ApiProperty({ description: 'Video height in pixels' })\r\n  @Column({ type: 'int' })\r\n  height: number;\r\n\r\n  @ApiProperty({ description: 'Video bitrate in kbps' })\r\n  @Column({ type: 'int' })\r\n  bitrate: number;\r\n\r\n  @ApiProperty({ description: 'Audio bitrate in kbps' })\r\n  @Column({ type: 'int', nullable: true })\r\n  audioBitrate: number;\r\n\r\n  @ApiProperty({ description: 'Frame rate' })\r\n  @Column({ type: 'float' })\r\n  frameRate: number;\r\n\r\n  @ApiProperty({ description: 'Video codec' })\r\n  @Column({ length: 50 })\r\n  codec: string;\r\n\r\n  @ApiProperty({ description: 'Audio codec' })\r\n  @Column({ length: 50, nullable: true })\r\n  audioCodec: string;\r\n\r\n  @ApiProperty({ description: 'Container format', enum: VideoContainer })\r\n  @Column({\r\n    type: 'enum',\r\n    enum: VideoContainer,\r\n    default: VideoContainer.MP4,\r\n  })\r\n  container: VideoContainer;\r\n\r\n  @ApiProperty({ description: 'File size in bytes' })\r\n  @Column({ type: 'bigint' })\r\n  fileSize: number;\r\n\r\n  @ApiProperty({ description: 'Direct URL to the video file' })\r\n  @Column({ type: 'text' })\r\n  url: string;\r\n\r\n  @ApiProperty({ description: 'S3 object key' })\r\n  @Column({ length: 500 })\r\n  s3Key: string;\r\n\r\n  @ApiProperty({ description: 'Processing status' })\r\n  @Column({ \r\n    type: 'enum',\r\n    enum: ['pending', 'processing', 'completed', 'failed'],\r\n    default: 'pending'\r\n  })\r\n  status: 'pending' | 'processing' | 'completed' | 'failed';\r\n\r\n  @ApiProperty({ description: 'Processing progress percentage' })\r\n  @Column({ type: 'int', default: 0 })\r\n  processingProgress: number;\r\n\r\n  @ApiProperty({ description: 'Processing error message' })\r\n  @Column({ type: 'text', nullable: true })\r\n  processingError: string;\r\n\r\n  @ApiProperty({ description: 'Quality-specific metadata' })\r\n  @Column({ type: 'jsonb', nullable: true })\r\n  metadata: {\r\n    profile?: string;\r\n    level?: string;\r\n    pixelFormat?: string;\r\n    colorSpace?: string;\r\n    chromaSubsampling?: string;\r\n    bitDepth?: number;\r\n    hdr?: boolean;\r\n    processingTime?: number;\r\n    compressionRatio?: number;\r\n    qualityScore?: number;\r\n  };\r\n\r\n  @ApiProperty({ description: 'Parent video' })\r\n  @ManyToOne(() => Video, (video) => video.qualityVariants, {\r\n    onDelete: 'CASCADE',\r\n  })\r\n  @JoinColumn({ name: 'video_id' })\r\n  video: Video;\r\n\r\n  @ApiProperty({ description: 'Creation date' })\r\n  @CreateDateColumn()\r\n  createdAt: Date;\r\n\r\n  @ApiProperty({ description: 'Last update date' })\r\n  @UpdateDateColumn()\r\n  updatedAt: Date;\r\n\r\n  // Computed properties\r\n  get aspectRatio(): number {\r\n    return this.width / this.height;\r\n  }\r\n\r\n  get isHD(): boolean {\r\n    return this.height >= 720;\r\n  }\r\n\r\n  get isFullHD(): boolean {\r\n    return this.height >= 1080;\r\n  }\r\n\r\n  get is4K(): boolean {\r\n    return this.height >= 2160;\r\n  }\r\n\r\n  get formattedFileSize(): string {\r\n    const units = ['B', 'KB', 'MB', 'GB'];\r\n    let size = Number(this.fileSize);\r\n    let unitIndex = 0;\r\n    \r\n    while (size >= 1024 && unitIndex < units.length - 1) {\r\n      size /= 1024;\r\n      unitIndex++;\r\n    }\r\n    \r\n    return `${size.toFixed(1)} ${units[unitIndex]}`;\r\n  }\r\n\r\n  get qualityLabel(): string {\r\n    if (this.quality === QualityLevel.AUDIO_ONLY) {\r\n      return 'Audio Only';\r\n    }\r\n    return `${this.quality} (${this.bitrate}k)`;\r\n  }\r\n\r\n  get resolution(): string {\r\n    return `${this.width}x${this.height}`;\r\n  }\r\n}\r\n"],"version":3}