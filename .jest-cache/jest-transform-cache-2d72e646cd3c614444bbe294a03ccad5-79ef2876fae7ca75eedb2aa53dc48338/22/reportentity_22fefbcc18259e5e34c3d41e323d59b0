9b88af0b9ec0001b294419bcb71c1188
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b, _c;
Object.defineProperty(exports, "__esModule", { value: true });
exports.Report = exports.ReportFormat = exports.ReportType = void 0;
const typeorm_1 = require("typeorm");
var ReportType;
(function (ReportType) {
    ReportType["SCHEDULED"] = "scheduled";
    ReportType["ON_DEMAND"] = "on_demand";
    ReportType["REAL_TIME"] = "real_time";
})(ReportType || (exports.ReportType = ReportType = {}));
var ReportFormat;
(function (ReportFormat) {
    ReportFormat["JSON"] = "json";
    ReportFormat["CSV"] = "csv";
    ReportFormat["PDF"] = "pdf";
    ReportFormat["EXCEL"] = "excel";
})(ReportFormat || (exports.ReportFormat = ReportFormat = {}));
let Report = class Report {
};
exports.Report = Report;
__decorate([
    (0, typeorm_1.PrimaryGeneratedColumn)("uuid"),
    __metadata("design:type", String)
], Report.prototype, "id", void 0);
__decorate([
    (0, typeorm_1.Column)(),
    __metadata("design:type", String)
], Report.prototype, "name", void 0);
__decorate([
    (0, typeorm_1.Column)("text", { nullable: true }),
    __metadata("design:type", String)
], Report.prototype, "description", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: "enum",
        enum: ReportType,
    }),
    __metadata("design:type", String)
], Report.prototype, "type", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: "enum",
        enum: ReportFormat,
        default: ReportFormat.JSON,
    }),
    __metadata("design:type", String)
], Report.prototype, "format", void 0);
__decorate([
    (0, typeorm_1.Column)("jsonb"),
    __metadata("design:type", Object)
], Report.prototype, "configuration", void 0);
__decorate([
    (0, typeorm_1.Column)("jsonb", { nullable: true }),
    __metadata("design:type", Object)
], Report.prototype, "schedule", void 0);
__decorate([
    (0, typeorm_1.Column)({ default: true }),
    __metadata("design:type", Boolean)
], Report.prototype, "isActive", void 0);
__decorate([
    (0, typeorm_1.Column)({ nullable: true }),
    __metadata("design:type", String)
], Report.prototype, "createdBy", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: "timestamp", nullable: true }),
    __metadata("design:type", typeof (_a = typeof Date !== "undefined" && Date) === "function" ? _a : Object)
], Report.prototype, "lastExecuted", void 0);
__decorate([
    (0, typeorm_1.Column)("jsonb", { nullable: true }),
    __metadata("design:type", Object)
], Report.prototype, "lastResult", void 0);
__decorate([
    (0, typeorm_1.CreateDateColumn)(),
    __metadata("design:type", typeof (_b = typeof Date !== "undefined" && Date) === "function" ? _b : Object)
], Report.prototype, "createdAt", void 0);
__decorate([
    (0, typeorm_1.UpdateDateColumn)(),
    __metadata("design:type", typeof (_c = typeof Date !== "undefined" && Date) === "function" ? _c : Object)
], Report.prototype, "updatedAt", void 0);
exports.Report = Report = __decorate([
    (0, typeorm_1.Entity)("reports")
], Report);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiQzpcXFVzZXJzXFxnLWVrb2hcXERlc2t0b3BcXFN0cmVsbGVyTWluZHMtQmFja2VuZFxcc3JjXFxhbmFseXRpY1xcZW50aXRpZXNcXHJlcG9ydC5lbnRpdHkudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUFBLHFDQUFvRztBQUVwRyxJQUFZLFVBSVg7QUFKRCxXQUFZLFVBQVU7SUFDcEIscUNBQXVCLENBQUE7SUFDdkIscUNBQXVCLENBQUE7SUFDdkIscUNBQXVCLENBQUE7QUFDekIsQ0FBQyxFQUpXLFVBQVUsMEJBQVYsVUFBVSxRQUlyQjtBQUVELElBQVksWUFLWDtBQUxELFdBQVksWUFBWTtJQUN0Qiw2QkFBYSxDQUFBO0lBQ2IsMkJBQVcsQ0FBQTtJQUNYLDJCQUFXLENBQUE7SUFDWCwrQkFBZSxDQUFBO0FBQ2pCLENBQUMsRUFMVyxZQUFZLDRCQUFaLFlBQVksUUFLdkI7QUFHTSxJQUFNLE1BQU0sR0FBWixNQUFNLE1BQU07Q0EyRGxCLENBQUE7QUEzRFksd0JBQU07QUFFakI7SUFEQyxJQUFBLGdDQUFzQixFQUFDLE1BQU0sQ0FBQzs7a0NBQ3JCO0FBR1Y7SUFEQyxJQUFBLGdCQUFNLEdBQUU7O29DQUNHO0FBR1o7SUFEQyxJQUFBLGdCQUFNLEVBQUMsTUFBTSxFQUFFLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBRSxDQUFDOzsyQ0FDZjtBQU1wQjtJQUpDLElBQUEsZ0JBQU0sRUFBQztRQUNOLElBQUksRUFBRSxNQUFNO1FBQ1osSUFBSSxFQUFFLFVBQVU7S0FDakIsQ0FBQzs7b0NBQ2M7QUFPaEI7SUFMQyxJQUFBLGdCQUFNLEVBQUM7UUFDTixJQUFJLEVBQUUsTUFBTTtRQUNaLElBQUksRUFBRSxZQUFZO1FBQ2xCLE9BQU8sRUFBRSxZQUFZLENBQUMsSUFBSTtLQUMzQixDQUFDOztzQ0FDa0I7QUFHcEI7SUFEQyxJQUFBLGdCQUFNLEVBQUMsT0FBTyxDQUFDOzs2Q0FVZjtBQUdEO0lBREMsSUFBQSxnQkFBTSxFQUFDLE9BQU8sRUFBRSxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUUsQ0FBQzs7d0NBS25DO0FBR0Q7SUFEQyxJQUFBLGdCQUFNLEVBQUMsRUFBRSxPQUFPLEVBQUUsSUFBSSxFQUFFLENBQUM7O3dDQUNUO0FBR2pCO0lBREMsSUFBQSxnQkFBTSxFQUFDLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBRSxDQUFDOzt5Q0FDVDtBQUdsQjtJQURDLElBQUEsZ0JBQU0sRUFBQyxFQUFFLElBQUksRUFBRSxXQUFXLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBRSxDQUFDO2tEQUMvQixJQUFJLG9CQUFKLElBQUk7NENBQUE7QUFHbkI7SUFEQyxJQUFBLGdCQUFNLEVBQUMsT0FBTyxFQUFFLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBRSxDQUFDOzswQ0FDcEI7QUFHaEI7SUFEQyxJQUFBLDBCQUFnQixHQUFFO2tEQUNSLElBQUksb0JBQUosSUFBSTt5Q0FBQTtBQUdmO0lBREMsSUFBQSwwQkFBZ0IsR0FBRTtrREFDUixJQUFJLG9CQUFKLElBQUk7eUNBQUE7aUJBMURKLE1BQU07SUFEbEIsSUFBQSxnQkFBTSxFQUFDLFNBQVMsQ0FBQztHQUNMLE1BQU0sQ0EyRGxCIiwibmFtZXMiOltdLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcZy1la29oXFxEZXNrdG9wXFxTdHJlbGxlck1pbmRzLUJhY2tlbmRcXHNyY1xcYW5hbHl0aWNcXGVudGl0aWVzXFxyZXBvcnQuZW50aXR5LnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEVudGl0eSwgUHJpbWFyeUdlbmVyYXRlZENvbHVtbiwgQ29sdW1uLCBDcmVhdGVEYXRlQ29sdW1uLCBVcGRhdGVEYXRlQ29sdW1uIH0gZnJvbSBcInR5cGVvcm1cIlxyXG5cclxuZXhwb3J0IGVudW0gUmVwb3J0VHlwZSB7XHJcbiAgU0NIRURVTEVEID0gXCJzY2hlZHVsZWRcIixcclxuICBPTl9ERU1BTkQgPSBcIm9uX2RlbWFuZFwiLFxyXG4gIFJFQUxfVElNRSA9IFwicmVhbF90aW1lXCIsXHJcbn1cclxuXHJcbmV4cG9ydCBlbnVtIFJlcG9ydEZvcm1hdCB7XHJcbiAgSlNPTiA9IFwianNvblwiLFxyXG4gIENTViA9IFwiY3N2XCIsXHJcbiAgUERGID0gXCJwZGZcIixcclxuICBFWENFTCA9IFwiZXhjZWxcIixcclxufVxyXG5cclxuQEVudGl0eShcInJlcG9ydHNcIilcclxuZXhwb3J0IGNsYXNzIFJlcG9ydCB7XHJcbiAgQFByaW1hcnlHZW5lcmF0ZWRDb2x1bW4oXCJ1dWlkXCIpXHJcbiAgaWQ6IHN0cmluZ1xyXG5cclxuICBAQ29sdW1uKClcclxuICBuYW1lOiBzdHJpbmdcclxuXHJcbiAgQENvbHVtbihcInRleHRcIiwgeyBudWxsYWJsZTogdHJ1ZSB9KVxyXG4gIGRlc2NyaXB0aW9uPzogc3RyaW5nXHJcblxyXG4gIEBDb2x1bW4oe1xyXG4gICAgdHlwZTogXCJlbnVtXCIsXHJcbiAgICBlbnVtOiBSZXBvcnRUeXBlLFxyXG4gIH0pXHJcbiAgdHlwZTogUmVwb3J0VHlwZVxyXG5cclxuICBAQ29sdW1uKHtcclxuICAgIHR5cGU6IFwiZW51bVwiLFxyXG4gICAgZW51bTogUmVwb3J0Rm9ybWF0LFxyXG4gICAgZGVmYXVsdDogUmVwb3J0Rm9ybWF0LkpTT04sXHJcbiAgfSlcclxuICBmb3JtYXQ6IFJlcG9ydEZvcm1hdFxyXG5cclxuICBAQ29sdW1uKFwianNvbmJcIilcclxuICBjb25maWd1cmF0aW9uOiB7XHJcbiAgICBtZXRyaWNzOiBzdHJpbmdbXVxyXG4gICAgZmlsdGVyczogUmVjb3JkPHN0cmluZywgYW55PlxyXG4gICAgZ3JvdXBCeTogc3RyaW5nW11cclxuICAgIHRpbWVSYW5nZToge1xyXG4gICAgICBzdGFydDogc3RyaW5nXHJcbiAgICAgIGVuZDogc3RyaW5nXHJcbiAgICB9XHJcbiAgICBhZ2dyZWdhdGlvbnM6IFJlY29yZDxzdHJpbmcsIHN0cmluZz5cclxuICB9XHJcblxyXG4gIEBDb2x1bW4oXCJqc29uYlwiLCB7IG51bGxhYmxlOiB0cnVlIH0pXHJcbiAgc2NoZWR1bGU/OiB7XHJcbiAgICBjcm9uOiBzdHJpbmdcclxuICAgIHRpbWV6b25lOiBzdHJpbmdcclxuICAgIHJlY2lwaWVudHM6IHN0cmluZ1tdXHJcbiAgfVxyXG5cclxuICBAQ29sdW1uKHsgZGVmYXVsdDogdHJ1ZSB9KVxyXG4gIGlzQWN0aXZlOiBib29sZWFuXHJcblxyXG4gIEBDb2x1bW4oeyBudWxsYWJsZTogdHJ1ZSB9KVxyXG4gIGNyZWF0ZWRCeT86IHN0cmluZ1xyXG5cclxuICBAQ29sdW1uKHsgdHlwZTogXCJ0aW1lc3RhbXBcIiwgbnVsbGFibGU6IHRydWUgfSlcclxuICBsYXN0RXhlY3V0ZWQ/OiBEYXRlXHJcblxyXG4gIEBDb2x1bW4oXCJqc29uYlwiLCB7IG51bGxhYmxlOiB0cnVlIH0pXHJcbiAgbGFzdFJlc3VsdD86IGFueVxyXG5cclxuICBAQ3JlYXRlRGF0ZUNvbHVtbigpXHJcbiAgY3JlYXRlZEF0OiBEYXRlXHJcblxyXG4gIEBVcGRhdGVEYXRlQ29sdW1uKClcclxuICB1cGRhdGVkQXQ6IERhdGVcclxufVxyXG4iXSwidmVyc2lvbiI6M30=