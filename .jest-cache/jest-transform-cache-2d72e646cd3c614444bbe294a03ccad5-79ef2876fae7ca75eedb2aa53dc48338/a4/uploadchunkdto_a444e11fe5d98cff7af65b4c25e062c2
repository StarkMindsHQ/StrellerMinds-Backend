5c4de3f8bb301ed49c8265b6c74a277d
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.UploadChunkDto = void 0;
const class_validator_1 = require("class-validator");
class UploadChunkDto {
}
exports.UploadChunkDto = UploadChunkDto;
__decorate([
    (0, class_validator_1.IsNotEmpty)(),
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], UploadChunkDto.prototype, "uploadId", void 0);
__decorate([
    (0, class_validator_1.IsNotEmpty)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], UploadChunkDto.prototype, "chunkIndex", void 0);
__decorate([
    (0, class_validator_1.IsNotEmpty)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], UploadChunkDto.prototype, "totalChunks", void 0);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiQzpcXFVzZXJzXFxnLWVrb2hcXERlc2t0b3BcXFN0cmVsbGVyTWluZHMtQmFja2VuZFxcc3JjXFxmaWxlc1xcZHRvXFx1cGxvYWQtY2h1bmsuZHRvLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUFBLHFEQUE4RDtBQUU5RCxNQUFhLGNBQWM7Q0FZMUI7QUFaRCx3Q0FZQztBQVRDO0lBRkMsSUFBQSw0QkFBVSxHQUFFO0lBQ1osSUFBQSwwQkFBUSxHQUFFOztnREFDTTtBQUlqQjtJQUZDLElBQUEsNEJBQVUsR0FBRTtJQUNaLElBQUEsdUJBQUssR0FBRTs7a0RBQ1c7QUFJbkI7SUFGQyxJQUFBLDRCQUFVLEdBQUU7SUFDWixJQUFBLHVCQUFLLEdBQUU7O21EQUNZIiwibmFtZXMiOltdLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcZy1la29oXFxEZXNrdG9wXFxTdHJlbGxlck1pbmRzLUJhY2tlbmRcXHNyY1xcZmlsZXNcXGR0b1xcdXBsb2FkLWNodW5rLmR0by50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJc05vdEVtcHR5LCBJc0ludCwgSXNTdHJpbmcgfSBmcm9tICdjbGFzcy12YWxpZGF0b3InO1xyXG5cclxuZXhwb3J0IGNsYXNzIFVwbG9hZENodW5rRHRvIHtcclxuICBASXNOb3RFbXB0eSgpXHJcbiAgQElzU3RyaW5nKClcclxuICB1cGxvYWRJZDogc3RyaW5nO1xyXG5cclxuICBASXNOb3RFbXB0eSgpXHJcbiAgQElzSW50KClcclxuICBjaHVua0luZGV4OiBudW1iZXI7XHJcblxyXG4gIEBJc05vdEVtcHR5KClcclxuICBASXNJbnQoKVxyXG4gIHRvdGFsQ2h1bmtzOiBudW1iZXI7XHJcbn1cclxuIl0sInZlcnNpb24iOjN9