98d2eb22aa961b5277be8ed665044132
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var EmailProcessor_1;
var _a, _b;
Object.defineProperty(exports, "__esModule", { value: true });
exports.EmailProcessor = void 0;
const bull_1 = require("@nestjs/bull");
const common_1 = require("@nestjs/common");
const bull_2 = require("bull");
const email_service_1 = require("./email.service");
let EmailProcessor = EmailProcessor_1 = class EmailProcessor {
    constructor(emailService) {
        this.emailService = emailService;
        this.logger = new common_1.Logger(EmailProcessor_1.name);
    }
    async handleSendEmail(job) {
        this.logger.debug(`Processing email job ${job.id}`);
        try {
            await this.emailService.sendImmediate(job.data);
            this.logger.debug(`Email job ${job.id} completed successfully`);
        }
        catch (error) {
            this.logger.error(`Failed to process email job ${job.id}: ${error.message}`, error.stack);
            throw error; // Rethrow to trigger Bull's retry mechanism
        }
    }
};
exports.EmailProcessor = EmailProcessor;
__decorate([
    (0, bull_1.Process)('send'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_b = typeof bull_2.Job !== "undefined" && bull_2.Job) === "function" ? _b : Object]),
    __metadata("design:returntype", Promise)
], EmailProcessor.prototype, "handleSendEmail", null);
exports.EmailProcessor = EmailProcessor = EmailProcessor_1 = __decorate([
    (0, bull_1.Processor)('email'),
    __metadata("design:paramtypes", [typeof (_a = typeof email_service_1.EmailService !== "undefined" && email_service_1.EmailService) === "function" ? _a : Object])
], EmailProcessor);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiQzpcXFVzZXJzXFxnLWVrb2hcXERlc2t0b3BcXFN0cmVsbGVyTWluZHMtQmFja2VuZFxcc3JjXFxlbWFpbFxcZW1haWwucHJvY2Vzc29yLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQUEsdUNBQWtEO0FBQ2xELDJDQUF3QztBQUN4QywrQkFBMkI7QUFDM0IsbURBQTZEO0FBR3RELElBQU0sY0FBYyxzQkFBcEIsTUFBTSxjQUFjO0lBR3pCLFlBQTZCLFlBQTBCO1FBQTFCLGlCQUFZLEdBQVosWUFBWSxDQUFjO1FBRnRDLFdBQU0sR0FBRyxJQUFJLGVBQU0sQ0FBQyxnQkFBYyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBRUEsQ0FBQztJQUdyRCxBQUFOLEtBQUssQ0FBQyxlQUFlLENBQUMsR0FBc0I7UUFDMUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsd0JBQXdCLEdBQUcsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDO1FBQ3BELElBQUksQ0FBQztZQUNILE1BQU0sSUFBSSxDQUFDLFlBQVksQ0FBQyxhQUFhLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDO1lBQ2hELElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLGFBQWEsR0FBRyxDQUFDLEVBQUUseUJBQXlCLENBQUMsQ0FBQztRQUNsRSxDQUFDO1FBQUMsT0FBTyxLQUFLLEVBQUUsQ0FBQztZQUNmLElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUNmLCtCQUErQixHQUFHLENBQUMsRUFBRSxLQUFLLEtBQUssQ0FBQyxPQUFPLEVBQUUsRUFDekQsS0FBSyxDQUFDLEtBQUssQ0FDWixDQUFDO1lBQ0YsTUFBTSxLQUFLLENBQUMsQ0FBQyw0Q0FBNEM7UUFDM0QsQ0FBQztJQUNILENBQUM7Q0FDRixDQUFBO0FBbkJZLHdDQUFjO0FBTW5CO0lBREwsSUFBQSxjQUFPLEVBQUMsTUFBTSxDQUFDOzt5REFDVyxVQUFHLG9CQUFILFVBQUc7O3FEQVk3Qjt5QkFsQlUsY0FBYztJQUQxQixJQUFBLGdCQUFTLEVBQUMsT0FBTyxDQUFDO3lEQUkwQiw0QkFBWSxvQkFBWiw0QkFBWTtHQUg1QyxjQUFjLENBbUIxQiIsIm5hbWVzIjpbXSwic291cmNlcyI6WyJDOlxcVXNlcnNcXGctZWtvaFxcRGVza3RvcFxcU3RyZWxsZXJNaW5kcy1CYWNrZW5kXFxzcmNcXGVtYWlsXFxlbWFpbC5wcm9jZXNzb3IudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUHJvY2VzcywgUHJvY2Vzc29yIH0gZnJvbSAnQG5lc3Rqcy9idWxsJztcclxuaW1wb3J0IHsgTG9nZ2VyIH0gZnJvbSAnQG5lc3Rqcy9jb21tb24nO1xyXG5pbXBvcnQgeyBKb2IgfSBmcm9tICdidWxsJztcclxuaW1wb3J0IHsgRW1haWxTZXJ2aWNlLCBFbWFpbE9wdGlvbnMgfSBmcm9tICcuL2VtYWlsLnNlcnZpY2UnO1xyXG5cclxuQFByb2Nlc3NvcignZW1haWwnKVxyXG5leHBvcnQgY2xhc3MgRW1haWxQcm9jZXNzb3Ige1xyXG4gIHByaXZhdGUgcmVhZG9ubHkgbG9nZ2VyID0gbmV3IExvZ2dlcihFbWFpbFByb2Nlc3Nvci5uYW1lKTtcclxuXHJcbiAgY29uc3RydWN0b3IocHJpdmF0ZSByZWFkb25seSBlbWFpbFNlcnZpY2U6IEVtYWlsU2VydmljZSkge31cclxuXHJcbiAgQFByb2Nlc3MoJ3NlbmQnKVxyXG4gIGFzeW5jIGhhbmRsZVNlbmRFbWFpbChqb2I6IEpvYjxFbWFpbE9wdGlvbnM+KSB7XHJcbiAgICB0aGlzLmxvZ2dlci5kZWJ1ZyhgUHJvY2Vzc2luZyBlbWFpbCBqb2IgJHtqb2IuaWR9YCk7XHJcbiAgICB0cnkge1xyXG4gICAgICBhd2FpdCB0aGlzLmVtYWlsU2VydmljZS5zZW5kSW1tZWRpYXRlKGpvYi5kYXRhKTtcclxuICAgICAgdGhpcy5sb2dnZXIuZGVidWcoYEVtYWlsIGpvYiAke2pvYi5pZH0gY29tcGxldGVkIHN1Y2Nlc3NmdWxseWApO1xyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgdGhpcy5sb2dnZXIuZXJyb3IoXHJcbiAgICAgICAgYEZhaWxlZCB0byBwcm9jZXNzIGVtYWlsIGpvYiAke2pvYi5pZH06ICR7ZXJyb3IubWVzc2FnZX1gLFxyXG4gICAgICAgIGVycm9yLnN0YWNrLFxyXG4gICAgICApO1xyXG4gICAgICB0aHJvdyBlcnJvcjsgLy8gUmV0aHJvdyB0byB0cmlnZ2VyIEJ1bGwncyByZXRyeSBtZWNoYW5pc21cclxuICAgIH1cclxuICB9XHJcbn1cclxuIl0sInZlcnNpb24iOjN9