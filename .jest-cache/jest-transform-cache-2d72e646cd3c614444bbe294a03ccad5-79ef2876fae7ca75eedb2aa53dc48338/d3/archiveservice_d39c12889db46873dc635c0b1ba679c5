2a13bc5a9ec00b849acba6b8b97006e7
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a, _b, _c, _d, _e, _f, _g;
Object.defineProperty(exports, "__esModule", { value: true });
exports.ArchiveService = void 0;
const common_1 = require("@nestjs/common");
const typeorm_1 = require("@nestjs/typeorm");
const typeorm_2 = require("typeorm");
const user_entity_1 = require("../../users/entities/user.entity");
const archived_user_entity_1 = require("../../users/entities/archived-user.entity");
const user_profile_entity_1 = require("../../user-profiles/entities/user-profile.entity");
const archived_user_profile_entity_1 = require("../../user-profiles/entities/archived-user-profile.entity");
const archived_payment_entity_1 = require("../../payment/entities/archived-payment.entity");
const archived_notification_entity_1 = require("../../notification/entities/archived-notification.entity");
let ArchiveService = class ArchiveService {
    constructor(userRepo, archivedUserRepo, profileRepo, archivedProfileRepo, archivedPaymentRepo, notificationRepo, archivedNotificationRepo) {
        this.userRepo = userRepo;
        this.archivedUserRepo = archivedUserRepo;
        this.profileRepo = profileRepo;
        this.archivedProfileRepo = archivedProfileRepo;
        this.archivedPaymentRepo = archivedPaymentRepo;
        this.notificationRepo = notificationRepo;
        this.archivedNotificationRepo = archivedNotificationRepo;
    }
    // _______________________ Archive Users ________________________________________
    async archiveOldUsers() {
        const oneYearAgo = new Date();
        oneYearAgo.setFullYear(oneYearAgo.getFullYear() - 1);
        const oldUsers = await this.userRepo.find({
            where: { createdAt: (0, typeorm_2.LessThan)(oneYearAgo) },
        });
        const archived = oldUsers.map((user) => {
            const archivedUser = new archived_user_entity_1.ArchivedUser();
            Object.assign(archivedUser, user);
            archivedUser.archivedAt = new Date();
            return archivedUser;
        });
        await this.archivedUserRepo.save(archived);
        await this.userRepo.remove(oldUsers);
    }
    //______________________________________ Archive UserProfiles ____________________________________
    async archiveOldUserProfiles() {
        const oneYearAgo = new Date();
        oneYearAgo.setFullYear(oneYearAgo.getFullYear() - 1);
        const oldProfiles = await this.profileRepo.find({
            where: { createdAt: (0, typeorm_2.LessThan)(oneYearAgo) },
        });
        const archived = oldProfiles.map((profile) => {
            const archivedProfile = new archived_user_profile_entity_1.ArchivedUserProfile();
            Object.assign(archivedProfile, profile);
            archivedProfile.archivedAt = new Date();
            return archivedProfile;
        });
        await this.archivedProfileRepo.save(archived);
        await this.profileRepo.remove(oldProfiles);
    }
};
exports.ArchiveService = ArchiveService;
exports.ArchiveService = ArchiveService = __decorate([
    (0, common_1.Injectable)(),
    __param(0, (0, typeorm_1.InjectRepository)(user_entity_1.User)),
    __param(1, (0, typeorm_1.InjectRepository)(archived_user_entity_1.ArchivedUser)),
    __param(2, (0, typeorm_1.InjectRepository)(user_profile_entity_1.UserProfile)),
    __param(3, (0, typeorm_1.InjectRepository)(archived_user_profile_entity_1.ArchivedUserProfile)),
    __param(4, (0, typeorm_1.InjectRepository)(archived_payment_entity_1.ArchivedPayment)),
    __param(5, (0, typeorm_1.InjectRepository)(Notification)),
    __param(6, (0, typeorm_1.InjectRepository)(archived_notification_entity_1.ArchivedNotification)),
    __metadata("design:paramtypes", [typeof (_a = typeof typeorm_2.Repository !== "undefined" && typeorm_2.Repository) === "function" ? _a : Object, typeof (_b = typeof typeorm_2.Repository !== "undefined" && typeorm_2.Repository) === "function" ? _b : Object, typeof (_c = typeof typeorm_2.Repository !== "undefined" && typeorm_2.Repository) === "function" ? _c : Object, typeof (_d = typeof typeorm_2.Repository !== "undefined" && typeorm_2.Repository) === "function" ? _d : Object, typeof (_e = typeof typeorm_2.Repository !== "undefined" && typeorm_2.Repository) === "function" ? _e : Object, typeof (_f = typeof typeorm_2.Repository !== "undefined" && typeorm_2.Repository) === "function" ? _f : Object, typeof (_g = typeof typeorm_2.Repository !== "undefined" && typeorm_2.Repository) === "function" ? _g : Object])
], ArchiveService);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiQzpcXFVzZXJzXFxnLWVrb2hcXERlc2t0b3BcXFN0cmVsbGVyTWluZHMtQmFja2VuZFxcc3JjXFxhcmNoaXZlXFxzZXJ2aWNlc1xcYXJjaGl2ZS5zZXJ2aWNlLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSwyQ0FBNEM7QUFDNUMsNkNBQW1EO0FBQ25ELHFDQUErQztBQUMvQyxrRUFBd0Q7QUFDeEQsb0ZBQXlFO0FBQ3pFLDBGQUErRTtBQUMvRSw0R0FBZ0c7QUFDaEcsNEZBQWlGO0FBQ2pGLDJHQUFnRztBQUd6RixJQUFNLGNBQWMsR0FBcEIsTUFBTSxjQUFjO0lBQ3pCLFlBRVUsUUFBMEIsRUFHMUIsZ0JBQTBDLEVBRzFDLFdBQW9DLEVBR3BDLG1CQUFvRCxFQUtwRCxtQkFBZ0QsRUFHaEQsZ0JBQTBDLEVBRzFDLHdCQUEwRDtRQXBCMUQsYUFBUSxHQUFSLFFBQVEsQ0FBa0I7UUFHMUIscUJBQWdCLEdBQWhCLGdCQUFnQixDQUEwQjtRQUcxQyxnQkFBVyxHQUFYLFdBQVcsQ0FBeUI7UUFHcEMsd0JBQW1CLEdBQW5CLG1CQUFtQixDQUFpQztRQUtwRCx3QkFBbUIsR0FBbkIsbUJBQW1CLENBQTZCO1FBR2hELHFCQUFnQixHQUFoQixnQkFBZ0IsQ0FBMEI7UUFHMUMsNkJBQXdCLEdBQXhCLHdCQUF3QixDQUFrQztJQUNqRSxDQUFDO0lBRUosaUZBQWlGO0lBRTFFLEtBQUssQ0FBQyxlQUFlO1FBQzFCLE1BQU0sVUFBVSxHQUFHLElBQUksSUFBSSxFQUFFLENBQUM7UUFDOUIsVUFBVSxDQUFDLFdBQVcsQ0FBQyxVQUFVLENBQUMsV0FBVyxFQUFFLEdBQUcsQ0FBQyxDQUFDLENBQUM7UUFFckQsTUFBTSxRQUFRLEdBQUcsTUFBTSxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQztZQUN4QyxLQUFLLEVBQUUsRUFBRSxTQUFTLEVBQUUsSUFBQSxrQkFBUSxFQUFDLFVBQVUsQ0FBQyxFQUFFO1NBQzNDLENBQUMsQ0FBQztRQUVILE1BQU0sUUFBUSxHQUFHLFFBQVEsQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLEVBQUUsRUFBRTtZQUNyQyxNQUFNLFlBQVksR0FBRyxJQUFJLG1DQUFZLEVBQUUsQ0FBQztZQUN4QyxNQUFNLENBQUMsTUFBTSxDQUFDLFlBQVksRUFBRSxJQUFJLENBQUMsQ0FBQztZQUNsQyxZQUFZLENBQUMsVUFBVSxHQUFHLElBQUksSUFBSSxFQUFFLENBQUM7WUFDckMsT0FBTyxZQUFZLENBQUM7UUFDdEIsQ0FBQyxDQUFDLENBQUM7UUFFSCxNQUFNLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDM0MsTUFBTSxJQUFJLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUN2QyxDQUFDO0lBRUQsa0dBQWtHO0lBRTNGLEtBQUssQ0FBQyxzQkFBc0I7UUFDakMsTUFBTSxVQUFVLEdBQUcsSUFBSSxJQUFJLEVBQUUsQ0FBQztRQUM5QixVQUFVLENBQUMsV0FBVyxDQUFDLFVBQVUsQ0FBQyxXQUFXLEVBQUUsR0FBRyxDQUFDLENBQUMsQ0FBQztRQUVyRCxNQUFNLFdBQVcsR0FBRyxNQUFNLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDO1lBQzlDLEtBQUssRUFBRSxFQUFFLFNBQVMsRUFBRSxJQUFBLGtCQUFRLEVBQUMsVUFBVSxDQUFDLEVBQUU7U0FDM0MsQ0FBQyxDQUFDO1FBRUgsTUFBTSxRQUFRLEdBQUcsV0FBVyxDQUFDLEdBQUcsQ0FBQyxDQUFDLE9BQU8sRUFBRSxFQUFFO1lBQzNDLE1BQU0sZUFBZSxHQUFHLElBQUksa0RBQW1CLEVBQUUsQ0FBQztZQUNsRCxNQUFNLENBQUMsTUFBTSxDQUFDLGVBQWUsRUFBRSxPQUFPLENBQUMsQ0FBQztZQUN4QyxlQUFlLENBQUMsVUFBVSxHQUFHLElBQUksSUFBSSxFQUFFLENBQUM7WUFDeEMsT0FBTyxlQUFlLENBQUM7UUFDekIsQ0FBQyxDQUFDLENBQUM7UUFFSCxNQUFNLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDOUMsTUFBTSxJQUFJLENBQUMsV0FBVyxDQUFDLE1BQU0sQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUM3QyxDQUFDO0NBMkNGLENBQUE7QUE3R1ksd0NBQWM7eUJBQWQsY0FBYztJQUQxQixJQUFBLG1CQUFVLEdBQUU7SUFHUixXQUFBLElBQUEsMEJBQWdCLEVBQUMsa0JBQUksQ0FBQyxDQUFBO0lBR3RCLFdBQUEsSUFBQSwwQkFBZ0IsRUFBQyxtQ0FBWSxDQUFDLENBQUE7SUFHOUIsV0FBQSxJQUFBLDBCQUFnQixFQUFDLGlDQUFXLENBQUMsQ0FBQTtJQUc3QixXQUFBLElBQUEsMEJBQWdCLEVBQUMsa0RBQW1CLENBQUMsQ0FBQTtJQUtyQyxXQUFBLElBQUEsMEJBQWdCLEVBQUMseUNBQWUsQ0FBQyxDQUFBO0lBR2pDLFdBQUEsSUFBQSwwQkFBZ0IsRUFBQyxZQUFZLENBQUMsQ0FBQTtJQUc5QixXQUFBLElBQUEsMEJBQWdCLEVBQUMsbURBQW9CLENBQUMsQ0FBQTt5REFuQnJCLG9CQUFVLG9CQUFWLG9CQUFVLG9EQUdGLG9CQUFVLG9CQUFWLG9CQUFVLG9EQUdmLG9CQUFVLG9CQUFWLG9CQUFVLG9EQUdGLG9CQUFVLG9CQUFWLG9CQUFVLG9EQUtWLG9CQUFVLG9CQUFWLG9CQUFVLG9EQUdiLG9CQUFVLG9CQUFWLG9CQUFVLG9EQUdGLG9CQUFVLG9CQUFWLG9CQUFVO0dBdkJuQyxjQUFjLENBNkcxQiIsIm5hbWVzIjpbXSwic291cmNlcyI6WyJDOlxcVXNlcnNcXGctZWtvaFxcRGVza3RvcFxcU3RyZWxsZXJNaW5kcy1CYWNrZW5kXFxzcmNcXGFyY2hpdmVcXHNlcnZpY2VzXFxhcmNoaXZlLnNlcnZpY2UudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0BuZXN0anMvY29tbW9uJztcclxuaW1wb3J0IHsgSW5qZWN0UmVwb3NpdG9yeSB9IGZyb20gJ0BuZXN0anMvdHlwZW9ybSc7XHJcbmltcG9ydCB7IExlc3NUaGFuLCBSZXBvc2l0b3J5IH0gZnJvbSAndHlwZW9ybSc7XHJcbmltcG9ydCB7IFVzZXIgfSBmcm9tICcuLi8uLi91c2Vycy9lbnRpdGllcy91c2VyLmVudGl0eSc7XHJcbmltcG9ydCB7IEFyY2hpdmVkVXNlciB9IGZyb20gJy4uLy4uL3VzZXJzL2VudGl0aWVzL2FyY2hpdmVkLXVzZXIuZW50aXR5JztcclxuaW1wb3J0IHsgVXNlclByb2ZpbGUgfSBmcm9tICcuLi8uLi91c2VyLXByb2ZpbGVzL2VudGl0aWVzL3VzZXItcHJvZmlsZS5lbnRpdHknO1xyXG5pbXBvcnQgeyBBcmNoaXZlZFVzZXJQcm9maWxlIH0gZnJvbSAnLi4vLi4vdXNlci1wcm9maWxlcy9lbnRpdGllcy9hcmNoaXZlZC11c2VyLXByb2ZpbGUuZW50aXR5JztcclxuaW1wb3J0IHsgQXJjaGl2ZWRQYXltZW50IH0gZnJvbSAnLi4vLi4vcGF5bWVudC9lbnRpdGllcy9hcmNoaXZlZC1wYXltZW50LmVudGl0eSc7XHJcbmltcG9ydCB7IEFyY2hpdmVkTm90aWZpY2F0aW9uIH0gZnJvbSAnLi4vLi4vbm90aWZpY2F0aW9uL2VudGl0aWVzL2FyY2hpdmVkLW5vdGlmaWNhdGlvbi5lbnRpdHknO1xyXG5cclxuQEluamVjdGFibGUoKVxyXG5leHBvcnQgY2xhc3MgQXJjaGl2ZVNlcnZpY2Uge1xyXG4gIGNvbnN0cnVjdG9yKFxyXG4gICAgQEluamVjdFJlcG9zaXRvcnkoVXNlcilcclxuICAgIHByaXZhdGUgdXNlclJlcG86IFJlcG9zaXRvcnk8VXNlcj4sXHJcblxyXG4gICAgQEluamVjdFJlcG9zaXRvcnkoQXJjaGl2ZWRVc2VyKVxyXG4gICAgcHJpdmF0ZSBhcmNoaXZlZFVzZXJSZXBvOiBSZXBvc2l0b3J5PEFyY2hpdmVkVXNlcj4sXHJcblxyXG4gICAgQEluamVjdFJlcG9zaXRvcnkoVXNlclByb2ZpbGUpXHJcbiAgICBwcml2YXRlIHByb2ZpbGVSZXBvOiBSZXBvc2l0b3J5PFVzZXJQcm9maWxlPixcclxuXHJcbiAgICBASW5qZWN0UmVwb3NpdG9yeShBcmNoaXZlZFVzZXJQcm9maWxlKVxyXG4gICAgcHJpdmF0ZSBhcmNoaXZlZFByb2ZpbGVSZXBvOiBSZXBvc2l0b3J5PEFyY2hpdmVkVXNlclByb2ZpbGU+LFxyXG5cclxuICAgIFxyXG5cclxuICAgIEBJbmplY3RSZXBvc2l0b3J5KEFyY2hpdmVkUGF5bWVudClcclxuICAgIHByaXZhdGUgYXJjaGl2ZWRQYXltZW50UmVwbzogUmVwb3NpdG9yeTxBcmNoaXZlZFBheW1lbnQ+LFxyXG5cclxuICAgIEBJbmplY3RSZXBvc2l0b3J5KE5vdGlmaWNhdGlvbilcclxuICAgIHByaXZhdGUgbm90aWZpY2F0aW9uUmVwbzogUmVwb3NpdG9yeTxOb3RpZmljYXRpb24+LFxyXG5cclxuICAgIEBJbmplY3RSZXBvc2l0b3J5KEFyY2hpdmVkTm90aWZpY2F0aW9uKVxyXG4gICAgcHJpdmF0ZSBhcmNoaXZlZE5vdGlmaWNhdGlvblJlcG86IFJlcG9zaXRvcnk8QXJjaGl2ZWROb3RpZmljYXRpb24+LFxyXG4gICkge31cclxuXHJcbiAgLy8gX19fX19fX19fX19fX19fX19fX19fX18gQXJjaGl2ZSBVc2VycyBfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXHJcblxyXG4gIHB1YmxpYyBhc3luYyBhcmNoaXZlT2xkVXNlcnMoKTogUHJvbWlzZTx2b2lkPiB7XHJcbiAgICBjb25zdCBvbmVZZWFyQWdvID0gbmV3IERhdGUoKTtcclxuICAgIG9uZVllYXJBZ28uc2V0RnVsbFllYXIob25lWWVhckFnby5nZXRGdWxsWWVhcigpIC0gMSk7XHJcblxyXG4gICAgY29uc3Qgb2xkVXNlcnMgPSBhd2FpdCB0aGlzLnVzZXJSZXBvLmZpbmQoe1xyXG4gICAgICB3aGVyZTogeyBjcmVhdGVkQXQ6IExlc3NUaGFuKG9uZVllYXJBZ28pIH0sXHJcbiAgICB9KTtcclxuXHJcbiAgICBjb25zdCBhcmNoaXZlZCA9IG9sZFVzZXJzLm1hcCgodXNlcikgPT4ge1xyXG4gICAgICBjb25zdCBhcmNoaXZlZFVzZXIgPSBuZXcgQXJjaGl2ZWRVc2VyKCk7XHJcbiAgICAgIE9iamVjdC5hc3NpZ24oYXJjaGl2ZWRVc2VyLCB1c2VyKTtcclxuICAgICAgYXJjaGl2ZWRVc2VyLmFyY2hpdmVkQXQgPSBuZXcgRGF0ZSgpO1xyXG4gICAgICByZXR1cm4gYXJjaGl2ZWRVc2VyO1xyXG4gICAgfSk7XHJcblxyXG4gICAgYXdhaXQgdGhpcy5hcmNoaXZlZFVzZXJSZXBvLnNhdmUoYXJjaGl2ZWQpO1xyXG4gICAgYXdhaXQgdGhpcy51c2VyUmVwby5yZW1vdmUob2xkVXNlcnMpO1xyXG4gIH1cclxuXHJcbiAgLy9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXyBBcmNoaXZlIFVzZXJQcm9maWxlcyBfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19cclxuXHJcbiAgcHVibGljIGFzeW5jIGFyY2hpdmVPbGRVc2VyUHJvZmlsZXMoKTogUHJvbWlzZTx2b2lkPiB7XHJcbiAgICBjb25zdCBvbmVZZWFyQWdvID0gbmV3IERhdGUoKTtcclxuICAgIG9uZVllYXJBZ28uc2V0RnVsbFllYXIob25lWWVhckFnby5nZXRGdWxsWWVhcigpIC0gMSk7XHJcblxyXG4gICAgY29uc3Qgb2xkUHJvZmlsZXMgPSBhd2FpdCB0aGlzLnByb2ZpbGVSZXBvLmZpbmQoe1xyXG4gICAgICB3aGVyZTogeyBjcmVhdGVkQXQ6IExlc3NUaGFuKG9uZVllYXJBZ28pIH0sXHJcbiAgICB9KTtcclxuXHJcbiAgICBjb25zdCBhcmNoaXZlZCA9IG9sZFByb2ZpbGVzLm1hcCgocHJvZmlsZSkgPT4ge1xyXG4gICAgICBjb25zdCBhcmNoaXZlZFByb2ZpbGUgPSBuZXcgQXJjaGl2ZWRVc2VyUHJvZmlsZSgpO1xyXG4gICAgICBPYmplY3QuYXNzaWduKGFyY2hpdmVkUHJvZmlsZSwgcHJvZmlsZSk7XHJcbiAgICAgIGFyY2hpdmVkUHJvZmlsZS5hcmNoaXZlZEF0ID0gbmV3IERhdGUoKTtcclxuICAgICAgcmV0dXJuIGFyY2hpdmVkUHJvZmlsZTtcclxuICAgIH0pO1xyXG5cclxuICAgIGF3YWl0IHRoaXMuYXJjaGl2ZWRQcm9maWxlUmVwby5zYXZlKGFyY2hpdmVkKTtcclxuICAgIGF3YWl0IHRoaXMucHJvZmlsZVJlcG8ucmVtb3ZlKG9sZFByb2ZpbGVzKTtcclxuICB9XHJcblxyXG4gIC8vIF9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18gQXJjaGl2ZSBQYXltZW50cyBfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXHJcblxyXG4gIC8vIHB1YmxpYyBhc3luYyBhcmNoaXZlT2xkUGF5bWVudHMoKTogUHJvbWlzZTx2b2lkPiB7XHJcbiAgLy8gICBjb25zdCBzaXhNb250aHNBZ28gPSBuZXcgRGF0ZSgpO1xyXG4gIC8vICAgc2l4TW9udGhzQWdvLnNldE1vbnRoKHNpeE1vbnRoc0Fnby5nZXRNb250aCgpIC0gNik7XHJcblxyXG4gIC8vICAgY29uc3Qgb2xkUGF5bWVudHMgPSBhd2FpdCB0aGlzLnBheW1lbnRSZXBvLmZpbmQoe1xyXG4gIC8vICAgICB3aGVyZTogeyBjcmVhdGVkQXQ6IExlc3NUaGFuKHNpeE1vbnRoc0FnbykgfSxcclxuICAvLyAgIH0pO1xyXG5cclxuICAvLyAgIGNvbnN0IGFyY2hpdmVkID0gb2xkUGF5bWVudHMubWFwKChwYXltZW50KSA9PiB7XHJcbiAgLy8gICAgIGNvbnN0IGFyY2hpdmVkUGF5bWVudCA9IG5ldyBBcmNoaXZlZFBheW1lbnQoKTtcclxuICAvLyAgICAgT2JqZWN0LmFzc2lnbihhcmNoaXZlZFBheW1lbnQsIHBheW1lbnQpO1xyXG4gIC8vICAgICBhcmNoaXZlZFBheW1lbnQuYXJjaGl2ZWRBdCA9IG5ldyBEYXRlKCk7XHJcbiAgLy8gICAgIHJldHVybiBhcmNoaXZlZFBheW1lbnQ7XHJcbiAgLy8gICB9KTtcclxuXHJcbiAgLy8gICBhd2FpdCB0aGlzLmFyY2hpdmVkUGF5bWVudFJlcG8uc2F2ZShhcmNoaXZlZCk7XHJcbiAgLy8gICBhd2FpdCB0aGlzLnBheW1lbnRSZXBvLnJlbW92ZShvbGRQYXltZW50cyk7XHJcbiAgLy8gfVxyXG5cclxuICAvL19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18gICBBcmNoaXZlIE5vdGlmaWNhdGlvbnMgX19fX19fX19fX19fX19fX19fX19fX19fX19fX19cclxuXHJcbiAgLy8gcHVibGljIGFzeW5jIGFyY2hpdmVPbGROb3RpZmljYXRpb25zKCk6IFByb21pc2U8dm9pZD4ge1xyXG4gIC8vICAgY29uc3Qgc2l4TW9udGhzQWdvID0gbmV3IERhdGUoKTtcclxuICAvLyAgIHNpeE1vbnRoc0Fnby5zZXRNb250aChzaXhNb250aHNBZ28uZ2V0TW9udGgoKSAtIDYpO1xyXG5cclxuICAvLyAgIGNvbnN0IG9sZE5vdGlmaWNhdGlvbnMgPSBhd2FpdCB0aGlzLm5vdGlmaWNhdGlvblJlcG8uZmluZCh7XHJcbiAgLy8gICAgIHdoZXJlOiB7IGNyZWF0ZWRBdDogTGVzc1RoYW4oc2l4TW9udGhzQWdvKSB9LFxyXG4gIC8vICAgfSk7XHJcblxyXG4gIC8vICAgY29uc3QgYXJjaGl2ZWQgPSBvbGROb3RpZmljYXRpb25zLm1hcCgobm90aWZpY2F0aW9uKSA9PiB7XHJcbiAgLy8gICAgIGNvbnN0IGFyY2hpdmVkTm90aWZpY2F0aW9uID0gbmV3IEFyY2hpdmVkTm90aWZpY2F0aW9uKCk7XHJcbiAgLy8gICAgIE9iamVjdC5hc3NpZ24oYXJjaGl2ZWROb3RpZmljYXRpb24sIG5vdGlmaWNhdGlvbik7XHJcbiAgLy8gICAgIGFyY2hpdmVkTm90aWZpY2F0aW9uLmFyY2hpdmVkQXQgPSBuZXcgRGF0ZSgpO1xyXG4gIC8vICAgICByZXR1cm4gYXJjaGl2ZWROb3RpZmljYXRpb247XHJcbiAgLy8gICB9KTtcclxuXHJcbiAgLy8gICBhd2FpdCB0aGlzLmFyY2hpdmVkTm90aWZpY2F0aW9uUmVwby5zYXZlKGFyY2hpdmVkKTtcclxuICAvLyAgIGF3YWl0IHRoaXMubm90aWZpY2F0aW9uUmVwby5yZW1vdmUob2xkTm90aWZpY2F0aW9ucyk7XHJcbiAgLy8gfVxyXG59XHJcbiJdLCJ2ZXJzaW9uIjozfQ==