edfbf0bef99eec8780d687041e0e65c8
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b, _c, _d, _e;
Object.defineProperty(exports, "__esModule", { value: true });
exports.VideoAnalytics = exports.AnalyticsEventType = void 0;
const typeorm_1 = require("typeorm");
const swagger_1 = require("@nestjs/swagger");
const video_entity_1 = require("./video.entity");
const user_entity_1 = require("../../users/entities/user.entity");
var AnalyticsEventType;
(function (AnalyticsEventType) {
    AnalyticsEventType["VIEW_START"] = "view_start";
    AnalyticsEventType["VIEW_END"] = "view_end";
    AnalyticsEventType["PAUSE"] = "pause";
    AnalyticsEventType["RESUME"] = "resume";
    AnalyticsEventType["SEEK"] = "seek";
    AnalyticsEventType["QUALITY_CHANGE"] = "quality_change";
    AnalyticsEventType["FULLSCREEN_ENTER"] = "fullscreen_enter";
    AnalyticsEventType["FULLSCREEN_EXIT"] = "fullscreen_exit";
    AnalyticsEventType["VOLUME_CHANGE"] = "volume_change";
    AnalyticsEventType["PLAYBACK_RATE_CHANGE"] = "playback_rate_change";
    AnalyticsEventType["BUFFER_START"] = "buffer_start";
    AnalyticsEventType["BUFFER_END"] = "buffer_end";
    AnalyticsEventType["ERROR"] = "error";
})(AnalyticsEventType || (exports.AnalyticsEventType = AnalyticsEventType = {}));
let VideoAnalytics = class VideoAnalytics {
    // Computed properties
    get isEngagementEvent() {
        return [
            AnalyticsEventType.VIEW_START,
            AnalyticsEventType.PAUSE,
            AnalyticsEventType.RESUME,
            AnalyticsEventType.SEEK,
            AnalyticsEventType.FULLSCREEN_ENTER,
        ].includes(this.eventType);
    }
    get isQualityEvent() {
        return this.eventType === AnalyticsEventType.QUALITY_CHANGE;
    }
    get isPerformanceEvent() {
        return [
            AnalyticsEventType.BUFFER_START,
            AnalyticsEventType.BUFFER_END,
            AnalyticsEventType.ERROR,
        ].includes(this.eventType);
    }
    get formattedTimestamp() {
        return this.timestamp.toISOString();
    }
    get playbackPositionFormatted() {
        if (!this.playbackPosition)
            return '0:00';
        const minutes = Math.floor(this.playbackPosition / 60);
        const seconds = Math.floor(this.playbackPosition % 60);
        return `${minutes}:${seconds.toString().padStart(2, '0')}`;
    }
};
exports.VideoAnalytics = VideoAnalytics;
__decorate([
    (0, swagger_1.ApiProperty)({ description: 'Analytics event ID' }),
    (0, typeorm_1.PrimaryGeneratedColumn)('uuid'),
    __metadata("design:type", String)
], VideoAnalytics.prototype, "id", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ description: 'Session ID for grouping events' }),
    (0, typeorm_1.Column)({ length: 255 }),
    __metadata("design:type", String)
], VideoAnalytics.prototype, "sessionId", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ description: 'Event type', enum: AnalyticsEventType }),
    (0, typeorm_1.Column)({
        type: 'enum',
        enum: AnalyticsEventType,
    }),
    __metadata("design:type", String)
], VideoAnalytics.prototype, "eventType", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ description: 'Timestamp when event occurred' }),
    (0, typeorm_1.Column)({ type: 'timestamp with time zone' }),
    __metadata("design:type", typeof (_a = typeof Date !== "undefined" && Date) === "function" ? _a : Object)
], VideoAnalytics.prototype, "timestamp", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ description: 'Video playback position in seconds' }),
    (0, typeorm_1.Column)({ type: 'float', nullable: true }),
    __metadata("design:type", Number)
], VideoAnalytics.prototype, "playbackPosition", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ description: 'Video quality at time of event' }),
    (0, typeorm_1.Column)({ length: 50, nullable: true }),
    __metadata("design:type", String)
], VideoAnalytics.prototype, "quality", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ description: 'Playback rate (1.0 = normal speed)' }),
    (0, typeorm_1.Column)({ type: 'float', default: 1.0 }),
    __metadata("design:type", Number)
], VideoAnalytics.prototype, "playbackRate", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ description: 'Volume level (0.0 to 1.0)' }),
    (0, typeorm_1.Column)({ type: 'float', nullable: true }),
    __metadata("design:type", Number)
], VideoAnalytics.prototype, "volume", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ description: 'Whether video is in fullscreen' }),
    (0, typeorm_1.Column)({ default: false }),
    __metadata("design:type", Boolean)
], VideoAnalytics.prototype, "isFullscreen", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ description: 'Buffer health percentage' }),
    (0, typeorm_1.Column)({ type: 'float', nullable: true }),
    __metadata("design:type", Number)
], VideoAnalytics.prototype, "bufferHealth", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ description: 'Network bandwidth in kbps' }),
    (0, typeorm_1.Column)({ type: 'int', nullable: true }),
    __metadata("design:type", Number)
], VideoAnalytics.prototype, "bandwidth", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ description: 'User agent string' }),
    (0, typeorm_1.Column)({ type: 'text', nullable: true }),
    __metadata("design:type", String)
], VideoAnalytics.prototype, "userAgent", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ description: 'IP address' }),
    (0, typeorm_1.Column)({ length: 45, nullable: true }),
    __metadata("design:type", String)
], VideoAnalytics.prototype, "ipAddress", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ description: 'Geographic location' }),
    (0, typeorm_1.Column)({ type: 'jsonb', nullable: true }),
    __metadata("design:type", Object)
], VideoAnalytics.prototype, "geolocation", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ description: 'Device information' }),
    (0, typeorm_1.Column)({ type: 'jsonb', nullable: true }),
    __metadata("design:type", Object)
], VideoAnalytics.prototype, "deviceInfo", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ description: 'Player information' }),
    (0, typeorm_1.Column)({ type: 'jsonb', nullable: true }),
    __metadata("design:type", Object)
], VideoAnalytics.prototype, "playerInfo", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ description: 'Network information' }),
    (0, typeorm_1.Column)({ type: 'jsonb', nullable: true }),
    __metadata("design:type", Object)
], VideoAnalytics.prototype, "networkInfo", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ description: 'Performance metrics' }),
    (0, typeorm_1.Column)({ type: 'jsonb', nullable: true }),
    __metadata("design:type", Object)
], VideoAnalytics.prototype, "performanceMetrics", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ description: 'Event-specific data' }),
    (0, typeorm_1.Column)({ type: 'jsonb', nullable: true }),
    __metadata("design:type", Object)
], VideoAnalytics.prototype, "eventData", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ description: 'Referrer URL' }),
    (0, typeorm_1.Column)({ type: 'text', nullable: true }),
    __metadata("design:type", String)
], VideoAnalytics.prototype, "referrer", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ description: 'Page URL where video is being watched' }),
    (0, typeorm_1.Column)({ type: 'text', nullable: true }),
    __metadata("design:type", String)
], VideoAnalytics.prototype, "pageUrl", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ description: 'Video being watched' }),
    (0, typeorm_1.ManyToOne)(() => video_entity_1.Video, (video) => video.analytics, {
        onDelete: 'CASCADE',
    }),
    (0, typeorm_1.JoinColumn)({ name: 'video_id' }),
    __metadata("design:type", typeof (_b = typeof video_entity_1.Video !== "undefined" && video_entity_1.Video) === "function" ? _b : Object)
], VideoAnalytics.prototype, "video", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ description: 'User watching the video' }),
    (0, typeorm_1.ManyToOne)(() => user_entity_1.User, { nullable: true }),
    (0, typeorm_1.JoinColumn)({ name: 'user_id' }),
    __metadata("design:type", typeof (_c = typeof user_entity_1.User !== "undefined" && user_entity_1.User) === "function" ? _c : Object)
], VideoAnalytics.prototype, "user", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ description: 'Creation date' }),
    (0, typeorm_1.CreateDateColumn)(),
    __metadata("design:type", typeof (_d = typeof Date !== "undefined" && Date) === "function" ? _d : Object)
], VideoAnalytics.prototype, "createdAt", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ description: 'Last update date' }),
    (0, typeorm_1.UpdateDateColumn)(),
    __metadata("design:type", typeof (_e = typeof Date !== "undefined" && Date) === "function" ? _e : Object)
], VideoAnalytics.prototype, "updatedAt", void 0);
exports.VideoAnalytics = VideoAnalytics = __decorate([
    (0, typeorm_1.Entity)('video_analytics'),
    (0, typeorm_1.Index)(['video', 'user']),
    (0, typeorm_1.Index)(['eventType']),
    (0, typeorm_1.Index)(['timestamp']),
    (0, typeorm_1.Index)(['sessionId'])
], VideoAnalytics);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,