{"file":"C:\\Users\\g-ekoh\\Desktop\\StrellerMinds-Backend\\test\\factories\\user.factory.ts","mappings":"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","names":[],"sources":["C:\\Users\\g-ekoh\\Desktop\\StrellerMinds-Backend\\test\\factories\\user.factory.ts"],"sourcesContent":["import { BaseFactory } from './base.factory';\r\nimport { User } from '../../src/users/entities/user.entity';\r\nimport { UserRole } from '../../src/users/enums/user-role.enum';\r\nimport * as bcrypt from 'bcrypt';\r\n\r\nexport class UserFactory extends BaseFactory<User> {\r\n  protected definition(): Partial<User> {\r\n    const firstName = this.generateName().split(' ')[0];\r\n    const lastName = this.generateName().split(' ')[1];\r\n    \r\n    return {\r\n      id: this.generateId(),\r\n      email: this.generateEmail(),\r\n      password: bcrypt.hashSync('password123', 10),\r\n      name: `${firstName} ${lastName}`,\r\n      firstName,\r\n      lastName,\r\n      role: UserRole.STUDENT,\r\n      isActive: true,\r\n      isEmailVerified: true,\r\n      avatar: this.generateImageUrl(150, 150),\r\n      bio: this.generateText(2),\r\n      timezone: this.pickRandom(['UTC', 'America/New_York', 'Europe/London', 'Asia/Tokyo']),\r\n      language: this.pickRandom(['en', 'es', 'fr', 'de']),\r\n      dateOfBirth: this.generateDate({ past: true }),\r\n      phoneNumber: this.generatePhone(),\r\n      address: this.generateAddress(),\r\n      socialLinks: {\r\n        linkedin: this.generateUrl(),\r\n        twitter: this.generateUrl(),\r\n        github: this.generateUrl(),\r\n      },\r\n      preferences: {\r\n        emailNotifications: true,\r\n        pushNotifications: true,\r\n        marketingEmails: false,\r\n        theme: 'light',\r\n        language: 'en',\r\n      },\r\n      lastLoginAt: this.generateDate({ days: 7 }),\r\n      createdAt: this.generateDate({ past: true }),\r\n      updatedAt: this.generateDate({ days: 1 }),\r\n    };\r\n  }\r\n\r\n  protected traits = {\r\n    admin: (): Partial<User> => ({\r\n      role: UserRole.ADMIN,\r\n      isEmailVerified: true,\r\n    }),\r\n\r\n    instructor: (): Partial<User> => ({\r\n      role: UserRole.INSTRUCTOR,\r\n      isEmailVerified: true,\r\n      bio: 'Experienced instructor with expertise in technology and education.',\r\n    }),\r\n\r\n    student: (): Partial<User> => ({\r\n      role: UserRole.STUDENT,\r\n    }),\r\n\r\n    unverified: (): Partial<User> => ({\r\n      isEmailVerified: false,\r\n      emailVerificationToken: this.generateId(),\r\n      emailVerificationExpires: this.generateDate({ future: true }),\r\n    }),\r\n\r\n    inactive: (): Partial<User> => ({\r\n      isActive: false,\r\n      deactivatedAt: this.generateDate({ past: true }),\r\n    }),\r\n\r\n    withoutAvatar: (): Partial<User> => ({\r\n      avatar: null,\r\n    }),\r\n\r\n    premium: (): Partial<User> => ({\r\n      subscriptionStatus: 'active',\r\n      subscriptionPlan: 'premium',\r\n      subscriptionExpiresAt: this.generateDate({ future: true }),\r\n    }),\r\n\r\n    newUser: (): Partial<User> => ({\r\n      createdAt: this.generateDate({ days: 1 }),\r\n      lastLoginAt: null,\r\n      loginCount: 0,\r\n    }),\r\n\r\n    activeUser: (): Partial<User> => ({\r\n      lastLoginAt: this.generateDate({ days: 1 }),\r\n      loginCount: this.generateNumber(10, 100),\r\n    }),\r\n\r\n    withResetToken: (): Partial<User> => ({\r\n      passwordResetToken: this.generateId(),\r\n      passwordResetExpires: this.generateDate({ future: true }),\r\n    }),\r\n\r\n    withSocialAuth: (): Partial<User> => ({\r\n      googleId: this.generateId(),\r\n      facebookId: this.generateId(),\r\n      appleId: this.generateId(),\r\n    }),\r\n\r\n    withCompleteProfile: (): Partial<User> => ({\r\n      bio: this.generateText(3),\r\n      dateOfBirth: this.generateDate({ past: true }),\r\n      phoneNumber: this.generatePhone(),\r\n      address: this.generateAddress(),\r\n      socialLinks: {\r\n        linkedin: this.generateUrl(),\r\n        twitter: this.generateUrl(),\r\n        github: this.generateUrl(),\r\n        website: this.generateUrl(),\r\n      },\r\n    }),\r\n  };\r\n\r\n  /**\r\n   * Create admin user\r\n   */\r\n  admin(options: any = {}): User {\r\n    return this.withTrait('admin', options);\r\n  }\r\n\r\n  /**\r\n   * Create instructor user\r\n   */\r\n  instructor(options: any = {}): User {\r\n    return this.withTrait('instructor', options);\r\n  }\r\n\r\n  /**\r\n   * Create student user\r\n   */\r\n  student(options: any = {}): User {\r\n    return this.withTrait('student', options);\r\n  }\r\n\r\n  /**\r\n   * Create unverified user\r\n   */\r\n  unverified(options: any = {}): User {\r\n    return this.withTrait('unverified', options);\r\n  }\r\n\r\n  /**\r\n   * Create inactive user\r\n   */\r\n  inactive(options: any = {}): User {\r\n    return this.withTrait('inactive', options);\r\n  }\r\n\r\n  /**\r\n   * Create user with specific email\r\n   */\r\n  withEmail(email: string, options: any = {}): User {\r\n    return this.create({ ...options, overrides: { email } });\r\n  }\r\n\r\n  /**\r\n   * Create user with specific role\r\n   */\r\n  withRole(role: UserRole, options: any = {}): User {\r\n    return this.create({ ...options, overrides: { role } });\r\n  }\r\n\r\n  /**\r\n   * Create multiple users with different roles\r\n   */\r\n  createTeam(): { admin: User; instructor: User; students: User[] } {\r\n    return {\r\n      admin: this.admin(),\r\n      instructor: this.instructor(),\r\n      students: this.createMany(3, { traits: ['student'] }),\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Create user for authentication tests\r\n   */\r\n  forAuth(password: string = 'password123'): User {\r\n    return this.create({\r\n      overrides: {\r\n        password: bcrypt.hashSync(password, 10),\r\n        isEmailVerified: true,\r\n        isActive: true,\r\n      },\r\n    });\r\n  }\r\n}\r\n"],"version":3}