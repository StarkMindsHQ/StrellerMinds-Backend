ff5e2ea7315ea69b271309c4200e6101
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PasswordValidationService = void 0;
const common_1 = require("@nestjs/common");
const zxcvbn_1 = __importDefault(require("zxcvbn"));
let PasswordValidationService = class PasswordValidationService {
    constructor() {
        this.MIN_LENGTH = 8;
        this.MIN_SCORE = 3; // zxcvbn score (0-4)
    }
    validatePassword(password) {
        const errors = [];
        // Debug info for tests
        console.log('Validating password:', password);
        // Check length
        if (password.length < this.MIN_LENGTH) {
            errors.push(`Password must be at least ${this.MIN_LENGTH} characters long`);
        }
        // Check complexity
        if (!/[A-Z]/.test(password)) {
            errors.push('Password must contain at least one uppercase letter');
        }
        if (!/[a-z]/.test(password)) {
            errors.push('Password must contain at least one lowercase letter');
        }
        if (!/[0-9]/.test(password)) {
            errors.push('Password must contain at least one number');
        }
        if (!/[^A-Za-z0-9]/.test(password)) {
            errors.push('Password must contain at least one special character');
        }
        // Common password check is commented out for now
        // Using zxcvbn for advanced strength analysis
        const analysis = (0, zxcvbn_1.default)(password);
        console.log('zxcvbn score:', analysis.score, 'MIN_SCORE:', this.MIN_SCORE);
        if (analysis.score < this.MIN_SCORE) {
            errors.push('Password is too weak. Please choose a stronger password');
        }
        console.log('Validation errors:', errors);
        return {
            isValid: errors.length === 0,
            errors,
            score: analysis.score
        };
    }
    getPasswordRequirements() {
        return [
            `At least ${this.MIN_LENGTH} characters long`,
            'Contains at least one uppercase letter',
            'Contains at least one lowercase letter',
            'Contains at least one number',
            'Contains at least one special character',
            'Not a commonly used password'
        ];
    }
};
exports.PasswordValidationService = PasswordValidationService;
exports.PasswordValidationService = PasswordValidationService = __decorate([
    (0, common_1.Injectable)()
], PasswordValidationService);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiQzpcXFVzZXJzXFxnLWVrb2hcXERlc2t0b3BcXFN0cmVsbGVyTWluZHMtQmFja2VuZFxcc3JjXFxhdXRoXFxwYXNzd29yZC12YWxpZGF0aW9uLnNlcnZpY2UudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQUEsMkNBQTRDO0FBQzVDLG9EQUE0QjtBQVNyQixJQUFNLHlCQUF5QixHQUEvQixNQUFNLHlCQUF5QjtJQUEvQjtRQUNZLGVBQVUsR0FBRyxDQUFDLENBQUM7UUFDZixjQUFTLEdBQUcsQ0FBQyxDQUFDLENBQUMscUJBQXFCO0lBMkR2RCxDQUFDO0lBekRDLGdCQUFnQixDQUFDLFFBQWdCO1FBQy9CLE1BQU0sTUFBTSxHQUFhLEVBQUUsQ0FBQztRQUU1Qix1QkFBdUI7UUFDdkIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxzQkFBc0IsRUFBRSxRQUFRLENBQUMsQ0FBQztRQUU5QyxlQUFlO1FBQ2YsSUFBSSxRQUFRLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxVQUFVLEVBQUUsQ0FBQztZQUN0QyxNQUFNLENBQUMsSUFBSSxDQUFDLDZCQUE2QixJQUFJLENBQUMsVUFBVSxrQkFBa0IsQ0FBQyxDQUFDO1FBQzlFLENBQUM7UUFFRCxtQkFBbUI7UUFDbkIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQztZQUM1QixNQUFNLENBQUMsSUFBSSxDQUFDLHFEQUFxRCxDQUFDLENBQUM7UUFDckUsQ0FBQztRQUVELElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUM7WUFDNUIsTUFBTSxDQUFDLElBQUksQ0FBQyxxREFBcUQsQ0FBQyxDQUFDO1FBQ3JFLENBQUM7UUFFRCxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDO1lBQzVCLE1BQU0sQ0FBQyxJQUFJLENBQUMsMkNBQTJDLENBQUMsQ0FBQztRQUMzRCxDQUFDO1FBRUQsSUFBSSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQztZQUNuQyxNQUFNLENBQUMsSUFBSSxDQUFDLHNEQUFzRCxDQUFDLENBQUM7UUFDdEUsQ0FBQztRQUVELGlEQUFpRDtRQUVqRCw4Q0FBOEM7UUFDOUMsTUFBTSxRQUFRLEdBQUcsSUFBQSxnQkFBTSxFQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQ2xDLE9BQU8sQ0FBQyxHQUFHLENBQUMsZUFBZSxFQUFFLFFBQVEsQ0FBQyxLQUFLLEVBQUUsWUFBWSxFQUFFLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQztRQUUzRSxJQUFJLFFBQVEsQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLFNBQVMsRUFBRSxDQUFDO1lBQ3BDLE1BQU0sQ0FBQyxJQUFJLENBQUMseURBQXlELENBQUMsQ0FBQztRQUN6RSxDQUFDO1FBRUQsT0FBTyxDQUFDLEdBQUcsQ0FBQyxvQkFBb0IsRUFBRSxNQUFNLENBQUMsQ0FBQztRQUUxQyxPQUFPO1lBQ0wsT0FBTyxFQUFFLE1BQU0sQ0FBQyxNQUFNLEtBQUssQ0FBQztZQUM1QixNQUFNO1lBQ04sS0FBSyxFQUFFLFFBQVEsQ0FBQyxLQUFLO1NBQ3RCLENBQUM7SUFDSixDQUFDO0lBRUQsdUJBQXVCO1FBQ3JCLE9BQU87WUFDTCxZQUFZLElBQUksQ0FBQyxVQUFVLGtCQUFrQjtZQUM3Qyx3Q0FBd0M7WUFDeEMsd0NBQXdDO1lBQ3hDLDhCQUE4QjtZQUM5Qix5Q0FBeUM7WUFDekMsOEJBQThCO1NBQy9CLENBQUM7SUFDSixDQUFDO0NBQ0YsQ0FBQTtBQTdEWSw4REFBeUI7b0NBQXpCLHlCQUF5QjtJQURyQyxJQUFBLG1CQUFVLEdBQUU7R0FDQSx5QkFBeUIsQ0E2RHJDIiwibmFtZXMiOltdLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcZy1la29oXFxEZXNrdG9wXFxTdHJlbGxlck1pbmRzLUJhY2tlbmRcXHNyY1xcYXV0aFxccGFzc3dvcmQtdmFsaWRhdGlvbi5zZXJ2aWNlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAbmVzdGpzL2NvbW1vbic7XHJcbmltcG9ydCB6eGN2Ym4gZnJvbSAnenhjdmJuJztcclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgUGFzc3dvcmRWYWxpZGF0aW9uUmVzdWx0IHtcclxuICBpc1ZhbGlkOiBib29sZWFuO1xyXG4gIGVycm9yczogc3RyaW5nW107XHJcbiAgc2NvcmU6IG51bWJlcjtcclxufVxyXG5cclxuQEluamVjdGFibGUoKVxyXG5leHBvcnQgY2xhc3MgUGFzc3dvcmRWYWxpZGF0aW9uU2VydmljZSB7XHJcbiAgcHJpdmF0ZSByZWFkb25seSBNSU5fTEVOR1RIID0gODtcclxuICBwcml2YXRlIHJlYWRvbmx5IE1JTl9TQ09SRSA9IDM7IC8vIHp4Y3ZibiBzY29yZSAoMC00KVxyXG5cclxuICB2YWxpZGF0ZVBhc3N3b3JkKHBhc3N3b3JkOiBzdHJpbmcpOiBQYXNzd29yZFZhbGlkYXRpb25SZXN1bHQge1xyXG4gICAgY29uc3QgZXJyb3JzOiBzdHJpbmdbXSA9IFtdO1xyXG4gICAgXHJcbiAgICAvLyBEZWJ1ZyBpbmZvIGZvciB0ZXN0c1xyXG4gICAgY29uc29sZS5sb2coJ1ZhbGlkYXRpbmcgcGFzc3dvcmQ6JywgcGFzc3dvcmQpO1xyXG4gICAgXHJcbiAgICAvLyBDaGVjayBsZW5ndGhcclxuICAgIGlmIChwYXNzd29yZC5sZW5ndGggPCB0aGlzLk1JTl9MRU5HVEgpIHtcclxuICAgICAgZXJyb3JzLnB1c2goYFBhc3N3b3JkIG11c3QgYmUgYXQgbGVhc3QgJHt0aGlzLk1JTl9MRU5HVEh9IGNoYXJhY3RlcnMgbG9uZ2ApO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAvLyBDaGVjayBjb21wbGV4aXR5XHJcbiAgICBpZiAoIS9bQS1aXS8udGVzdChwYXNzd29yZCkpIHtcclxuICAgICAgZXJyb3JzLnB1c2goJ1Bhc3N3b3JkIG11c3QgY29udGFpbiBhdCBsZWFzdCBvbmUgdXBwZXJjYXNlIGxldHRlcicpO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICBpZiAoIS9bYS16XS8udGVzdChwYXNzd29yZCkpIHtcclxuICAgICAgZXJyb3JzLnB1c2goJ1Bhc3N3b3JkIG11c3QgY29udGFpbiBhdCBsZWFzdCBvbmUgbG93ZXJjYXNlIGxldHRlcicpO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICBpZiAoIS9bMC05XS8udGVzdChwYXNzd29yZCkpIHtcclxuICAgICAgZXJyb3JzLnB1c2goJ1Bhc3N3b3JkIG11c3QgY29udGFpbiBhdCBsZWFzdCBvbmUgbnVtYmVyJyk7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIGlmICghL1teQS1aYS16MC05XS8udGVzdChwYXNzd29yZCkpIHtcclxuICAgICAgZXJyb3JzLnB1c2goJ1Bhc3N3b3JkIG11c3QgY29udGFpbiBhdCBsZWFzdCBvbmUgc3BlY2lhbCBjaGFyYWN0ZXInKTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgLy8gQ29tbW9uIHBhc3N3b3JkIGNoZWNrIGlzIGNvbW1lbnRlZCBvdXQgZm9yIG5vd1xyXG4gICAgXHJcbiAgICAvLyBVc2luZyB6eGN2Ym4gZm9yIGFkdmFuY2VkIHN0cmVuZ3RoIGFuYWx5c2lzXHJcbiAgICBjb25zdCBhbmFseXNpcyA9IHp4Y3ZibihwYXNzd29yZCk7XHJcbiAgICBjb25zb2xlLmxvZygnenhjdmJuIHNjb3JlOicsIGFuYWx5c2lzLnNjb3JlLCAnTUlOX1NDT1JFOicsIHRoaXMuTUlOX1NDT1JFKTtcclxuICAgIFxyXG4gICAgaWYgKGFuYWx5c2lzLnNjb3JlIDwgdGhpcy5NSU5fU0NPUkUpIHtcclxuICAgICAgZXJyb3JzLnB1c2goJ1Bhc3N3b3JkIGlzIHRvbyB3ZWFrLiBQbGVhc2UgY2hvb3NlIGEgc3Ryb25nZXIgcGFzc3dvcmQnKTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgY29uc29sZS5sb2coJ1ZhbGlkYXRpb24gZXJyb3JzOicsIGVycm9ycyk7XHJcbiAgICBcclxuICAgIHJldHVybiB7XHJcbiAgICAgIGlzVmFsaWQ6IGVycm9ycy5sZW5ndGggPT09IDAsXHJcbiAgICAgIGVycm9ycyxcclxuICAgICAgc2NvcmU6IGFuYWx5c2lzLnNjb3JlXHJcbiAgICB9O1xyXG4gIH1cclxuICBcclxuICBnZXRQYXNzd29yZFJlcXVpcmVtZW50cygpOiBzdHJpbmdbXSB7XHJcbiAgICByZXR1cm4gW1xyXG4gICAgICBgQXQgbGVhc3QgJHt0aGlzLk1JTl9MRU5HVEh9IGNoYXJhY3RlcnMgbG9uZ2AsXHJcbiAgICAgICdDb250YWlucyBhdCBsZWFzdCBvbmUgdXBwZXJjYXNlIGxldHRlcicsXHJcbiAgICAgICdDb250YWlucyBhdCBsZWFzdCBvbmUgbG93ZXJjYXNlIGxldHRlcicsXHJcbiAgICAgICdDb250YWlucyBhdCBsZWFzdCBvbmUgbnVtYmVyJyxcclxuICAgICAgJ0NvbnRhaW5zIGF0IGxlYXN0IG9uZSBzcGVjaWFsIGNoYXJhY3RlcicsXHJcbiAgICAgICdOb3QgYSBjb21tb25seSB1c2VkIHBhc3N3b3JkJ1xyXG4gICAgXTtcclxuICB9XHJcbn0iXSwidmVyc2lvbiI6M30=