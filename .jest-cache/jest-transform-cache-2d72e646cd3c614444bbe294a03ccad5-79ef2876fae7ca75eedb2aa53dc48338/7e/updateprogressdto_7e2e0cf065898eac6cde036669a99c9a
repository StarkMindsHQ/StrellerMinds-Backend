42f22d1713da8b3acf0bb122df49c9cf
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a;
Object.defineProperty(exports, "__esModule", { value: true });
exports.UpdateProgressDto = void 0;
/**
 * DTO for updating user progress in a course or lesson
 */
const swagger_1 = require("@nestjs/swagger");
const class_validator_1 = require("class-validator");
class UpdateProgressDto {
}
exports.UpdateProgressDto = UpdateProgressDto;
__decorate([
    (0, swagger_1.ApiProperty)({ example: 50, minimum: 0, maximum: 100, description: 'Progress percentage (0-100)' }),
    (0, class_validator_1.IsNumber)(),
    (0, class_validator_1.Min)(0),
    (0, class_validator_1.Max)(100),
    __metadata("design:type", Number)
], UpdateProgressDto.prototype, "progressPercentage", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ type: 'object', description: 'Additional metadata for progress' }),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsObject)(),
    __metadata("design:type", typeof (_a = typeof Record !== "undefined" && Record) === "function" ? _a : Object)
], UpdateProgressDto.prototype, "metadata", void 0);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiQzpcXFVzZXJzXFxnLWVrb2hcXERlc2t0b3BcXFN0cmVsbGVyTWluZHMtQmFja2VuZFxcc3JjXFx1c2Vyc1xcZHRvc1xcdXBkYXRlLXByb2dyZXNzLmR0by50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQUE7O0dBRUc7QUFDSCw2Q0FBbUU7QUFDbkUscURBQTJFO0FBRTNFLE1BQWEsaUJBQWlCO0NBVzdCO0FBWEQsOENBV0M7QUFOQztJQUpDLElBQUEscUJBQVcsRUFBQyxFQUFFLE9BQU8sRUFBRSxFQUFFLEVBQUUsT0FBTyxFQUFFLENBQUMsRUFBRSxPQUFPLEVBQUUsR0FBRyxFQUFFLFdBQVcsRUFBRSw2QkFBNkIsRUFBRSxDQUFDO0lBQ2xHLElBQUEsMEJBQVEsR0FBRTtJQUNWLElBQUEscUJBQUcsRUFBQyxDQUFDLENBQUM7SUFDTixJQUFBLHFCQUFHLEVBQUMsR0FBRyxDQUFDOzs2REFDa0I7QUFLM0I7SUFIQyxJQUFBLDZCQUFtQixFQUFDLEVBQUUsSUFBSSxFQUFFLFFBQVEsRUFBRSxXQUFXLEVBQUUsa0NBQWtDLEVBQUUsQ0FBQztJQUN4RixJQUFBLDRCQUFVLEdBQUU7SUFDWixJQUFBLDBCQUFRLEdBQUU7a0RBQ0EsTUFBTSxvQkFBTixNQUFNO21EQUFjIiwibmFtZXMiOltdLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcZy1la29oXFxEZXNrdG9wXFxTdHJlbGxlck1pbmRzLUJhY2tlbmRcXHNyY1xcdXNlcnNcXGR0b3NcXHVwZGF0ZS1wcm9ncmVzcy5kdG8udHMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIERUTyBmb3IgdXBkYXRpbmcgdXNlciBwcm9ncmVzcyBpbiBhIGNvdXJzZSBvciBsZXNzb25cclxuICovXHJcbmltcG9ydCB7IEFwaVByb3BlcnR5LCBBcGlQcm9wZXJ0eU9wdGlvbmFsIH0gZnJvbSAnQG5lc3Rqcy9zd2FnZ2VyJztcclxuaW1wb3J0IHsgSXNOdW1iZXIsIElzT3B0aW9uYWwsIE1pbiwgTWF4LCBJc09iamVjdCB9IGZyb20gJ2NsYXNzLXZhbGlkYXRvcic7XHJcblxyXG5leHBvcnQgY2xhc3MgVXBkYXRlUHJvZ3Jlc3NEdG8ge1xyXG4gIEBBcGlQcm9wZXJ0eSh7IGV4YW1wbGU6IDUwLCBtaW5pbXVtOiAwLCBtYXhpbXVtOiAxMDAsIGRlc2NyaXB0aW9uOiAnUHJvZ3Jlc3MgcGVyY2VudGFnZSAoMC0xMDApJyB9KVxyXG4gIEBJc051bWJlcigpXHJcbiAgQE1pbigwKVxyXG4gIEBNYXgoMTAwKVxyXG4gIHByb2dyZXNzUGVyY2VudGFnZTogbnVtYmVyO1xyXG5cclxuICBAQXBpUHJvcGVydHlPcHRpb25hbCh7IHR5cGU6ICdvYmplY3QnLCBkZXNjcmlwdGlvbjogJ0FkZGl0aW9uYWwgbWV0YWRhdGEgZm9yIHByb2dyZXNzJyB9KVxyXG4gIEBJc09wdGlvbmFsKClcclxuICBASXNPYmplY3QoKVxyXG4gIG1ldGFkYXRhPzogUmVjb3JkPHN0cmluZywgYW55PjtcclxufSJdLCJ2ZXJzaW9uIjozfQ==