ec938073b9096ff3d40314cd96f642b6
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;
Object.defineProperty(exports, "__esModule", { value: true });
exports.LearningPathStep = exports.LearningPath = exports.LearningPathType = exports.LearningPathStatus = void 0;
const typeorm_1 = require("typeorm");
const user_entity_1 = require("../../users/entities/user.entity");
const course_entity_1 = require("../../courses/entities/course.entity");
var LearningPathStatus;
(function (LearningPathStatus) {
    LearningPathStatus["DRAFT"] = "draft";
    LearningPathStatus["ACTIVE"] = "active";
    LearningPathStatus["COMPLETED"] = "completed";
    LearningPathStatus["PAUSED"] = "paused";
    LearningPathStatus["ARCHIVED"] = "archived";
})(LearningPathStatus || (exports.LearningPathStatus = LearningPathStatus = {}));
var LearningPathType;
(function (LearningPathType) {
    LearningPathType["SYSTEM_GENERATED"] = "system_generated";
    LearningPathType["USER_CREATED"] = "user_created";
    LearningPathType["CURATED"] = "curated";
    LearningPathType["ADAPTIVE"] = "adaptive";
})(LearningPathType || (exports.LearningPathType = LearningPathType = {}));
let LearningPath = class LearningPath {
    // Virtual properties
    get isCompleted() {
        return this.status === LearningPathStatus.COMPLETED;
    }
    get isActive() {
        return this.status === LearningPathStatus.ACTIVE;
    }
    get completedSteps() {
        return this.steps?.filter((step) => step.isCompleted).length || 0;
    }
    get totalSteps() {
        return this.steps?.length || 0;
    }
    get progressPercentage() {
        if (this.totalSteps === 0)
            return 0;
        return Math.round((this.completedSteps / this.totalSteps) * 100);
    }
};
exports.LearningPath = LearningPath;
__decorate([
    (0, typeorm_1.PrimaryGeneratedColumn)('uuid'),
    __metadata("design:type", String)
], LearningPath.prototype, "id", void 0);
__decorate([
    (0, typeorm_1.Column)('varchar', { length: 255 }),
    __metadata("design:type", String)
], LearningPath.prototype, "title", void 0);
__decorate([
    (0, typeorm_1.Column)('text', { nullable: true }),
    __metadata("design:type", String)
], LearningPath.prototype, "description", void 0);
__decorate([
    (0, typeorm_1.Column)('uuid'),
    (0, typeorm_1.Index)(),
    __metadata("design:type", String)
], LearningPath.prototype, "userId", void 0);
__decorate([
    (0, typeorm_1.ManyToOne)(() => user_entity_1.User, { onDelete: 'CASCADE' }),
    (0, typeorm_1.JoinColumn)({ name: 'userId' }),
    __metadata("design:type", typeof (_a = typeof user_entity_1.User !== "undefined" && user_entity_1.User) === "function" ? _a : Object)
], LearningPath.prototype, "user", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'enum',
        enum: LearningPathType,
        default: LearningPathType.SYSTEM_GENERATED,
    }),
    __metadata("design:type", String)
], LearningPath.prototype, "type", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: 'enum',
        enum: LearningPathStatus,
        default: LearningPathStatus.DRAFT,
    }),
    __metadata("design:type", String)
], LearningPath.prototype, "status", void 0);
__decorate([
    (0, typeorm_1.OneToMany)(() => LearningPathStep, (step) => step.learningPath, {
        cascade: true,
        eager: true,
    }),
    __metadata("design:type", Array)
], LearningPath.prototype, "steps", void 0);
__decorate([
    (0, typeorm_1.Column)('simple-array', { nullable: true }),
    __metadata("design:type", Array)
], LearningPath.prototype, "tags", void 0);
__decorate([
    (0, typeorm_1.Column)('simple-array', { nullable: true }),
    __metadata("design:type", Array)
], LearningPath.prototype, "skills", void 0);
__decorate([
    (0, typeorm_1.Column)('varchar', { length: 50, nullable: true }),
    __metadata("design:type", String)
], LearningPath.prototype, "difficulty", void 0);
__decorate([
    (0, typeorm_1.Column)('int', { nullable: true }),
    __metadata("design:type", Number)
], LearningPath.prototype, "estimatedDurationHours", void 0);
__decorate([
    (0, typeorm_1.Column)('decimal', { precision: 3, scale: 2, default: 0.0 }),
    __metadata("design:type", Number)
], LearningPath.prototype, "progress", void 0);
__decorate([
    (0, typeorm_1.Column)('jsonb', { nullable: true }),
    __metadata("design:type", Object)
], LearningPath.prototype, "metadata", void 0);
__decorate([
    (0, typeorm_1.Column)('timestamp', { nullable: true }),
    __metadata("design:type", typeof (_b = typeof Date !== "undefined" && Date) === "function" ? _b : Object)
], LearningPath.prototype, "startedAt", void 0);
__decorate([
    (0, typeorm_1.Column)('timestamp', { nullable: true }),
    __metadata("design:type", typeof (_c = typeof Date !== "undefined" && Date) === "function" ? _c : Object)
], LearningPath.prototype, "completedAt", void 0);
__decorate([
    (0, typeorm_1.CreateDateColumn)(),
    __metadata("design:type", typeof (_d = typeof Date !== "undefined" && Date) === "function" ? _d : Object)
], LearningPath.prototype, "createdAt", void 0);
__decorate([
    (0, typeorm_1.UpdateDateColumn)(),
    __metadata("design:type", typeof (_e = typeof Date !== "undefined" && Date) === "function" ? _e : Object)
], LearningPath.prototype, "updatedAt", void 0);
exports.LearningPath = LearningPath = __decorate([
    (0, typeorm_1.Entity)('learning_paths'),
    (0, typeorm_1.Index)(['userId', 'status']),
    (0, typeorm_1.Index)(['type', 'status']),
    (0, typeorm_1.Index)(['createdAt'])
], LearningPath);
let LearningPathStep = class LearningPathStep {
};
exports.LearningPathStep = LearningPathStep;
__decorate([
    (0, typeorm_1.PrimaryGeneratedColumn)('uuid'),
    __metadata("design:type", String)
], LearningPathStep.prototype, "id", void 0);
__decorate([
    (0, typeorm_1.Column)('uuid'),
    __metadata("design:type", String)
], LearningPathStep.prototype, "learningPathId", void 0);
__decorate([
    (0, typeorm_1.ManyToOne)(() => LearningPath, (path) => path.steps, { onDelete: 'CASCADE' }),
    (0, typeorm_1.JoinColumn)({ name: 'learningPathId' }),
    __metadata("design:type", LearningPath)
], LearningPathStep.prototype, "learningPath", void 0);
__decorate([
    (0, typeorm_1.Column)('uuid', { nullable: true }),
    __metadata("design:type", String)
], LearningPathStep.prototype, "courseId", void 0);
__decorate([
    (0, typeorm_1.ManyToOne)(() => course_entity_1.Course, { nullable: true, onDelete: 'CASCADE' }),
    (0, typeorm_1.JoinColumn)({ name: 'courseId' }),
    __metadata("design:type", typeof (_f = typeof course_entity_1.Course !== "undefined" && course_entity_1.Course) === "function" ? _f : Object)
], LearningPathStep.prototype, "course", void 0);
__decorate([
    (0, typeorm_1.Column)('varchar', { length: 255 }),
    __metadata("design:type", String)
], LearningPathStep.prototype, "title", void 0);
__decorate([
    (0, typeorm_1.Column)('text', { nullable: true }),
    __metadata("design:type", String)
], LearningPathStep.prototype, "description", void 0);
__decorate([
    (0, typeorm_1.Column)('int'),
    __metadata("design:type", Number)
], LearningPathStep.prototype, "order", void 0);
__decorate([
    (0, typeorm_1.Column)('boolean', { default: false }),
    __metadata("design:type", Boolean)
], LearningPathStep.prototype, "isCompleted", void 0);
__decorate([
    (0, typeorm_1.Column)('boolean', { default: false }),
    __metadata("design:type", Boolean)
], LearningPathStep.prototype, "isOptional", void 0);
__decorate([
    (0, typeorm_1.Column)('boolean', { default: false }),
    __metadata("design:type", Boolean)
], LearningPathStep.prototype, "isUnlocked", void 0);
__decorate([
    (0, typeorm_1.Column)('simple-array', { nullable: true }),
    __metadata("design:type", Array)
], LearningPathStep.prototype, "prerequisites", void 0);
__decorate([
    (0, typeorm_1.Column)('int', { nullable: true }),
    __metadata("design:type", Number)
], LearningPathStep.prototype, "estimatedDurationMinutes", void 0);
__decorate([
    (0, typeorm_1.Column)('jsonb', { nullable: true }),
    __metadata("design:type", Object)
], LearningPathStep.prototype, "metadata", void 0);
__decorate([
    (0, typeorm_1.Column)('timestamp', { nullable: true }),
    __metadata("design:type", typeof (_g = typeof Date !== "undefined" && Date) === "function" ? _g : Object)
], LearningPathStep.prototype, "startedAt", void 0);
__decorate([
    (0, typeorm_1.Column)('timestamp', { nullable: true }),
    __metadata("design:type", typeof (_h = typeof Date !== "undefined" && Date) === "function" ? _h : Object)
], LearningPathStep.prototype, "completedAt", void 0);
__decorate([
    (0, typeorm_1.CreateDateColumn)(),
    __metadata("design:type", typeof (_j = typeof Date !== "undefined" && Date) === "function" ? _j : Object)
], LearningPathStep.prototype, "createdAt", void 0);
__decorate([
    (0, typeorm_1.UpdateDateColumn)(),
    __metadata("design:type", typeof (_k = typeof Date !== "undefined" && Date) === "function" ? _k : Object)
], LearningPathStep.prototype, "updatedAt", void 0);
exports.LearningPathStep = LearningPathStep = __decorate([
    (0, typeorm_1.Entity)('learning_path_steps'),
    (0, typeorm_1.Index)(['learningPathId', 'order']),
    (0, typeorm_1.Index)(['courseId'])
], LearningPathStep);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,