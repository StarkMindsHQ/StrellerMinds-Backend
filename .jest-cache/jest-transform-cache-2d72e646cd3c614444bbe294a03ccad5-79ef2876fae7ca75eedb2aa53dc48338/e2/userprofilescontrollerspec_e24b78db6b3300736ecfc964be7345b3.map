{"file":"C:\\Users\\g-ekoh\\Desktop\\StrellerMinds-Backend\\src\\user-profiles\\user-profiles.controller.spec.ts","mappings":"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","names":[],"sources":["C:\\Users\\g-ekoh\\Desktop\\StrellerMinds-Backend\\src\\user-profiles\\user-profiles.controller.spec.ts"],"sourcesContent":["import { Test, TestingModule } from '@nestjs/testing';\r\nimport { UserProfilesController } from './user-profiles.controller';\r\nimport { UserProfilesService } from './user-profiles.service';\r\nimport { CreateUserProfileDto } from './dto/create-user-profile.dto';\r\nimport { UpdateUserProfileDto } from './dto/update-user-profile.dto';\r\nimport { UserProfile } from './entities/user-profile.entity';\r\n\r\ndescribe('UserProfilesController', () => {\r\n  let controller: UserProfilesController;\r\n  let service: UserProfilesService;\r\n\r\n  const mockUserId = 'user-123';\r\n  const mockProfileId = 'profile-123';\r\n  const mockProfile: UserProfile = {\r\n    id: mockProfileId,\r\n    firstName: 'John',\r\n    lastName: 'Doe',\r\n    bio: 'A short bio',\r\n    avatarUrl: 'http://avatar.com/image.png',\r\n    phoneNumber: '1234567890',\r\n    address: '123 Main St',\r\n    city: 'New York',\r\n    country: 'USA',\r\n    postalCode: '10001',\r\n    dateOfBirth: new Date('1990-01-01'),\r\n    isPublic: true,\r\n    userId: mockUserId,\r\n    user: null,\r\n    createdAt: new Date(),\r\n    updatedAt: new Date(),\r\n  };\r\n\r\n  const mockService = {\r\n    create: jest.fn().mockResolvedValue(mockProfile),\r\n    findAll: jest.fn().mockResolvedValue([mockProfile]),\r\n    findOne: jest.fn().mockResolvedValue(mockProfile),\r\n    findByUserId: jest.fn().mockResolvedValue(mockProfile),\r\n    update: jest.fn().mockResolvedValue(mockProfile),\r\n    patch: jest.fn().mockResolvedValue(mockProfile),\r\n    remove: jest.fn().mockResolvedValue(undefined),\r\n  };\r\n\r\n  beforeEach(async () => {\r\n    const module: TestingModule = await Test.createTestingModule({\r\n      controllers: [UserProfilesController],\r\n      providers: [\r\n        {\r\n          provide: UserProfilesService,\r\n          useValue: mockService,\r\n        },\r\n      ],\r\n    }).compile();\r\n\r\n    controller = module.get<UserProfilesController>(UserProfilesController);\r\n    service = module.get<UserProfilesService>(UserProfilesService);\r\n  });\r\n\r\n  it('should be defined', () => {\r\n    expect(controller).toBeDefined();\r\n  });\r\n\r\n  describe('create', () => {\r\n    it('should create a new user profile', async () => {\r\n      const dto: CreateUserProfileDto = { firstName: 'John' };\r\n      const req = { user: { id: mockUserId } };\r\n      const result = await controller.create(req, dto);\r\n      expect(result).toEqual(mockProfile);\r\n      expect(service.create).toHaveBeenCalledWith(mockUserId, dto);\r\n    });\r\n  });\r\n\r\n  describe('findAll', () => {\r\n    it('should return all public profiles', async () => {\r\n      const result = await controller.findAll();\r\n      expect(result).toEqual([mockProfile]);\r\n      expect(service.findAll).toHaveBeenCalled();\r\n    });\r\n  });\r\n\r\n  describe('findOne', () => {\r\n    it('should return a profile by id', async () => {\r\n      const req = { user: { id: mockUserId } };\r\n      const result = await controller.findOne(mockProfileId, req);\r\n      expect(result).toEqual(mockProfile);\r\n      expect(service.findOne).toHaveBeenCalledWith(mockProfileId);\r\n    });\r\n  });\r\n\r\n  describe('findByUserId', () => {\r\n    it('should return a profile by user id', async () => {\r\n      const req = { user: { id: mockUserId } };\r\n      const result = await controller.findByUserId(mockUserId, req);\r\n      expect(result).toEqual(mockProfile);\r\n      expect(service.findByUserId).toHaveBeenCalledWith(mockUserId, mockUserId);\r\n    });\r\n  });\r\n\r\n  describe('update', () => {\r\n    it('should update a profile', async () => {\r\n      const dto: UpdateUserProfileDto = { firstName: 'Jane' };\r\n      const req = { user: { id: mockUserId } };\r\n      const result = await controller.update(mockProfileId, req, dto);\r\n      expect(result).toEqual(mockProfile);\r\n      expect(service.update).toHaveBeenCalledWith(mockProfileId, mockUserId, dto);\r\n    });\r\n  });\r\n\r\n  describe('patch', () => {\r\n    it('should partially update a profile', async () => {\r\n      const dto: UpdateUserProfileDto = { bio: 'Updated bio' };\r\n      const req = { user: { id: mockUserId } };\r\n      const result = await controller.patch(mockProfileId, req, dto);\r\n      expect(result).toEqual(mockProfile);\r\n      expect(service.patch).toHaveBeenCalledWith(mockProfileId, mockUserId, dto);\r\n    });\r\n  });\r\n\r\n  describe('remove', () => {\r\n    it('should delete a profile', async () => {\r\n      const req = { user: { id: mockUserId } };\r\n      const result = await controller.remove(mockProfileId, req);\r\n      expect(result).toBeUndefined();\r\n      expect(service.remove).toHaveBeenCalledWith(mockProfileId, mockUserId);\r\n    });\r\n  });\r\n\r\n  describe('adminRemove', () => {\r\n    it('should allow an admin to delete a profile', async () => {\r\n      const req = { user: { id: 'admin-id' } };\r\n      const result = await controller.adminRemove(mockProfileId, req);\r\n      expect(result).toBeUndefined();\r\n      expect(service.remove).toHaveBeenCalledWith(mockProfileId, 'admin-id');\r\n    });\r\n  });\r\n});\r\n"],"version":3}