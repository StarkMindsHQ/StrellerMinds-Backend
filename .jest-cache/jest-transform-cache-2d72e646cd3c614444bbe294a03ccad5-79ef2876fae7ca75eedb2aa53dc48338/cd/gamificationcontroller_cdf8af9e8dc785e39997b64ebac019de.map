{"file":"C:\\Users\\g-ekoh\\Desktop\\StrellerMinds-Backend\\src\\gamification\\controllers\\gamification.controller.ts","mappings":";;;;;;;;;;;;;;;;AAAA,2CAAyH;AACzH,yEAAqE;AACrE,+DAA2D;AAC3D,yEAAqE;AACrE,uFAAkF;AAClF,wEAAmE;AAI5D,IAAM,sBAAsB,GAA5B,MAAM,sBAAsB;IACjC,YACmB,kBAAsC,EACtC,aAA4B,EAC5B,kBAAsC,EACtC,YAAsC;QAHtC,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,kBAAa,GAAb,aAAa,CAAe;QAC5B,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,iBAAY,GAAZ,YAAY,CAA0B;IACtD,CAAC;IAGE,AAAN,KAAK,CAAC,eAAe;QACnB,IAAI,CAAC;YACH,OAAO,MAAM,IAAI,CAAC,kBAAkB,CAAC,kBAAkB,EAAE,CAAC;QAC5D,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,MAAM,IAAI,sBAAa,CAAC,8BAA8B,EAAE,mBAAU,CAAC,qBAAqB,CAAC,CAAC;QAC5F,CAAC;IACH,CAAC;IAGK,AAAN,KAAK,CAAC,UAAU;QACd,IAAI,CAAC;YACH,OAAO,MAAM,IAAI,CAAC,aAAa,CAAC,aAAa,EAAE,CAAC;QAClD,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,MAAM,IAAI,sBAAa,CAAC,yBAAyB,EAAE,mBAAU,CAAC,qBAAqB,CAAC,CAAC;QACvF,CAAC;IACH,CAAC;IAGK,AAAN,KAAK,CAAC,cAAc,CAAU,KAA0B;QACtD,IAAI,CAAC;YACH,OAAO,MAAM,IAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;QACjF,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,MAAM,IAAI,sBAAa,CAAC,6BAA6B,EAAE,mBAAU,CAAC,qBAAqB,CAAC,CAAC;QAC3F,CAAC;IACH,CAAC;IAGK,AAAN,KAAK,CAAC,SAAS,CAAqB,SAAkB;QACpD,IAAI,CAAC;YACH,OAAO,MAAM,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;QACtD,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,MAAM,IAAI,sBAAa,CAAC,wBAAwB,EAAE,mBAAU,CAAC,qBAAqB,CAAC,CAAC;QACtF,CAAC;IACH,CAAC;CACF,CAAA;AA3CY,wDAAsB;AAS3B;IADL,IAAA,YAAG,EAAC,cAAc,CAAC;;;;6DAOnB;AAGK;IADL,IAAA,YAAG,EAAC,SAAS,CAAC;;;;wDAOd;AAGK;IADL,IAAA,YAAG,EAAC,aAAa,CAAC;IACG,WAAA,IAAA,cAAK,GAAE,CAAA;;yDAAQ,2CAAmB,oBAAnB,2CAAmB;;4DAMvD;AAGK;IADL,IAAA,YAAG,EAAC,kBAAkB,CAAC;IACP,WAAA,IAAA,cAAK,EAAC,WAAW,CAAC,CAAA;;;;uDAMlC;iCA1CU,sBAAsB;IAFlC,IAAA,mBAAU,EAAC,cAAc,CAAC;IAC1B,IAAA,iBAAQ,EAAC,IAAI,uBAAc,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,oBAAoB,EAAE,IAAI,EAAE,CAAC,CAAC;yDAGrC,wCAAkB,oBAAlB,wCAAkB,oDACvB,8BAAa,oBAAb,8BAAa,oDACR,wCAAkB,oBAAlB,wCAAkB,oDACxB,qDAAwB,oBAAxB,qDAAwB;GAL9C,sBAAsB,CA2ClC","names":[],"sources":["C:\\Users\\g-ekoh\\Desktop\\StrellerMinds-Backend\\src\\gamification\\controllers\\gamification.controller.ts"],"sourcesContent":["import { Controller, Get, Query, Param, Req, UsePipes, ValidationPipe, HttpException, HttpStatus } from '@nestjs/common';\r\nimport { AchievementService } from '../services/achievement.service';\r\nimport { RewardService } from '../services/reward.service';\r\nimport { LeaderboardService } from '../services/leaderboard.service';\r\nimport { GamificationEventService } from '../services/gamification-event.service';\r\nimport { LeaderboardQueryDto } from '../dto/leaderboard-query.dto';\r\n\r\n@Controller('gamification')\r\n@UsePipes(new ValidationPipe({ whitelist: true, forbidNonWhitelisted: true }))\r\nexport class GamificationController {\r\n  constructor(\r\n    private readonly achievementService: AchievementService,\r\n    private readonly rewardService: RewardService,\r\n    private readonly leaderboardService: LeaderboardService,\r\n    private readonly eventService: GamificationEventService,\r\n  ) {}\r\n\r\n  @Get('achievements')\r\n  async getAchievements() {\r\n    try {\r\n      return await this.achievementService.getAllAchievements();\r\n    } catch (error) {\r\n      throw new HttpException('Failed to fetch achievements', HttpStatus.INTERNAL_SERVER_ERROR);\r\n    }\r\n  }\r\n\r\n  @Get('rewards')\r\n  async getRewards() {\r\n    try {\r\n      return await this.rewardService.getAllRewards();\r\n    } catch (error) {\r\n      throw new HttpException('Failed to fetch rewards', HttpStatus.INTERNAL_SERVER_ERROR);\r\n    }\r\n  }\r\n\r\n  @Get('leaderboard')\r\n  async getLeaderboard(@Query() query: LeaderboardQueryDto) {\r\n    try {\r\n      return await this.leaderboardService.getLeaderboard(query.period, query.limit);\r\n    } catch (error) {\r\n      throw new HttpException('Failed to fetch leaderboard', HttpStatus.INTERNAL_SERVER_ERROR);\r\n    }\r\n  }\r\n\r\n  @Get('analytics/events')\r\n  async getEvents(@Query('eventType') eventType?: string) {\r\n    try {\r\n      return await this.eventService.getEvents(eventType);\r\n    } catch (error) {\r\n      throw new HttpException('Failed to fetch events', HttpStatus.INTERNAL_SERVER_ERROR);\r\n    }\r\n  }\r\n} "],"version":3}