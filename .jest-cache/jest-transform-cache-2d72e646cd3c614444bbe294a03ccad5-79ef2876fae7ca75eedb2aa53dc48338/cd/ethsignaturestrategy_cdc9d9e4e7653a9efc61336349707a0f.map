{"file":"C:\\Users\\g-ekoh\\Desktop\\StrellerMinds-Backend\\src\\verification\\strategies\\eth-signature.strategy.ts","mappings":";;;;;;;;;AAAA,wDAAwD;AACxD,2CAA4C;AAC5C,mCAAuC;AAGhC,IAAM,oBAAoB,GAA1B,MAAM,oBAAoB;IAC/B,KAAK,CAAC,MAAM,CAAC,SAAiB;QAC5B,MAAM,OAAO,GAAG,6BAA6B,CAAC;QAC9C,MAAM,OAAO,GAAG,uBAAuB,CAAC;QAExC,IAAI,CAAC;YACH,MAAM,gBAAgB,GAAG,IAAA,sBAAa,EAAC,OAAO,EAAE,SAAS,CAAC,CAAC;YAC3D,MAAM,OAAO,GAAG,gBAAgB,CAAC,WAAW,EAAE,KAAK,OAAO,CAAC,WAAW,EAAE,CAAC;YAEzE,OAAO;gBACL,QAAQ,EAAE,OAAO;gBACjB,gBAAgB;aACjB,CAAC;QACJ,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,MAAM,IAAI,KAAK,CAAC,4BAA4B,CAAC,CAAC;QAChD,CAAC;IACH,CAAC;CACF,CAAA;AAjBY,oDAAoB;+BAApB,oBAAoB;IADhC,IAAA,mBAAU,GAAE;GACA,oBAAoB,CAiBhC","names":[],"sources":["C:\\Users\\g-ekoh\\Desktop\\StrellerMinds-Backend\\src\\verification\\strategies\\eth-signature.strategy.ts"],"sourcesContent":["// src/verification/strategies/eth-signature.strategy.ts\r\nimport { Injectable } from '@nestjs/common';\r\nimport { verifyMessage } from 'ethers';\r\n\r\n@Injectable()\r\nexport class EthSignatureStrategy {\r\n  async verify(signature: string): Promise<any> {\r\n    const message = 'Verify credential ownership';\r\n    const address = '0xYourExpectedAddress';\r\n\r\n    try {\r\n      const recoveredAddress = verifyMessage(message, signature);\r\n      const isValid = recoveredAddress.toLowerCase() === address.toLowerCase();\r\n\r\n      return {\r\n        verified: isValid,\r\n        recoveredAddress,\r\n      };\r\n    } catch (error) {\r\n      throw new Error('Invalid Ethereum signature');\r\n    }\r\n  }\r\n}"],"version":3}