{"file":"C:\\Users\\g-ekoh\\Desktop\\StrellerMinds-Backend\\src\\grading\\controller\\grading.controller.ts","mappings":"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","names":[],"sources":["C:\\Users\\g-ekoh\\Desktop\\StrellerMinds-Backend\\src\\grading\\controller\\grading.controller.ts"],"sourcesContent":["/**\r\n * GradingController handles endpoints for grading assignments and updating grades.\r\n */\r\nimport {\r\n  Controller,\r\n  Post,\r\n  Patch,\r\n  Get,\r\n  Param,\r\n  Body,\r\n  Req,\r\n  UseGuards,\r\n} from '@nestjs/common';\r\nimport { GradingService } from '../services/grading.service';\r\nimport { CreateGradeDto } from '../dto/create-grade.dto';\r\nimport { UpdateGradeDto } from '../dto/update-grade.dto';\r\nimport { JwtAuthGuard } from '../../auth/guards/jwt-auth.guard';\r\nimport { RolesGuard } from '../../auth/guards/roles.guard';\r\nimport { Roles } from '../../auth/decorators/roles.decorator';\r\nimport {\r\n  ApiTags,\r\n  ApiBearerAuth,\r\n  ApiOperation,\r\n  ApiResponse,\r\n  ApiParam,\r\n  ApiBody,\r\n} from '@nestjs/swagger';\r\n\r\n@ApiTags('Grading')\r\n@ApiBearerAuth()\r\n@Controller('grading')\r\n@UseGuards(JwtAuthGuard, RolesGuard)\r\nexport class GradingController {\r\n  constructor(private readonly gradingService: GradingService) {}\r\n\r\n  /**\r\n   * Mentor grades a student assignment.\r\n   */\r\n  @Post(':studentId/:assignmentId')\r\n  @Roles('mentor')\r\n  @ApiOperation({ summary: 'Mentor grades a student assignment' })\r\n  @ApiParam({ name: 'studentId', type: Number, example: 2 })\r\n  @ApiParam({ name: 'assignmentId', type: Number, example: 5 })\r\n  @ApiBody({ type: CreateGradeDto })\r\n  @ApiResponse({ status: 201, description: 'Grade successfully created.' })\r\n  @ApiResponse({\r\n    status: 403,\r\n    description: 'Forbidden. Only mentors can grade assignments.',\r\n  })\r\n  async gradeAssignment(\r\n    @Param('studentId') studentId: number,\r\n    @Param('assignmentId') assignmentId: number,\r\n    @Body() dto: CreateGradeDto,\r\n    @Req() req,\r\n  ) {\r\n    return this.gradingService.gradeAssignment(\r\n      req.user,\r\n      studentId,\r\n      assignmentId,\r\n      dto,\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Mentor updates an existing grade.\r\n   */\r\n  @Patch(':gradeId')\r\n  @Roles('mentor')\r\n  @ApiOperation({ summary: 'Mentor updates an existing grade' })\r\n  @ApiParam({ name: 'gradeId', type: Number, example: 10 })\r\n  @ApiBody({ type: UpdateGradeDto })\r\n  @ApiResponse({ status: 200, description: 'Grade successfully updated.' })\r\n  @ApiResponse({ status: 404, description: 'Grade not found.' })\r\n  @ApiResponse({\r\n    status: 403,\r\n    description: 'Forbidden. Only mentors can update grades.',\r\n  })\r\n  async updateGrade(\r\n    @Param('gradeId') gradeId: number,\r\n    @Body() dto: UpdateGradeDto,\r\n    @Req() req,\r\n  ) {\r\n    return this.gradingService.updateGrade(req.user, gradeId, dto);\r\n  }\r\n\r\n  /**\r\n   * Mentor retrieves grading history.\r\n   */\r\n  @Get('history')\r\n  @Roles('mentor')\r\n  @ApiOperation({ summary: 'Mentor retrieves grading history' })\r\n  @ApiResponse({\r\n    status: 200,\r\n    description: 'Returns a list of all grades submitted by the mentor.',\r\n  })\r\n  async getGradingHistory(@Req() req) {\r\n    return this.gradingService.getGradingHistory(req.user);\r\n  }\r\n}\r\n"],"version":3}