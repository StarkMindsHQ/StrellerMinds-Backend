441f58aa7562653e01d501fe076eb110
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a, _b, _c;
Object.defineProperty(exports, "__esModule", { value: true });
exports.GradingController = void 0;
/**
 * GradingController handles endpoints for grading assignments and updating grades.
 */
const common_1 = require("@nestjs/common");
const grading_service_1 = require("../services/grading.service");
const create_grade_dto_1 = require("../dto/create-grade.dto");
const update_grade_dto_1 = require("../dto/update-grade.dto");
const jwt_auth_guard_1 = require("../../auth/guards/jwt-auth.guard");
const roles_guard_1 = require("../../auth/guards/roles.guard");
const roles_decorator_1 = require("../../auth/decorators/roles.decorator");
const swagger_1 = require("@nestjs/swagger");
let GradingController = class GradingController {
    constructor(gradingService) {
        this.gradingService = gradingService;
    }
    /**
     * Mentor grades a student assignment.
     */
    async gradeAssignment(studentId, assignmentId, dto, req) {
        return this.gradingService.gradeAssignment(req.user, studentId, assignmentId, dto);
    }
    /**
     * Mentor updates an existing grade.
     */
    async updateGrade(gradeId, dto, req) {
        return this.gradingService.updateGrade(req.user, gradeId, dto);
    }
    /**
     * Mentor retrieves grading history.
     */
    async getGradingHistory(req) {
        return this.gradingService.getGradingHistory(req.user);
    }
};
exports.GradingController = GradingController;
__decorate([
    (0, common_1.Post)(':studentId/:assignmentId'),
    (0, roles_decorator_1.Roles)('mentor'),
    (0, swagger_1.ApiOperation)({ summary: 'Mentor grades a student assignment' }),
    (0, swagger_1.ApiParam)({ name: 'studentId', type: Number, example: 2 }),
    (0, swagger_1.ApiParam)({ name: 'assignmentId', type: Number, example: 5 }),
    (0, swagger_1.ApiBody)({ type: create_grade_dto_1.CreateGradeDto }),
    (0, swagger_1.ApiResponse)({ status: 201, description: 'Grade successfully created.' }),
    (0, swagger_1.ApiResponse)({
        status: 403,
        description: 'Forbidden. Only mentors can grade assignments.',
    }),
    __param(0, (0, common_1.Param)('studentId')),
    __param(1, (0, common_1.Param)('assignmentId')),
    __param(2, (0, common_1.Body)()),
    __param(3, (0, common_1.Req)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Number, Number, typeof (_b = typeof create_grade_dto_1.CreateGradeDto !== "undefined" && create_grade_dto_1.CreateGradeDto) === "function" ? _b : Object, Object]),
    __metadata("design:returntype", Promise)
], GradingController.prototype, "gradeAssignment", null);
__decorate([
    (0, common_1.Patch)(':gradeId'),
    (0, roles_decorator_1.Roles)('mentor'),
    (0, swagger_1.ApiOperation)({ summary: 'Mentor updates an existing grade' }),
    (0, swagger_1.ApiParam)({ name: 'gradeId', type: Number, example: 10 }),
    (0, swagger_1.ApiBody)({ type: update_grade_dto_1.UpdateGradeDto }),
    (0, swagger_1.ApiResponse)({ status: 200, description: 'Grade successfully updated.' }),
    (0, swagger_1.ApiResponse)({ status: 404, description: 'Grade not found.' }),
    (0, swagger_1.ApiResponse)({
        status: 403,
        description: 'Forbidden. Only mentors can update grades.',
    }),
    __param(0, (0, common_1.Param)('gradeId')),
    __param(1, (0, common_1.Body)()),
    __param(2, (0, common_1.Req)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Number, typeof (_c = typeof update_grade_dto_1.UpdateGradeDto !== "undefined" && update_grade_dto_1.UpdateGradeDto) === "function" ? _c : Object, Object]),
    __metadata("design:returntype", Promise)
], GradingController.prototype, "updateGrade", null);
__decorate([
    (0, common_1.Get)('history'),
    (0, roles_decorator_1.Roles)('mentor'),
    (0, swagger_1.ApiOperation)({ summary: 'Mentor retrieves grading history' }),
    (0, swagger_1.ApiResponse)({
        status: 200,
        description: 'Returns a list of all grades submitted by the mentor.',
    }),
    __param(0, (0, common_1.Req)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Promise)
], GradingController.prototype, "getGradingHistory", null);
exports.GradingController = GradingController = __decorate([
    (0, swagger_1.ApiTags)('Grading'),
    (0, swagger_1.ApiBearerAuth)(),
    (0, common_1.Controller)('grading'),
    (0, common_1.UseGuards)(jwt_auth_guard_1.JwtAuthGuard, roles_guard_1.RolesGuard),
    __metadata("design:paramtypes", [typeof (_a = typeof grading_service_1.GradingService !== "undefined" && grading_service_1.GradingService) === "function" ? _a : Object])
], GradingController);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiQzpcXFVzZXJzXFxnLWVrb2hcXERlc2t0b3BcXFN0cmVsbGVyTWluZHMtQmFja2VuZFxcc3JjXFxncmFkaW5nXFxjb250cm9sbGVyXFxncmFkaW5nLmNvbnRyb2xsZXIudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7OztBQUFBOztHQUVHO0FBQ0gsMkNBU3dCO0FBQ3hCLGlFQUE2RDtBQUM3RCw4REFBeUQ7QUFDekQsOERBQXlEO0FBQ3pELHFFQUFnRTtBQUNoRSwrREFBMkQ7QUFDM0QsMkVBQThEO0FBQzlELDZDQU95QjtBQU1sQixJQUFNLGlCQUFpQixHQUF2QixNQUFNLGlCQUFpQjtJQUM1QixZQUE2QixjQUE4QjtRQUE5QixtQkFBYyxHQUFkLGNBQWMsQ0FBZ0I7SUFBRyxDQUFDO0lBRS9EOztPQUVHO0lBWUcsQUFBTixLQUFLLENBQUMsZUFBZSxDQUNDLFNBQWlCLEVBQ2QsWUFBb0IsRUFDbkMsR0FBbUIsRUFDcEIsR0FBRztRQUVWLE9BQU8sSUFBSSxDQUFDLGNBQWMsQ0FBQyxlQUFlLENBQ3hDLEdBQUcsQ0FBQyxJQUFJLEVBQ1IsU0FBUyxFQUNULFlBQVksRUFDWixHQUFHLENBQ0osQ0FBQztJQUNKLENBQUM7SUFFRDs7T0FFRztJQVlHLEFBQU4sS0FBSyxDQUFDLFdBQVcsQ0FDRyxPQUFlLEVBQ3pCLEdBQW1CLEVBQ3BCLEdBQUc7UUFFVixPQUFPLElBQUksQ0FBQyxjQUFjLENBQUMsV0FBVyxDQUFDLEdBQUcsQ0FBQyxJQUFJLEVBQUUsT0FBTyxFQUFFLEdBQUcsQ0FBQyxDQUFDO0lBQ2pFLENBQUM7SUFFRDs7T0FFRztJQVFHLEFBQU4sS0FBSyxDQUFDLGlCQUFpQixDQUFRLEdBQUc7UUFDaEMsT0FBTyxJQUFJLENBQUMsY0FBYyxDQUFDLGlCQUFpQixDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUN6RCxDQUFDO0NBQ0YsQ0FBQTtBQWxFWSw4Q0FBaUI7QUFpQnRCO0lBWEwsSUFBQSxhQUFJLEVBQUMsMEJBQTBCLENBQUM7SUFDaEMsSUFBQSx1QkFBSyxFQUFDLFFBQVEsQ0FBQztJQUNmLElBQUEsc0JBQVksRUFBQyxFQUFFLE9BQU8sRUFBRSxvQ0FBb0MsRUFBRSxDQUFDO0lBQy9ELElBQUEsa0JBQVEsRUFBQyxFQUFFLElBQUksRUFBRSxXQUFXLEVBQUUsSUFBSSxFQUFFLE1BQU0sRUFBRSxPQUFPLEVBQUUsQ0FBQyxFQUFFLENBQUM7SUFDekQsSUFBQSxrQkFBUSxFQUFDLEVBQUUsSUFBSSxFQUFFLGNBQWMsRUFBRSxJQUFJLEVBQUUsTUFBTSxFQUFFLE9BQU8sRUFBRSxDQUFDLEVBQUUsQ0FBQztJQUM1RCxJQUFBLGlCQUFPLEVBQUMsRUFBRSxJQUFJLEVBQUUsaUNBQWMsRUFBRSxDQUFDO0lBQ2pDLElBQUEscUJBQVcsRUFBQyxFQUFFLE1BQU0sRUFBRSxHQUFHLEVBQUUsV0FBVyxFQUFFLDZCQUE2QixFQUFFLENBQUM7SUFDeEUsSUFBQSxxQkFBVyxFQUFDO1FBQ1gsTUFBTSxFQUFFLEdBQUc7UUFDWCxXQUFXLEVBQUUsZ0RBQWdEO0tBQzlELENBQUM7SUFFQyxXQUFBLElBQUEsY0FBSyxFQUFDLFdBQVcsQ0FBQyxDQUFBO0lBQ2xCLFdBQUEsSUFBQSxjQUFLLEVBQUMsY0FBYyxDQUFDLENBQUE7SUFDckIsV0FBQSxJQUFBLGFBQUksR0FBRSxDQUFBO0lBQ04sV0FBQSxJQUFBLFlBQUcsR0FBRSxDQUFBOzt5RUFETyxpQ0FBYyxvQkFBZCxpQ0FBYzs7d0RBUzVCO0FBZ0JLO0lBWEwsSUFBQSxjQUFLLEVBQUMsVUFBVSxDQUFDO0lBQ2pCLElBQUEsdUJBQUssRUFBQyxRQUFRLENBQUM7SUFDZixJQUFBLHNCQUFZLEVBQUMsRUFBRSxPQUFPLEVBQUUsa0NBQWtDLEVBQUUsQ0FBQztJQUM3RCxJQUFBLGtCQUFRLEVBQUMsRUFBRSxJQUFJLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxNQUFNLEVBQUUsT0FBTyxFQUFFLEVBQUUsRUFBRSxDQUFDO0lBQ3hELElBQUEsaUJBQU8sRUFBQyxFQUFFLElBQUksRUFBRSxpQ0FBYyxFQUFFLENBQUM7SUFDakMsSUFBQSxxQkFBVyxFQUFDLEVBQUUsTUFBTSxFQUFFLEdBQUcsRUFBRSxXQUFXLEVBQUUsNkJBQTZCLEVBQUUsQ0FBQztJQUN4RSxJQUFBLHFCQUFXLEVBQUMsRUFBRSxNQUFNLEVBQUUsR0FBRyxFQUFFLFdBQVcsRUFBRSxrQkFBa0IsRUFBRSxDQUFDO0lBQzdELElBQUEscUJBQVcsRUFBQztRQUNYLE1BQU0sRUFBRSxHQUFHO1FBQ1gsV0FBVyxFQUFFLDRDQUE0QztLQUMxRCxDQUFDO0lBRUMsV0FBQSxJQUFBLGNBQUssRUFBQyxTQUFTLENBQUMsQ0FBQTtJQUNoQixXQUFBLElBQUEsYUFBSSxHQUFFLENBQUE7SUFDTixXQUFBLElBQUEsWUFBRyxHQUFFLENBQUE7O2lFQURPLGlDQUFjLG9CQUFkLGlDQUFjOztvREFJNUI7QUFZSztJQVBMLElBQUEsWUFBRyxFQUFDLFNBQVMsQ0FBQztJQUNkLElBQUEsdUJBQUssRUFBQyxRQUFRLENBQUM7SUFDZixJQUFBLHNCQUFZLEVBQUMsRUFBRSxPQUFPLEVBQUUsa0NBQWtDLEVBQUUsQ0FBQztJQUM3RCxJQUFBLHFCQUFXLEVBQUM7UUFDWCxNQUFNLEVBQUUsR0FBRztRQUNYLFdBQVcsRUFBRSx1REFBdUQ7S0FDckUsQ0FBQztJQUN1QixXQUFBLElBQUEsWUFBRyxHQUFFLENBQUE7Ozs7MERBRTdCOzRCQWpFVSxpQkFBaUI7SUFKN0IsSUFBQSxpQkFBTyxFQUFDLFNBQVMsQ0FBQztJQUNsQixJQUFBLHVCQUFhLEdBQUU7SUFDZixJQUFBLG1CQUFVLEVBQUMsU0FBUyxDQUFDO0lBQ3JCLElBQUEsa0JBQVMsRUFBQyw2QkFBWSxFQUFFLHdCQUFVLENBQUM7eURBRVcsZ0NBQWMsb0JBQWQsZ0NBQWM7R0FEaEQsaUJBQWlCLENBa0U3QiIsIm5hbWVzIjpbXSwic291cmNlcyI6WyJDOlxcVXNlcnNcXGctZWtvaFxcRGVza3RvcFxcU3RyZWxsZXJNaW5kcy1CYWNrZW5kXFxzcmNcXGdyYWRpbmdcXGNvbnRyb2xsZXJcXGdyYWRpbmcuY29udHJvbGxlci50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogR3JhZGluZ0NvbnRyb2xsZXIgaGFuZGxlcyBlbmRwb2ludHMgZm9yIGdyYWRpbmcgYXNzaWdubWVudHMgYW5kIHVwZGF0aW5nIGdyYWRlcy5cclxuICovXHJcbmltcG9ydCB7XHJcbiAgQ29udHJvbGxlcixcclxuICBQb3N0LFxyXG4gIFBhdGNoLFxyXG4gIEdldCxcclxuICBQYXJhbSxcclxuICBCb2R5LFxyXG4gIFJlcSxcclxuICBVc2VHdWFyZHMsXHJcbn0gZnJvbSAnQG5lc3Rqcy9jb21tb24nO1xyXG5pbXBvcnQgeyBHcmFkaW5nU2VydmljZSB9IGZyb20gJy4uL3NlcnZpY2VzL2dyYWRpbmcuc2VydmljZSc7XHJcbmltcG9ydCB7IENyZWF0ZUdyYWRlRHRvIH0gZnJvbSAnLi4vZHRvL2NyZWF0ZS1ncmFkZS5kdG8nO1xyXG5pbXBvcnQgeyBVcGRhdGVHcmFkZUR0byB9IGZyb20gJy4uL2R0by91cGRhdGUtZ3JhZGUuZHRvJztcclxuaW1wb3J0IHsgSnd0QXV0aEd1YXJkIH0gZnJvbSAnLi4vLi4vYXV0aC9ndWFyZHMvand0LWF1dGguZ3VhcmQnO1xyXG5pbXBvcnQgeyBSb2xlc0d1YXJkIH0gZnJvbSAnLi4vLi4vYXV0aC9ndWFyZHMvcm9sZXMuZ3VhcmQnO1xyXG5pbXBvcnQgeyBSb2xlcyB9IGZyb20gJy4uLy4uL2F1dGgvZGVjb3JhdG9ycy9yb2xlcy5kZWNvcmF0b3InO1xyXG5pbXBvcnQge1xyXG4gIEFwaVRhZ3MsXHJcbiAgQXBpQmVhcmVyQXV0aCxcclxuICBBcGlPcGVyYXRpb24sXHJcbiAgQXBpUmVzcG9uc2UsXHJcbiAgQXBpUGFyYW0sXHJcbiAgQXBpQm9keSxcclxufSBmcm9tICdAbmVzdGpzL3N3YWdnZXInO1xyXG5cclxuQEFwaVRhZ3MoJ0dyYWRpbmcnKVxyXG5AQXBpQmVhcmVyQXV0aCgpXHJcbkBDb250cm9sbGVyKCdncmFkaW5nJylcclxuQFVzZUd1YXJkcyhKd3RBdXRoR3VhcmQsIFJvbGVzR3VhcmQpXHJcbmV4cG9ydCBjbGFzcyBHcmFkaW5nQ29udHJvbGxlciB7XHJcbiAgY29uc3RydWN0b3IocHJpdmF0ZSByZWFkb25seSBncmFkaW5nU2VydmljZTogR3JhZGluZ1NlcnZpY2UpIHt9XHJcblxyXG4gIC8qKlxyXG4gICAqIE1lbnRvciBncmFkZXMgYSBzdHVkZW50IGFzc2lnbm1lbnQuXHJcbiAgICovXHJcbiAgQFBvc3QoJzpzdHVkZW50SWQvOmFzc2lnbm1lbnRJZCcpXHJcbiAgQFJvbGVzKCdtZW50b3InKVxyXG4gIEBBcGlPcGVyYXRpb24oeyBzdW1tYXJ5OiAnTWVudG9yIGdyYWRlcyBhIHN0dWRlbnQgYXNzaWdubWVudCcgfSlcclxuICBAQXBpUGFyYW0oeyBuYW1lOiAnc3R1ZGVudElkJywgdHlwZTogTnVtYmVyLCBleGFtcGxlOiAyIH0pXHJcbiAgQEFwaVBhcmFtKHsgbmFtZTogJ2Fzc2lnbm1lbnRJZCcsIHR5cGU6IE51bWJlciwgZXhhbXBsZTogNSB9KVxyXG4gIEBBcGlCb2R5KHsgdHlwZTogQ3JlYXRlR3JhZGVEdG8gfSlcclxuICBAQXBpUmVzcG9uc2UoeyBzdGF0dXM6IDIwMSwgZGVzY3JpcHRpb246ICdHcmFkZSBzdWNjZXNzZnVsbHkgY3JlYXRlZC4nIH0pXHJcbiAgQEFwaVJlc3BvbnNlKHtcclxuICAgIHN0YXR1czogNDAzLFxyXG4gICAgZGVzY3JpcHRpb246ICdGb3JiaWRkZW4uIE9ubHkgbWVudG9ycyBjYW4gZ3JhZGUgYXNzaWdubWVudHMuJyxcclxuICB9KVxyXG4gIGFzeW5jIGdyYWRlQXNzaWdubWVudChcclxuICAgIEBQYXJhbSgnc3R1ZGVudElkJykgc3R1ZGVudElkOiBudW1iZXIsXHJcbiAgICBAUGFyYW0oJ2Fzc2lnbm1lbnRJZCcpIGFzc2lnbm1lbnRJZDogbnVtYmVyLFxyXG4gICAgQEJvZHkoKSBkdG86IENyZWF0ZUdyYWRlRHRvLFxyXG4gICAgQFJlcSgpIHJlcSxcclxuICApIHtcclxuICAgIHJldHVybiB0aGlzLmdyYWRpbmdTZXJ2aWNlLmdyYWRlQXNzaWdubWVudChcclxuICAgICAgcmVxLnVzZXIsXHJcbiAgICAgIHN0dWRlbnRJZCxcclxuICAgICAgYXNzaWdubWVudElkLFxyXG4gICAgICBkdG8sXHJcbiAgICApO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogTWVudG9yIHVwZGF0ZXMgYW4gZXhpc3RpbmcgZ3JhZGUuXHJcbiAgICovXHJcbiAgQFBhdGNoKCc6Z3JhZGVJZCcpXHJcbiAgQFJvbGVzKCdtZW50b3InKVxyXG4gIEBBcGlPcGVyYXRpb24oeyBzdW1tYXJ5OiAnTWVudG9yIHVwZGF0ZXMgYW4gZXhpc3RpbmcgZ3JhZGUnIH0pXHJcbiAgQEFwaVBhcmFtKHsgbmFtZTogJ2dyYWRlSWQnLCB0eXBlOiBOdW1iZXIsIGV4YW1wbGU6IDEwIH0pXHJcbiAgQEFwaUJvZHkoeyB0eXBlOiBVcGRhdGVHcmFkZUR0byB9KVxyXG4gIEBBcGlSZXNwb25zZSh7IHN0YXR1czogMjAwLCBkZXNjcmlwdGlvbjogJ0dyYWRlIHN1Y2Nlc3NmdWxseSB1cGRhdGVkLicgfSlcclxuICBAQXBpUmVzcG9uc2UoeyBzdGF0dXM6IDQwNCwgZGVzY3JpcHRpb246ICdHcmFkZSBub3QgZm91bmQuJyB9KVxyXG4gIEBBcGlSZXNwb25zZSh7XHJcbiAgICBzdGF0dXM6IDQwMyxcclxuICAgIGRlc2NyaXB0aW9uOiAnRm9yYmlkZGVuLiBPbmx5IG1lbnRvcnMgY2FuIHVwZGF0ZSBncmFkZXMuJyxcclxuICB9KVxyXG4gIGFzeW5jIHVwZGF0ZUdyYWRlKFxyXG4gICAgQFBhcmFtKCdncmFkZUlkJykgZ3JhZGVJZDogbnVtYmVyLFxyXG4gICAgQEJvZHkoKSBkdG86IFVwZGF0ZUdyYWRlRHRvLFxyXG4gICAgQFJlcSgpIHJlcSxcclxuICApIHtcclxuICAgIHJldHVybiB0aGlzLmdyYWRpbmdTZXJ2aWNlLnVwZGF0ZUdyYWRlKHJlcS51c2VyLCBncmFkZUlkLCBkdG8pO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogTWVudG9yIHJldHJpZXZlcyBncmFkaW5nIGhpc3RvcnkuXHJcbiAgICovXHJcbiAgQEdldCgnaGlzdG9yeScpXHJcbiAgQFJvbGVzKCdtZW50b3InKVxyXG4gIEBBcGlPcGVyYXRpb24oeyBzdW1tYXJ5OiAnTWVudG9yIHJldHJpZXZlcyBncmFkaW5nIGhpc3RvcnknIH0pXHJcbiAgQEFwaVJlc3BvbnNlKHtcclxuICAgIHN0YXR1czogMjAwLFxyXG4gICAgZGVzY3JpcHRpb246ICdSZXR1cm5zIGEgbGlzdCBvZiBhbGwgZ3JhZGVzIHN1Ym1pdHRlZCBieSB0aGUgbWVudG9yLicsXHJcbiAgfSlcclxuICBhc3luYyBnZXRHcmFkaW5nSGlzdG9yeShAUmVxKCkgcmVxKSB7XHJcbiAgICByZXR1cm4gdGhpcy5ncmFkaW5nU2VydmljZS5nZXRHcmFkaW5nSGlzdG9yeShyZXEudXNlcik7XHJcbiAgfVxyXG59XHJcbiJdLCJ2ZXJzaW9uIjozfQ==