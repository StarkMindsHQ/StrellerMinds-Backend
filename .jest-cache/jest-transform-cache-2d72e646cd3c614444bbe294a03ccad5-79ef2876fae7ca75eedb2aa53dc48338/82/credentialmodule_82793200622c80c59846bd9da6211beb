d72b871816e1ea192731114b773ce8ac
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CredentialModule = void 0;
/**
 * CredentialModule provides credential management features, including issuing, querying, and verifying credentials.
 *
 * @module Credential
 */
const common_1 = require("@nestjs/common");
const typeorm_1 = require("@nestjs/typeorm");
const credential_service_1 = require("./credential.service");
const credential_controller_1 = require("./credential.controller");
const credential_entity_1 = require("./entities/credential.entity");
const shared_module_1 = require("src/shared/shared.module");
let CredentialModule = class CredentialModule {
};
exports.CredentialModule = CredentialModule;
exports.CredentialModule = CredentialModule = __decorate([
    (0, common_1.Module)({
        imports: [typeorm_1.TypeOrmModule.forFeature([credential_entity_1.Credential]), shared_module_1.SharedModule],
        controllers: [credential_controller_1.CredentialController],
        providers: [credential_service_1.CredentialService],
        exports: [credential_service_1.CredentialService], // Export if other modules need CredentialService
    })
], CredentialModule);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiQzpcXFVzZXJzXFxnLWVrb2hcXERlc2t0b3BcXFN0cmVsbGVyTWluZHMtQmFja2VuZFxcc3JjXFxjcmVkZW50aWFsXFxjcmVkZW50aWFsLm1vZHVsZS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTs7OztHQUlHO0FBQ0gsMkNBQXdDO0FBQ3hDLDZDQUFnRDtBQUNoRCw2REFBeUQ7QUFDekQsbUVBQStEO0FBQy9ELG9FQUEwRDtBQUMxRCw0REFBd0Q7QUFRakQsSUFBTSxnQkFBZ0IsR0FBdEIsTUFBTSxnQkFBZ0I7Q0FBRyxDQUFBO0FBQW5CLDRDQUFnQjsyQkFBaEIsZ0JBQWdCO0lBTjVCLElBQUEsZUFBTSxFQUFDO1FBQ04sT0FBTyxFQUFFLENBQUMsdUJBQWEsQ0FBQyxVQUFVLENBQUMsQ0FBQyw4QkFBVSxDQUFDLENBQUMsRUFBRSw0QkFBWSxDQUFDO1FBQy9ELFdBQVcsRUFBRSxDQUFDLDRDQUFvQixDQUFDO1FBQ25DLFNBQVMsRUFBRSxDQUFDLHNDQUFpQixDQUFDO1FBQzlCLE9BQU8sRUFBRSxDQUFDLHNDQUFpQixDQUFDLEVBQUUsaURBQWlEO0tBQ2hGLENBQUM7R0FDVyxnQkFBZ0IsQ0FBRyIsIm5hbWVzIjpbXSwic291cmNlcyI6WyJDOlxcVXNlcnNcXGctZWtvaFxcRGVza3RvcFxcU3RyZWxsZXJNaW5kcy1CYWNrZW5kXFxzcmNcXGNyZWRlbnRpYWxcXGNyZWRlbnRpYWwubW9kdWxlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBDcmVkZW50aWFsTW9kdWxlIHByb3ZpZGVzIGNyZWRlbnRpYWwgbWFuYWdlbWVudCBmZWF0dXJlcywgaW5jbHVkaW5nIGlzc3VpbmcsIHF1ZXJ5aW5nLCBhbmQgdmVyaWZ5aW5nIGNyZWRlbnRpYWxzLlxyXG4gKlxyXG4gKiBAbW9kdWxlIENyZWRlbnRpYWxcclxuICovXHJcbmltcG9ydCB7IE1vZHVsZSB9IGZyb20gJ0BuZXN0anMvY29tbW9uJztcclxuaW1wb3J0IHsgVHlwZU9ybU1vZHVsZSB9IGZyb20gJ0BuZXN0anMvdHlwZW9ybSc7XHJcbmltcG9ydCB7IENyZWRlbnRpYWxTZXJ2aWNlIH0gZnJvbSAnLi9jcmVkZW50aWFsLnNlcnZpY2UnO1xyXG5pbXBvcnQgeyBDcmVkZW50aWFsQ29udHJvbGxlciB9IGZyb20gJy4vY3JlZGVudGlhbC5jb250cm9sbGVyJztcclxuaW1wb3J0IHsgQ3JlZGVudGlhbCB9IGZyb20gJy4vZW50aXRpZXMvY3JlZGVudGlhbC5lbnRpdHknO1xyXG5pbXBvcnQgeyBTaGFyZWRNb2R1bGUgfSBmcm9tICdzcmMvc2hhcmVkL3NoYXJlZC5tb2R1bGUnO1xyXG5cclxuQE1vZHVsZSh7XHJcbiAgaW1wb3J0czogW1R5cGVPcm1Nb2R1bGUuZm9yRmVhdHVyZShbQ3JlZGVudGlhbF0pLCBTaGFyZWRNb2R1bGVdLFxyXG4gIGNvbnRyb2xsZXJzOiBbQ3JlZGVudGlhbENvbnRyb2xsZXJdLFxyXG4gIHByb3ZpZGVyczogW0NyZWRlbnRpYWxTZXJ2aWNlXSxcclxuICBleHBvcnRzOiBbQ3JlZGVudGlhbFNlcnZpY2VdLCAvLyBFeHBvcnQgaWYgb3RoZXIgbW9kdWxlcyBuZWVkIENyZWRlbnRpYWxTZXJ2aWNlXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBDcmVkZW50aWFsTW9kdWxlIHt9XHJcbiJdLCJ2ZXJzaW9uIjozfQ==