{"file":"C:\\Users\\g-ekoh\\Desktop\\StrellerMinds-Backend\\src\\submission\\submission.service.spec.ts","mappings":"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","names":[],"sources":["C:\\Users\\g-ekoh\\Desktop\\StrellerMinds-Backend\\src\\submission\\submission.service.spec.ts"],"sourcesContent":["import { Test, TestingModule } from '@nestjs/testing';\r\nimport { SubmissionService } from './provider/submission.service';\r\nimport { getRepositoryToken } from '@nestjs/typeorm';\r\nimport { Submission } from './submission.entity';\r\nimport { Repository } from 'typeorm';\r\nimport { NotFoundException, BadRequestException } from '@nestjs/common';\r\nimport { CreateSubmissionDto } from './dtos/createSubmission.dto';\r\n\r\ndescribe('SubmissionService', () => {\r\n  let service: SubmissionService;\r\n  let repo: Repository<Submission>;\r\n\r\n  const mockRepo = {\r\n    create: jest.fn(),\r\n    save: jest.fn(),\r\n    findOne: jest.fn(),\r\n  };\r\n\r\n  beforeEach(async () => {\r\n    const module: TestingModule = await Test.createTestingModule({\r\n      providers: [\r\n        SubmissionService,\r\n        {\r\n          provide: getRepositoryToken(Submission),\r\n          useValue: mockRepo,\r\n        },\r\n      ],\r\n    }).compile();\r\n\r\n    service = module.get<SubmissionService>(SubmissionService);\r\n    repo = module.get(getRepositoryToken(Submission));\r\n  });\r\n\r\n  afterEach(() => jest.clearAllMocks());\r\n\r\n  describe('create', () => {\r\n    it('should create and save a submission with a file', async () => {\r\n      const dto: CreateSubmissionDto = {\r\n        studentId: 'uuid-student',\r\n        assignmentId: 'uuid-assignment',\r\n        textContent: 'My answer',\r\n      };\r\n      const file = { path: 'uploads/file.pdf' } as Express.Multer.File;\r\n      const submission = { id: '1', ...dto, fileUrl: file.path, status: 'submitted' };\r\n\r\n      mockRepo.create.mockReturnValue(submission);\r\n      mockRepo.save.mockResolvedValue(submission);\r\n\r\n      const result = await service.create(dto, file);\r\n      expect(result).toEqual(submission);\r\n    });\r\n\r\n    it('should create a submission without a file', async () => {\r\n      const dto: CreateSubmissionDto = {\r\n        studentId: 'uuid-student',\r\n        assignmentId: 'uuid-assignment',\r\n      };\r\n      const submission = { id: '1', ...dto, fileUrl: null, status: 'submitted' };\r\n\r\n      mockRepo.create.mockReturnValue(submission);\r\n      mockRepo.save.mockResolvedValue(submission);\r\n\r\n      const result = await service.create(dto);\r\n      expect(result).toEqual(submission);\r\n    });\r\n  });\r\n\r\n  describe('findOne', () => {\r\n    it('should return a submission if found', async () => {\r\n      const submission = { id: '1', studentId: 'uuid', assignmentId: 'uuid' };\r\n      mockRepo.findOne.mockResolvedValue(submission);\r\n\r\n      const result = await service.findOne('1');\r\n      expect(result).toEqual(submission);\r\n    });\r\n\r\n    it('should throw NotFoundException if not found', async () => {\r\n      mockRepo.findOne.mockResolvedValue(null);\r\n      await expect(service.findOne('123')).rejects.toThrow(NotFoundException);\r\n    });\r\n  });\r\n\r\n  describe('update', () => {\r\n    it('should update submission if within time limit', async () => {\r\n      const submittedAt = new Date(Date.now() - 1000 * 60 * 60 * 2); // 2 hours ago\r\n      const submission = {\r\n        id: '1',\r\n        studentId: 'uuid',\r\n        assignmentId: 'uuid',\r\n        submittedAt,\r\n      };\r\n      mockRepo.findOne.mockResolvedValue(submission);\r\n      mockRepo.save.mockResolvedValue({ ...submission, textContent: 'Updated' });\r\n\r\n      const result = await service.update('1', { textContent: 'Updated' });\r\n      expect(result.textContent).toBe('Updated');\r\n    });\r\n\r\n    it('should throw BadRequestException if past 6 hours', async () => {\r\n      const submittedAt = new Date(Date.now() - 1000 * 60 * 60 * 7); // 7 hours ago\r\n      const submission = {\r\n        id: '1',\r\n        studentId: 'uuid',\r\n        assignmentId: 'uuid',\r\n        submittedAt,\r\n      };\r\n      mockRepo.findOne.mockResolvedValue(submission);\r\n\r\n      await expect(service.update('1', { textContent: 'Late' })).rejects.toThrow(BadRequestException);\r\n    });\r\n  });\r\n});\r\n"],"version":3}