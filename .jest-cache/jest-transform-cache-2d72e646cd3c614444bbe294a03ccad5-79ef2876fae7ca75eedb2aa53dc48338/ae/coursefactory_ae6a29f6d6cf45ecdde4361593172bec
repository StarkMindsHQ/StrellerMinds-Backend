46edb05d5ae63c21a93b3967b46a1a9b
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CourseFactory = void 0;
const base_factory_1 = require("./base.factory");
const course_status_enum_1 = require("../../src/courses/enums/course-status.enum");
const course_level_enum_1 = require("../../src/courses/enums/course-level.enum");
const user_factory_1 = require("./user.factory");
class CourseFactory extends base_factory_1.BaseFactory {
    constructor() {
        super(...arguments);
        this.userFactory = new user_factory_1.UserFactory();
        this.traits = {
            draft: () => ({
                status: course_status_enum_1.CourseStatus.DRAFT,
                isPublished: false,
                publishedAt: null,
            }),
            published: () => ({
                status: course_status_enum_1.CourseStatus.PUBLISHED,
                isPublished: true,
                publishedAt: this.generateDate({ past: true }),
            }),
            archived: () => ({
                status: course_status_enum_1.CourseStatus.ARCHIVED,
                isPublished: false,
                archivedAt: this.generateDate({ past: true }),
            }),
            featured: () => ({
                isFeatured: true,
                featuredAt: this.generateDate({ past: true }),
            }),
            free: () => ({
                price: 0,
                originalPrice: 0,
            }),
            premium: () => ({
                price: this.generatePrice(200, 1000),
                originalPrice: this.generatePrice(250, 1200),
                isPremium: true,
            }),
            popular: () => ({
                studentsCount: this.generateNumber(500, 5000),
                rating: parseFloat((Math.random() * 0.5 + 4.5).toFixed(1)), // 4.5 - 5.0
                reviewsCount: this.generateNumber(100, 1000),
                isFeatured: true,
            }),
            beginner: () => ({
                level: course_level_enum_1.CourseLevel.BEGINNER,
                duration: this.generateNumber(30, 120),
                lessonsCount: this.generateNumber(5, 20),
            }),
            intermediate: () => ({
                level: course_level_enum_1.CourseLevel.INTERMEDIATE,
                duration: this.generateNumber(120, 300),
                lessonsCount: this.generateNumber(20, 40),
            }),
            advanced: () => ({
                level: course_level_enum_1.CourseLevel.ADVANCED,
                duration: this.generateNumber(300, 600),
                lessonsCount: this.generateNumber(40, 80),
            }),
            withDiscount: () => {
                const originalPrice = this.generatePrice(100, 500);
                const discountPercent = this.generateNumber(10, 50);
                const price = originalPrice * (1 - discountPercent / 100);
                return {
                    originalPrice,
                    price: parseFloat(price.toFixed(2)),
                    discountPercent,
                    discountExpiresAt: this.generateDate({ future: true }),
                };
            },
            newCourse: () => ({
                createdAt: this.generateDate({ days: 7 }),
                studentsCount: this.generateNumber(0, 50),
                reviewsCount: this.generateNumber(0, 10),
            }),
            programming: () => ({
                category: 'Programming',
                tags: ['programming', 'coding', 'development', 'software'],
                requirements: [
                    'Basic computer skills',
                    'Text editor or IDE',
                    'Programming language basics',
                ],
            }),
            design: () => ({
                category: 'Design',
                tags: ['design', 'creative', 'visual', 'ui/ux'],
                requirements: [
                    'Design software (Photoshop, Figma, etc.)',
                    'Creative mindset',
                    'Basic design principles',
                ],
            }),
        };
    }
    definition() {
        const title = this.generateText(1).replace('.', '');
        return {
            id: this.generateId(),
            title,
            slug: this.generateSlug(),
            description: this.generateText(3),
            shortDescription: this.generateText(1),
            thumbnail: this.generateImageUrl(800, 600),
            previewVideo: this.generateUrl(),
            status: course_status_enum_1.CourseStatus.PUBLISHED,
            level: this.pickRandom(Object.values(course_level_enum_1.CourseLevel)),
            price: this.generatePrice(50, 500),
            originalPrice: this.generatePrice(60, 600),
            currency: 'USD',
            duration: this.generateNumber(30, 300), // minutes
            lessonsCount: this.generateNumber(5, 50),
            studentsCount: this.generateNumber(0, 1000),
            rating: parseFloat((Math.random() * 2 + 3).toFixed(1)), // 3.0 - 5.0
            reviewsCount: this.generateNumber(0, 100),
            language: this.pickRandom(['en', 'es', 'fr', 'de']),
            category: this.pickRandom([
                'Programming',
                'Design',
                'Business',
                'Marketing',
                'Photography',
                'Music',
                'Health',
                'Lifestyle',
            ]),
            tags: this.pickRandomMany([
                'beginner',
                'intermediate',
                'advanced',
                'practical',
                'theory',
                'hands-on',
                'certification',
                'popular',
            ], this.generateNumber(2, 5)),
            requirements: [
                'Basic computer skills',
                'Internet connection',
                'Willingness to learn',
            ],
            whatYouWillLearn: [
                'Master the fundamentals',
                'Build real-world projects',
                'Understand best practices',
                'Gain practical experience',
            ],
            targetAudience: [
                'Beginners looking to start their journey',
                'Professionals wanting to upgrade skills',
                'Students seeking practical knowledge',
            ],
            syllabus: {
                sections: [
                    {
                        title: 'Introduction',
                        lessons: ['Getting Started', 'Course Overview'],
                        duration: 30,
                    },
                    {
                        title: 'Fundamentals',
                        lessons: ['Basic Concepts', 'Core Principles'],
                        duration: 60,
                    },
                ],
            },
            instructor: this.userFactory.instructor(),
            isPublished: true,
            isFeatured: false,
            publishedAt: this.generateDate({ past: true }),
            createdAt: this.generateDate({ past: true }),
            updatedAt: this.generateDate({ days: 7 }),
        };
    }
    /**
     * Create draft course
     */
    draft(options = {}) {
        return this.withTrait('draft', options);
    }
    /**
     * Create published course
     */
    published(options = {}) {
        return this.withTrait('published', options);
    }
    /**
     * Create featured course
     */
    featured(options = {}) {
        return this.withTrait('featured', options);
    }
    /**
     * Create free course
     */
    free(options = {}) {
        return this.withTrait('free', options);
    }
    /**
     * Create premium course
     */
    premium(options = {}) {
        return this.withTrait('premium', options);
    }
    /**
     * Create popular course
     */
    popular(options = {}) {
        return this.withTrait('popular', options);
    }
    /**
     * Create course with specific instructor
     */
    withInstructor(instructor, options = {}) {
        return this.create({ ...options, overrides: { instructor } });
    }
    /**
     * Create course with specific price
     */
    withPrice(price, options = {}) {
        return this.create({ ...options, overrides: { price } });
    }
    /**
     * Create course catalog
     */
    createCatalog(count = 10) {
        const courses = [];
        // Mix of different types
        courses.push(...this.createMany(3, { traits: ['popular'] }));
        courses.push(...this.createMany(2, { traits: ['featured'] }));
        courses.push(...this.createMany(2, { traits: ['free'] }));
        courses.push(...this.createMany(3, { traits: ['premium'] }));
        return courses.slice(0, count);
    }
}
exports.CourseFactory = CourseFactory;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiQzpcXFVzZXJzXFxnLWVrb2hcXERlc2t0b3BcXFN0cmVsbGVyTWluZHMtQmFja2VuZFxcdGVzdFxcZmFjdG9yaWVzXFxjb3Vyc2UuZmFjdG9yeS50cyIsIm1hcHBpbmdzIjoiOzs7QUFBQSxpREFBNkM7QUFFN0MsbUZBQTBFO0FBQzFFLGlGQUF3RTtBQUN4RSxpREFBNkM7QUFFN0MsTUFBYSxhQUFjLFNBQVEsMEJBQW1CO0lBQXREOztRQUNVLGdCQUFXLEdBQUcsSUFBSSwwQkFBVyxFQUFFLENBQUM7UUFtRjlCLFdBQU0sR0FBRztZQUNqQixLQUFLLEVBQUUsR0FBb0IsRUFBRSxDQUFDLENBQUM7Z0JBQzdCLE1BQU0sRUFBRSxpQ0FBWSxDQUFDLEtBQUs7Z0JBQzFCLFdBQVcsRUFBRSxLQUFLO2dCQUNsQixXQUFXLEVBQUUsSUFBSTthQUNsQixDQUFDO1lBRUYsU0FBUyxFQUFFLEdBQW9CLEVBQUUsQ0FBQyxDQUFDO2dCQUNqQyxNQUFNLEVBQUUsaUNBQVksQ0FBQyxTQUFTO2dCQUM5QixXQUFXLEVBQUUsSUFBSTtnQkFDakIsV0FBVyxFQUFFLElBQUksQ0FBQyxZQUFZLENBQUMsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLENBQUM7YUFDL0MsQ0FBQztZQUVGLFFBQVEsRUFBRSxHQUFvQixFQUFFLENBQUMsQ0FBQztnQkFDaEMsTUFBTSxFQUFFLGlDQUFZLENBQUMsUUFBUTtnQkFDN0IsV0FBVyxFQUFFLEtBQUs7Z0JBQ2xCLFVBQVUsRUFBRSxJQUFJLENBQUMsWUFBWSxDQUFDLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxDQUFDO2FBQzlDLENBQUM7WUFFRixRQUFRLEVBQUUsR0FBb0IsRUFBRSxDQUFDLENBQUM7Z0JBQ2hDLFVBQVUsRUFBRSxJQUFJO2dCQUNoQixVQUFVLEVBQUUsSUFBSSxDQUFDLFlBQVksQ0FBQyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsQ0FBQzthQUM5QyxDQUFDO1lBRUYsSUFBSSxFQUFFLEdBQW9CLEVBQUUsQ0FBQyxDQUFDO2dCQUM1QixLQUFLLEVB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TyxDQUFDLElBQUksQ0FBQyxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQyxFQUFFLEVBQUUsTUFBTSxFQUFFLENBQUMsVUFBVSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFDOUQsT0FBTyxDQUFDLElBQUksQ0FBQyxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQyxFQUFFLEVBQUUsTUFBTSxFQUFFLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFDMUQsT0FBTyxDQUFDLElBQUksQ0FBQyxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQyxFQUFFLEVBQUUsTUFBTSxFQUFFLENBQUMsU0FBUyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFFN0QsT0FBTyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUMsRUFBRSxLQUFLLENBQUMsQ0FBQztJQUNqQyxDQUFDO0NBQ0Y7QUE5UEQsc0NBOFBDIiwibmFtZXMiOltdLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcZy1la29oXFxEZXNrdG9wXFxTdHJlbGxlck1pbmRzLUJhY2tlbmRcXHRlc3RcXGZhY3Rvcmllc1xcY291cnNlLmZhY3RvcnkudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQmFzZUZhY3RvcnkgfSBmcm9tICcuL2Jhc2UuZmFjdG9yeSc7XHJcbmltcG9ydCB7IENvdXJzZSB9IGZyb20gJy4uLy4uL3NyYy9jb3Vyc2VzL2VudGl0aWVzL2NvdXJzZS5lbnRpdHknO1xyXG5pbXBvcnQgeyBDb3Vyc2VTdGF0dXMgfSBmcm9tICcuLi8uLi9zcmMvY291cnNlcy9lbnVtcy9jb3Vyc2Utc3RhdHVzLmVudW0nO1xyXG5pbXBvcnQgeyBDb3Vyc2VMZXZlbCB9IGZyb20gJy4uLy4uL3NyYy9jb3Vyc2VzL2VudW1zL2NvdXJzZS1sZXZlbC5lbnVtJztcclxuaW1wb3J0IHsgVXNlckZhY3RvcnkgfSBmcm9tICcuL3VzZXIuZmFjdG9yeSc7XHJcblxyXG5leHBvcnQgY2xhc3MgQ291cnNlRmFjdG9yeSBleHRlbmRzIEJhc2VGYWN0b3J5PENvdXJzZT4ge1xyXG4gIHByaXZhdGUgdXNlckZhY3RvcnkgPSBuZXcgVXNlckZhY3RvcnkoKTtcclxuXHJcbiAgcHJvdGVjdGVkIGRlZmluaXRpb24oKTogUGFydGlhbDxDb3Vyc2U+IHtcclxuICAgIGNvbnN0IHRpdGxlID0gdGhpcy5nZW5lcmF0ZVRleHQoMSkucmVwbGFjZSgnLicsICcnKTtcclxuICAgIFxyXG4gICAgcmV0dXJuIHtcclxuICAgICAgaWQ6IHRoaXMuZ2VuZXJhdGVJZCgpLFxyXG4gICAgICB0aXRsZSxcclxuICAgICAgc2x1ZzogdGhpcy5nZW5lcmF0ZVNsdWcoKSxcclxuICAgICAgZGVzY3JpcHRpb246IHRoaXMuZ2VuZXJhdGVUZXh0KDMpLFxyXG4gICAgICBzaG9ydERlc2NyaXB0aW9uOiB0aGlzLmdlbmVyYXRlVGV4dCgxKSxcclxuICAgICAgdGh1bWJuYWlsOiB0aGlzLmdlbmVyYXRlSW1hZ2VVcmwoODAwLCA2MDApLFxyXG4gICAgICBwcmV2aWV3VmlkZW86IHRoaXMuZ2VuZXJhdGVVcmwoKSxcclxuICAgICAgc3RhdHVzOiBDb3Vyc2VTdGF0dXMuUFVCTElTSEVELFxyXG4gICAgICBsZXZlbDogdGhpcy5waWNrUmFuZG9tKE9iamVjdC52YWx1ZXMoQ291cnNlTGV2ZWwpKSxcclxuICAgICAgcHJpY2U6IHRoaXMuZ2VuZXJhdGVQcmljZSg1MCwgNTAwKSxcclxuICAgICAgb3JpZ2luYWxQcmljZTogdGhpcy5nZW5lcmF0ZVByaWNlKDYwLCA2MDApLFxyXG4gICAgICBjdXJyZW5jeTogJ1VTRCcsXHJcbiAgICAgIGR1cmF0aW9uOiB0aGlzLmdlbmVyYXRlTnVtYmVyKDMwLCAzMDApLCAvLyBtaW51dGVzXHJcbiAgICAgIGxlc3NvbnNDb3VudDogdGhpcy5nZW5lcmF0ZU51bWJlcig1LCA1MCksXHJcbiAgICAgIHN0dWRlbnRzQ291bnQ6IHRoaXMuZ2VuZXJhdGVOdW1iZXIoMCwgMTAwMCksXHJcbiAgICAgIHJhdGluZzogcGFyc2VGbG9hdCgoTWF0aC5yYW5kb20oKSAqIDIgKyAzKS50b0ZpeGVkKDEpKSwgLy8gMy4wIC0gNS4wXHJcbiAgICAgIHJldmlld3NDb3VudDogdGhpcy5nZW5lcmF0ZU51bWJlcigwLCAxMDApLFxyXG4gICAgICBsYW5ndWFnZTogdGhpcy5waWNrUmFuZG9tKFsnZW4nLCAnZXMnLCAnZnInLCAnZGUnXSksXHJcbiAgICAgIGNhdGVnb3J5OiB0aGlzLnBpY2tSYW5kb20oW1xyXG4gICAgICAgICdQcm9ncmFtbWluZycsXHJcbiAgICAgICAgJ0Rlc2lnbicsXHJcbiAgICAgICAgJ0J1c2luZXNzJyxcclxuICAgICAgICAnTWFya2V0aW5nJyxcclxuICAgICAgICAnUGhvdG9ncmFwaHknLFxyXG4gICAgICAgICdNdXNpYycsXHJcbiAgICAgICAgJ0hlYWx0aCcsXHJcbiAgICAgICAgJ0xpZmVzdHlsZScsXHJcbiAgICAgIF0pLFxyXG4gICAgICB0YWdzOiB0aGlzLnBpY2tSYW5kb21NYW55KFtcclxuICAgICAgICAnYmVnaW5uZXInLFxyXG4gICAgICAgICdpbnRlcm1lZGlhdGUnLFxyXG4gICAgICAgICdhZHZhbmNlZCcsXHJcbiAgICAgICAgJ3ByYWN0aWNhbCcsXHJcbiAgICAgICAgJ3RoZW9yeScsXHJcbiAgICAgICAgJ2hhbmRzLW9uJyxcclxuICAgICAgICAnY2VydGlmaWNhdGlvbicsXHJcbiAgICAgICAgJ3BvcHVsYXInLFxyXG4gICAgICBdLCB0aGlzLmdlbmVyYXRlTnVtYmVyKDIsIDUpKSxcclxuICAgICAgcmVxdWlyZW1lbnRzOiBbXHJcbiAgICAgICAgJ0Jhc2ljIGNvbXB1dGVyIHNraWxscycsXHJcbiAgICAgICAgJ0ludGVybmV0IGNvbm5lY3Rpb24nLFxyXG4gICAgICAgICdXaWxsaW5nbmVzcyB0byBsZWFybicsXHJcbiAgICAgIF0sXHJcbiAgICAgIHdoYXRZb3VXaWxsTGVhcm46IFtcclxuICAgICAgICAnTWFzdGVyIHRoZSBmdW5kYW1lbnRhbHMnLFxyXG4gICAgICAgICdCdWlsZCByZWFsLXdvcmxkIHByb2plY3RzJyxcclxuICAgICAgICAnVW5kZXJzdGFuZCBiZXN0IHByYWN0aWNlcycsXHJcbiAgICAgICAgJ0dhaW4gcHJhY3RpY2FsIGV4cGVyaWVuY2UnLFxyXG4gICAgICBdLFxyXG4gICAgICB0YXJnZXRBdWRpZW5jZTogW1xyXG4gICAgICAgICdCZWdpbm5lcnMgbG9va2luZyB0byBzdGFydCB0aGVpciBqb3VybmV5JyxcclxuICAgICAgICAnUHJvZmVzc2lvbmFscyB3YW50aW5nIHRvIHVwZ3JhZGUgc2tpbGxzJyxcclxuICAgICAgICAnU3R1ZGVudHMgc2Vla2luZyBwcmFjdGljYWwga25vd2xlZGdlJyxcclxuICAgICAgXSxcclxuICAgICAgc3lsbGFidXM6IHtcclxuICAgICAgICBzZWN0aW9uczogW1xyXG4gICAgICAgICAge1xyXG4gICAgICAgICAgICB0aXRsZTogJ0ludHJvZHVjdGlvbicsXHJcbiAgICAgICAgICAgIGxlc3NvbnM6IFsnR2V0dGluZyBTdGFydGVkJywgJ0NvdXJzZSBPdmVydmlldyddLFxyXG4gICAgICAgICAgICBkdXJhdGlvbjogMzAsXHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgICAge1xyXG4gICAgICAgICAgICB0aXRsZTogJ0Z1bmRhbWVudGFscycsXHJcbiAgICAgICAgICAgIGxlc3NvbnM6IFsnQmFzaWMgQ29uY2VwdHMnLCAnQ29yZSBQcmluY2lwbGVzJ10sXHJcbiAgICAgICAgICAgIGR1cmF0aW9uOiA2MCxcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgXSxcclxuICAgICAgfSxcclxuICAgICAgaW5zdHJ1Y3RvcjogdGhpcy51c2VyRmFjdG9yeS5pbnN0cnVjdG9yKCksXHJcbiAgICAgIGlzUHVibGlzaGVkOiB0cnVlLFxyXG4gICAgICBpc0ZlYXR1cmVkOiBmYWxzZSxcclxuICAgICAgcHVibGlzaGVkQXQ6IHRoaXMuZ2VuZXJhdGVEYXRlKHsgcGFzdDogdHJ1ZSB9KSxcclxuICAgICAgY3JlYXRlZEF0OiB0aGlzLmdlbmVyYXRlRGF0ZSh7IHBhc3Q6IHRydWUgfSksXHJcbiAgICAgIHVwZGF0ZWRBdDogdGhpcy5nZW5lcmF0ZURhdGUoeyBkYXlzOiA3IH0pLFxyXG4gICAgfTtcclxuICB9XHJcblxyXG4gIHByb3RlY3RlZCB0cmFpdHMgPSB7XHJcbiAgICBkcmFmdDogKCk6IFBhcnRpYWw8Q291cnNlPiA9PiAoe1xyXG4gICAgICBzdGF0dXM6IENvdXJzZVN0YXR1cy5EUkFGVCxcclxuICAgICAgaXNQdWJsaXNoZWQ6IGZhbHNlLFxyXG4gICAgICBwdWJsaXNoZWRBdDogbnVsbCxcclxuICAgIH0pLFxyXG5cclxuICAgIHB1Ymxpc2hlZDogKCk6IFBhcnRpYWw8Q291cnNlPiA9PiAoe1xyXG4gICAgICBzdGF0dXM6IENvdXJzZVN0YXR1cy5QVUJMSVNIRUQsXHJcbiAgICAgIGlzUHVibGlzaGVkOiB0cnVlLFxyXG4gICAgICBwdWJsaXNoZWRBdDogdGhpcy5nZW5lcmF0ZURhdGUoeyBwYXN0OiB0cnVlIH0pLFxyXG4gICAgfSksXHJcblxyXG4gICAgYXJjaGl2ZWQ6ICgpOiBQYXJ0aWFsPENvdXJzZT4gPT4gKHtcclxuICAgICAgc3RhdHVzOiBDb3Vyc2VTdGF0dXMuQVJDSElWRUQsXHJcbiAgICAgIGlzUHVibGlzaGVkOiBmYWxzZSxcclxuICAgICAgYXJjaGl2ZWRBdDogdGhpcy5nZW5lcmF0ZURhdGUoeyBwYXN0OiB0cnVlIH0pLFxyXG4gICAgfSksXHJcblxyXG4gICAgZmVhdHVyZWQ6ICgpOiBQYXJ0aWFsPENvdXJzZT4gPT4gKHtcclxuICAgICAgaXNGZWF0dXJlZDogdHJ1ZSxcclxuICAgICAgZmVhdHVyZWRBdDogdGhpcy5nZW5lcmF0ZURhdGUoeyBwYXN0OiB0cnVlIH0pLFxyXG4gICAgfSksXHJcblxyXG4gICAgZnJlZTogKCk6IFBhcnRpYWw8Q291cnNlPiA9PiAoe1xyXG4gICAgICBwcmljZTogMCxcclxuICAgICAgb3JpZ2luYWxQcmljZTogMCxcclxuICAgIH0pLFxyXG5cclxuICAgIHByZW1pdW06ICgpOiBQYXJ0aWFsPENvdXJzZT4gPT4gKHtcclxuICAgICAgcHJpY2U6IHRoaXMuZ2VuZXJhdGVQcmljZSgyMDAsIDEwMDApLFxyXG4gICAgICBvcmlnaW5hbFByaWNlOiB0aGlzLmdlbmVyYXRlUHJpY2UoMjUwLCAxMjAwKSxcclxuICAgICAgaXNQcmVtaXVtOiB0cnVlLFxyXG4gICAgfSksXHJcblxyXG4gICAgcG9wdWxhcjogKCk6IFBhcnRpYWw8Q291cnNlPiA9PiAoe1xyXG4gICAgICBzdHVkZW50c0NvdW50OiB0aGlzLmdlbmVyYXRlTnVtYmVyKDUwMCwgNTAwMCksXHJcbiAgICAgIHJhdGluZzogcGFyc2VGbG9hdCgoTWF0aC5yYW5kb20oKSAqIDAuNSArIDQuNSkudG9GaXhlZCgxKSksIC8vIDQuNSAtIDUuMFxyXG4gICAgICByZXZpZXdzQ291bnQ6IHRoaXMuZ2VuZXJhdGVOdW1iZXIoMTAwLCAxMDAwKSxcclxuICAgICAgaXNGZWF0dXJlZDogdHJ1ZSxcclxuICAgIH0pLFxyXG5cclxuICAgIGJlZ2lubmVyOiAoKTogUGFydGlhbDxDb3Vyc2U+ID0+ICh7XHJcbiAgICAgIGxldmVsOiBDb3Vyc2VMZXZlbC5CRUdJTk5FUixcclxuICAgICAgZHVyYXRpb246IHRoaXMuZ2VuZXJhdGVOdW1iZXIoMzAsIDEyMCksXHJcbiAgICAgIGxlc3NvbnNDb3VudDogdGhpcy5nZW5lcmF0ZU51bWJlcig1LCAyMCksXHJcbiAgICB9KSxcclxuXHJcbiAgICBpbnRlcm1lZGlhdGU6ICgpOiBQYXJ0aWFsPENvdXJzZT4gPT4gKHtcclxuICAgICAgbGV2ZWw6IENvdXJzZUxldmVsLklOVEVSTUVESUFURSxcclxuICAgICAgZHVyYXRpb246IHRoaXMuZ2VuZXJhdGVOdW1iZXIoMTIwLCAzMDApLFxyXG4gICAgICBsZXNzb25zQ291bnQ6IHRoaXMuZ2VuZXJhdGVOdW1iZXIoMjAsIDQwKSxcclxuICAgIH0pLFxyXG5cclxuICAgIGFkdmFuY2VkOiAoKTogUGFydGlhbDxDb3Vyc2U+ID0+ICh7XHJcbiAgICAgIGxldmVsOiBDb3Vyc2VMZXZlbC5BRFZBTkNFRCxcclxuICAgICAgZHVyYXRpb246IHRoaXMuZ2VuZXJhdGVOdW1iZXIoMzAwLCA2MDApLFxyXG4gICAgICBsZXNzb25zQ291bnQ6IHRoaXMuZ2VuZXJhdGVOdW1iZXIoNDAsIDgwKSxcclxuICAgIH0pLFxyXG5cclxuICAgIHdpdGhEaXNjb3VudDogKCk6IFBhcnRpYWw8Q291cnNlPiA9PiB7XHJcbiAgICAgIGNvbnN0IG9yaWdpbmFsUHJpY2UgPSB0aGlzLmdlbmVyYXRlUHJpY2UoMTAwLCA1MDApO1xyXG4gICAgICBjb25zdCBkaXNjb3VudFBlcmNlbnQgPSB0aGlzLmdlbmVyYXRlTnVtYmVyKDEwLCA1MCk7XHJcbiAgICAgIGNvbnN0IHByaWNlID0gb3JpZ2luYWxQcmljZSAqICgxIC0gZGlzY291bnRQZXJjZW50IC8gMTAwKTtcclxuICAgICAgXHJcbiAgICAgIHJldHVybiB7XHJcbiAgICAgICAgb3JpZ2luYWxQcmljZSxcclxuICAgICAgICBwcmljZTogcGFyc2VGbG9hdChwcmljZS50b0ZpeGVkKDIpKSxcclxuICAgICAgICBkaXNjb3VudFBlcmNlbnQsXHJcbiAgICAgICAgZGlzY291bnRFeHBpcmVzQXQ6IHRoaXMuZ2VuZXJhdGVEYXRlKHsgZnV0dXJlOiB0cnVlIH0pLFxyXG4gICAgICB9O1xyXG4gICAgfSxcclxuXHJcbiAgICBuZXdDb3Vyc2U6ICgpOiBQYXJ0aWFsPENvdXJzZT4gPT4gKHtcclxuICAgICAgY3JlYXRlZEF0OiB0aGlzLmdlbmVyYXRlRGF0ZSh7IGRheXM6IDcgfSksXHJcbiAgICAgIHN0dWRlbnRzQ291bnQ6IHRoaXMuZ2VuZXJhdGVOdW1iZXIoMCwgNTApLFxyXG4gICAgICByZXZpZXdzQ291bnQ6IHRoaXMuZ2VuZXJhdGVOdW1iZXIoMCwgMTApLFxyXG4gICAgfSksXHJcblxyXG4gICAgcHJvZ3JhbW1pbmc6ICgpOiBQYXJ0aWFsPENvdXJzZT4gPT4gKHtcclxuICAgICAgY2F0ZWdvcnk6ICdQcm9ncmFtbWluZycsXHJcbiAgICAgIHRhZ3M6IFsncHJvZ3JhbW1pbmcnLCAnY29kaW5nJywgJ2RldmVsb3BtZW50JywgJ3NvZnR3YXJlJ10sXHJcbiAgICAgIHJlcXVpcmVtZW50czogW1xyXG4gICAgICAgICdCYXNpYyBjb21wdXRlciBza2lsbHMnLFxyXG4gICAgICAgICdUZXh0IGVkaXRvciBvciBJREUnLFxyXG4gICAgICAgICdQcm9ncmFtbWluZyBsYW5ndWFnZSBiYXNpY3MnLFxyXG4gICAgICBdLFxyXG4gICAgfSksXHJcblxyXG4gICAgZGVzaWduOiAoKTogUGFydGlhbDxDb3Vyc2U+ID0+ICh7XHJcbiAgICAgIGNhdGVnb3J5OiAnRGVzaWduJyxcclxuICAgICAgdGFnczogWydkZXNpZ24nLCAnY3JlYXRpdmUnLCAndmlzdWFsJywgJ3VpL3V4J10sXHJcbiAgICAgIHJlcXVpcmVtZW50czogW1xyXG4gICAgICAgICdEZXNpZ24gc29mdHdhcmUgKFBob3Rvc2hvcCwgRmlnbWEsIGV0Yy4pJyxcclxuICAgICAgICAnQ3JlYXRpdmUgbWluZHNldCcsXHJcbiAgICAgICAgJ0Jhc2ljIGRlc2lnbiBwcmluY2lwbGVzJyxcclxuICAgICAgXSxcclxuICAgIH0pLFxyXG4gIH07XHJcblxyXG4gIC8qKlxyXG4gICAqIENyZWF0ZSBkcmFmdCBjb3Vyc2VcclxuICAgKi9cclxuICBkcmFmdChvcHRpb25zOiBhbnkgPSB7fSk6IENvdXJzZSB7XHJcbiAgICByZXR1cm4gdGhpcy53aXRoVHJhaXQoJ2RyYWZ0Jywgb3B0aW9ucyk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBDcmVhdGUgcHVibGlzaGVkIGNvdXJzZVxyXG4gICAqL1xyXG4gIHB1Ymxpc2hlZChvcHRpb25zOiBhbnkgPSB7fSk6IENvdXJzZSB7XHJcbiAgICByZXR1cm4gdGhpcy53aXRoVHJhaXQoJ3B1Ymxpc2hlZCcsIG9wdGlvbnMpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogQ3JlYXRlIGZlYXR1cmVkIGNvdXJzZVxyXG4gICAqL1xyXG4gIGZlYXR1cmVkKG9wdGlvbnM6IGFueSA9IHt9KTogQ291cnNlIHtcclxuICAgIHJldHVybiB0aGlzLndpdGhUcmFpdCgnZmVhdHVyZWQnLCBvcHRpb25zKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIENyZWF0ZSBmcmVlIGNvdXJzZVxyXG4gICAqL1xyXG4gIGZyZWUob3B0aW9uczogYW55ID0ge30pOiBDb3Vyc2Uge1xyXG4gICAgcmV0dXJuIHRoaXMud2l0aFRyYWl0KCdmcmVlJywgb3B0aW9ucyk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBDcmVhdGUgcHJlbWl1bSBjb3Vyc2VcclxuICAgKi9cclxuICBwcmVtaXVtKG9wdGlvbnM6IGFueSA9IHt9KTogQ291cnNlIHtcclxuICAgIHJldHVybiB0aGlzLndpdGhUcmFpdCgncHJlbWl1bScsIG9wdGlvbnMpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogQ3JlYXRlIHBvcHVsYXIgY291cnNlXHJcbiAgICovXHJcbiAgcG9wdWxhcihvcHRpb25zOiBhbnkgPSB7fSk6IENvdXJzZSB7XHJcbiAgICByZXR1cm4gdGhpcy53aXRoVHJhaXQoJ3BvcHVsYXInLCBvcHRpb25zKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIENyZWF0ZSBjb3Vyc2Ugd2l0aCBzcGVjaWZpYyBpbnN0cnVjdG9yXHJcbiAgICovXHJcbiAgd2l0aEluc3RydWN0b3IoaW5zdHJ1Y3RvcjogYW55LCBvcHRpb25zOiBhbnkgPSB7fSk6IENvdXJzZSB7XHJcbiAgICByZXR1cm4gdGhpcy5jcmVhdGUoeyAuLi5vcHRpb25zLCBvdmVycmlkZXM6IHsgaW5zdHJ1Y3RvciB9IH0pO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogQ3JlYXRlIGNvdXJzZSB3aXRoIHNwZWNpZmljIHByaWNlXHJcbiAgICovXHJcbiAgd2l0aFByaWNlKHByaWNlOiBudW1iZXIsIG9wdGlvbnM6IGFueSA9IHt9KTogQ291cnNlIHtcclxuICAgIHJldHVybiB0aGlzLmNyZWF0ZSh7IC4uLm9wdGlvbnMsIG92ZXJyaWRlczogeyBwcmljZSB9IH0pO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogQ3JlYXRlIGNvdXJzZSBjYXRhbG9nXHJcbiAgICovXHJcbiAgY3JlYXRlQ2F0YWxvZyhjb3VudDogbnVtYmVyID0gMTApOiBDb3Vyc2VbXSB7XHJcbiAgICBjb25zdCBjb3Vyc2VzID0gW107XHJcbiAgICBcclxuICAgIC8vIE1peCBvZiBkaWZmZXJlbnQgdHlwZXNcclxuICAgIGNvdXJzZXMucHVzaCguLi50aGlzLmNyZWF0ZU1hbnkoMywgeyB0cmFpdHM6IFsncG9wdWxhciddIH0pKTtcclxuICAgIGNvdXJzZXMucHVzaCguLi50aGlzLmNyZWF0ZU1hbnkoMiwgeyB0cmFpdHM6IFsnZmVhdHVyZWQnXSB9KSk7XHJcbiAgICBjb3Vyc2VzLnB1c2goLi4udGhpcy5jcmVhdGVNYW55KDIsIHsgdHJhaXRzOiBbJ2ZyZWUnXSB9KSk7XHJcbiAgICBjb3Vyc2VzLnB1c2goLi4udGhpcy5jcmVhdGVNYW55KDMsIHsgdHJhaXRzOiBbJ3ByZW1pdW0nXSB9KSk7XHJcbiAgICBcclxuICAgIHJldHVybiBjb3Vyc2VzLnNsaWNlKDAsIGNvdW50KTtcclxuICB9XHJcbn1cclxuIl0sInZlcnNpb24iOjN9