{"file":"C:\\Users\\g-ekoh\\Desktop\\StrellerMinds-Backend\\src\\email\\mock-email.service.ts","mappings":";;;;;;;;;;AAAA,2CAAoD;AAI7C,IAAM,gBAAgB,wBAAtB,MAAM,gBAAgB;IAAtB;QACY,WAAM,GAAG,IAAI,eAAM,CAAC,kBAAgB,CAAC,IAAI,CAAC,CAAC;IAW9D,CAAC;IATC,KAAK,CAAC,SAAS,CAAC,OAAqB;QACnC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,+BAA+B,OAAO,CAAC,EAAE,cAAc,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC;QAC1F,OAAO,IAAI,CAAC;IACd,CAAC;IAED,KAAK,CAAC,aAAa,CAAC,OAAqB;QACvC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,2CAA2C,OAAO,CAAC,EAAE,cAAc,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC;QACtG,OAAO,IAAI,CAAC;IACd,CAAC;CACF,CAAA;AAZY,4CAAgB;2BAAhB,gBAAgB;IAD5B,IAAA,mBAAU,GAAE;GACA,gBAAgB,CAY5B","names":[],"sources":["C:\\Users\\g-ekoh\\Desktop\\StrellerMinds-Backend\\src\\email\\mock-email.service.ts"],"sourcesContent":["import { Injectable, Logger } from '@nestjs/common';\r\nimport { EmailOptions } from './email.service';\r\n\r\n@Injectable()\r\nexport class MockEmailService {\r\n  private readonly logger = new Logger(MockEmailService.name);\r\n\r\n  async sendEmail(options: EmailOptions): Promise<boolean> {\r\n    this.logger.log(`[MOCK] Would send email to: ${options.to}, subject: ${options.subject}`);\r\n    return true;\r\n  }\r\n\r\n  async sendImmediate(options: EmailOptions): Promise<boolean> {\r\n    this.logger.log(`[MOCK] Would immediately send email to: ${options.to}, subject: ${options.subject}`);\r\n    return true;\r\n  }\r\n} "],"version":3}