{"file":"C:\\Users\\g-ekoh\\Desktop\\StrellerMinds-Backend\\src\\analytic\\controllers\\reports.controller.ts","mappings":"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","names":[],"sources":["C:\\Users\\g-ekoh\\Desktop\\StrellerMinds-Backend\\src\\analytic\\controllers\\reports.controller.ts"],"sourcesContent":["import { Controller, Get, Post, Put, Delete, Param, Query, ValidationPipe, UsePipes, Res } from \"@nestjs/common\"\r\nimport { ApiTags, ApiOperation, ApiResponse } from \"@nestjs/swagger\"\r\nimport type { Response } from \"express\"\r\n\r\nimport type { ReportingService } from \"../services/reporting.service\"\r\nimport type { Report, ReportType } from \"../entities/report.entity\"\r\n\r\n@ApiTags(\"Reports\")\r\n@Controller(\"analytics/reports\")\r\nexport class ReportsController {\r\n  constructor(private readonly reportingService: ReportingService) {}\r\n\r\n  @Post()\r\n  @ApiOperation({ summary: \"Create a new report\" })\r\n  @ApiResponse({ status: 201, description: \"Report created successfully\" })\r\n  @UsePipes(new ValidationPipe({ transform: true }))\r\n  async createReport(reportData: Partial<Report>) {\r\n    return this.reportingService.createReport(reportData)\r\n  }\r\n\r\n  @Get()\r\n  @ApiOperation({ summary: \"Get all reports\" })\r\n  @ApiResponse({ status: 200, description: \"Reports retrieved successfully\" })\r\n  async getReports(\r\n    @Query('type') type?: ReportType,\r\n    @Query('createdBy') createdBy?: string,\r\n    @Query('isActive') isActive?: boolean,\r\n  ) {\r\n    return this.reportingService.getReports({\r\n      type,\r\n      createdBy,\r\n      isActive: isActive !== undefined ? isActive === true : undefined,\r\n    })\r\n  }\r\n\r\n  @Post(\":id/execute\")\r\n  @ApiOperation({ summary: \"Execute a report\" })\r\n  @ApiResponse({ status: 200, description: \"Report executed successfully\" })\r\n  async executeReport(@Param('id') id: string, @Res() res: Response) {\r\n    const result = await this.reportingService.executeReport(id)\r\n\r\n    // Set appropriate headers based on format\r\n    if (typeof result === \"string\") {\r\n      res.setHeader(\"Content-Type\", \"text/csv\")\r\n      res.setHeader(\"Content-Disposition\", `attachment; filename=\"report-${id}.csv\"`)\r\n    } else if (Buffer.isBuffer(result)) {\r\n      res.setHeader(\"Content-Type\", \"application/octet-stream\")\r\n      res.setHeader(\"Content-Disposition\", `attachment; filename=\"report-${id}\"`)\r\n    } else {\r\n      res.setHeader(\"Content-Type\", \"application/json\")\r\n    }\r\n\r\n    res.send(result)\r\n  }\r\n\r\n  @Put(\":id\")\r\n  @ApiOperation({ summary: \"Update a report\" })\r\n  @ApiResponse({ status: 200, description: \"Report updated successfully\" })\r\n  @UsePipes(new ValidationPipe({ transform: true }))\r\n  async updateReport(@Param('id') id: string, updateData: Partial<Report>) {\r\n    // Implementation would update the report\r\n    return { success: true, message: \"Report updated successfully\" }\r\n  }\r\n\r\n  @Delete(':id')\r\n  @ApiOperation({ summary: 'Delete a report' })\r\n  @ApiResponse({ status: 200, description: 'Report deleted successfully' })\r\n  async deleteReport(@Param('id') id: string) {\r\n    // Implementation would delete the report\r\n    return { success: true, message: 'Report deleted successfully' };\r\n  }\r\n}\r\n"],"version":3}