{"file":"C:\\Users\\g-ekoh\\Desktop\\StrellerMinds-Backend\\src\\test\\contract\\smtp.pact.spec.ts","mappings":";;;;;AAAA,6CAA0C;AAC1C,kDAA0B;AAE1B,QAAQ,CAAC,oBAAoB,EAAE,GAAG,EAAE;IAClC,MAAM,QAAQ,GAAG,IAAA,uBAAU,EAAC,eAAe,CAAC,CAAC;IAE7C,SAAS,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAC;IAClC,QAAQ,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC;IAEpC,QAAQ,CAAC,uBAAuB,EAAE,GAAG,EAAE;QACrC,SAAS,CAAC,GAAG,EAAE,CACb,QAAQ,CAAC,cAAc,CAAC;YACtB,KAAK,EAAE,qBAAqB;YAC5B,aAAa,EAAE,oBAAoB;YACnC,WAAW,EAAE;gBACX,MAAM,EAAE,MAAM;gBACd,IAAI,EAAE,OAAO;gBACb,IAAI,EAAE;oBACJ,EAAE,EAAE,kBAAkB;oBACtB,OAAO,EAAE,OAAO;oBAChB,IAAI,EAAE,YAAY;iBACnB;aACF;YACD,eAAe,EAAE;gBACf,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE;aACxB;SACF,CAAC,CACH,CAAC;QAEF,EAAE,CAAC,4BAA4B,EAAE,KAAK,IAAI,EAAE;YAC1C,MAAM,GAAG,GAAG,MAAM,eAAK,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC,WAAW,CAAC,OAAO,OAAO,EAAE;gBACnE,EAAE,EAAE,kBAAkB;gBACtB,OAAO,EAAE,OAAO;gBAChB,IAAI,EAAE,YAAY;aACnB,CAAC,CAAC;YACH,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAC7B,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","names":[],"sources":["C:\\Users\\g-ekoh\\Desktop\\StrellerMinds-Backend\\src\\test\\contract\\smtp.pact.spec.ts"],"sourcesContent":["import { createPact } from './pactHelper';\r\nimport axios from 'axios';\r\n\r\ndescribe('SMTP Provider Pact', () => {\r\n  const provider = createPact('smtp-provider');\r\n\r\n  beforeAll(() => provider.setup());\r\n  afterAll(() => provider.finalize());\r\n\r\n  describe('when sending an email', () => {\r\n    beforeAll(() =>\r\n      provider.addInteraction({\r\n        state: 'ready to send email',\r\n        uponReceiving: 'a sendMail request',\r\n        withRequest: {\r\n          method: 'POST',\r\n          path: '/send',\r\n          body: {\r\n            to: 'user@example.com',\r\n            subject: 'Hello',\r\n            text: 'Test email',\r\n          },\r\n        },\r\n        willRespondWith: {\r\n          status: 200,\r\n          body: { success: true },\r\n        },\r\n      }),\r\n    );\r\n\r\n    it('returns a success response', async () => {\r\n      const res = await axios.post(`${provider.mockService.baseUrl}/send`, {\r\n        to: 'user@example.com',\r\n        subject: 'Hello',\r\n        text: 'Test email',\r\n      });\r\n      expect(res.status).toBe(200);\r\n      expect(res.data.success).toBe(true);\r\n    });\r\n  });\r\n});"],"version":3}