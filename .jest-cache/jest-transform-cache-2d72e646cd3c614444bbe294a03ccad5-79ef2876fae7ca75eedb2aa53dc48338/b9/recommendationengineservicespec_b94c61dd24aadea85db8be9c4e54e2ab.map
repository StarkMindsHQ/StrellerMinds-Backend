{"file":"C:\\Users\\g-ekoh\\Desktop\\StrellerMinds-Backend\\src\\recommendation\\__tests__\\recommendation-engine.service.spec.ts","mappings":"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","names":[],"sources":["C:\\Users\\g-ekoh\\Desktop\\StrellerMinds-Backend\\src\\recommendation\\__tests__\\recommendation-engine.service.spec.ts"],"sourcesContent":["import { Test, TestingModule } from '@nestjs/testing';\r\nimport { getRepositoryToken } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\nimport { RecommendationEngineService } from '../services/recommendation-engine.service';\r\nimport { RecommendationAnalyticsService } from '../services/recommendation-analytics.service';\r\nimport { MLPersonalizationService } from '../services/ml-personalization.service';\r\nimport { ContentSimilarityService } from '../services/content-similarity.service';\r\nimport { CollaborativeFilteringService } from '../services/collaborative-filtering.service';\r\nimport { Recommendation, RecommendationType, RecommendationReason, RecommendationStatus } from '../entities/recommendation.entity';\r\nimport { UserInteraction, InteractionType } from '../entities/user-interaction.entity';\r\nimport { User } from '../../users/entities/user.entity';\r\nimport { Course } from '../../courses/entities/course.entity';\r\n\r\ndescribe('RecommendationEngineService', () => {\r\n  let service: RecommendationEngineService;\r\n  let recommendationRepository: Repository<Recommendation>;\r\n  let interactionRepository: Repository<UserInteraction>;\r\n  let userRepository: Repository<User>;\r\n  let courseRepository: Repository<Course>;\r\n  let analyticsService: RecommendationAnalyticsService;\r\n  let mlService: MLPersonalizationService;\r\n  let similarityService: ContentSimilarityService;\r\n  let collaborativeService: CollaborativeFilteringService;\r\n\r\n  const mockUser: User = {\r\n    id: 'user-1',\r\n    email: 'test@example.com',\r\n    firstName: 'Test',\r\n    lastName: 'User',\r\n    skills: ['JavaScript', 'React'],\r\n    desiredSkills: ['Python', 'Machine Learning'],\r\n    preferences: { favoriteTopics: ['Web Development', 'AI'] },\r\n  } as User;\r\n\r\n  const mockCourse: Course = {\r\n    id: 'course-1',\r\n    title: 'Advanced React Development',\r\n    description: 'Learn advanced React concepts',\r\n    difficulty: 'intermediate',\r\n    duration: 120,\r\n    rating: 4.5,\r\n    tags: ['React', 'JavaScript', 'Frontend'],\r\n    skills: ['React', 'JavaScript', 'Redux'],\r\n    instructor: 'John Doe',\r\n    isActive: true,\r\n  } as Course;\r\n\r\n  const mockRecommendation: Recommendation = {\r\n    id: 'rec-1',\r\n    userId: 'user-1',\r\n    courseId: 'course-1',\r\n    recommendationType: RecommendationType.CONTENT_BASED,\r\n    reason: RecommendationReason.SKILL_BASED,\r\n    confidenceScore: 0.85,\r\n    relevanceScore: 0.80,\r\n    priority: 4,\r\n    explanation: 'Recommended based on your React skills',\r\n    status: RecommendationStatus.ACTIVE,\r\n    metadata: { algorithmUsed: 'content_similarity' },\r\n    createdAt: new Date(),\r\n    updatedAt: new Date(),\r\n  } as Recommendation;\r\n\r\n  const mockInteraction: UserInteraction = {\r\n    id: 'int-1',\r\n    userId: 'user-1',\r\n    courseId: 'course-1',\r\n    interactionType: InteractionType.ENROLL,\r\n    context: 'recommendation' as any,\r\n    weightedValue: 0.8,\r\n    createdAt: new Date(),\r\n  } as UserInteraction;\r\n\r\n  beforeEach(async () => {\r\n    const module: TestingModule = await Test.createTestingModule({\r\n      providers: [\r\n        RecommendationEngineService,\r\n        {\r\n          provide: getRepositoryToken(Recommendation),\r\n          useValue: {\r\n            findOne: jest.fn(),\r\n            find: jest.fn(),\r\n            save: jest.fn(),\r\n            createQueryBuilder: jest.fn(() => ({\r\n              leftJoinAndSelect: jest.fn().mockReturnThis(),\r\n              where: jest.fn().mockReturnThis(),\r\n              andWhere: jest.fn().mockReturnThis(),\r\n              orderBy: jest.fn().mockReturnThis(),\r\n              skip: jest.fn().mockReturnThis(),\r\n              take: jest.fn().mockReturnThis(),\r\n              getCount: jest.fn(),\r\n              getMany: jest.fn(),\r\n            })),\r\n          },\r\n        },\r\n        {\r\n          provide: getRepositoryToken(UserInteraction),\r\n          useValue: {\r\n            find: jest.fn(),\r\n            save: jest.fn(),\r\n          },\r\n        },\r\n        {\r\n          provide: getRepositoryToken(User),\r\n          useValue: {\r\n            findOne: jest.fn(),\r\n          },\r\n        },\r\n        {\r\n          provide: getRepositoryToken(Course),\r\n          useValue: {\r\n            find: jest.fn(),\r\n            createQueryBuilder: jest.fn(() => ({\r\n              where: jest.fn().mockReturnThis(),\r\n              andWhere: jest.fn().mockReturnThis(),\r\n              orderBy: jest.fn().mockReturnThis(),\r\n              take: jest.fn().mockReturnThis(),\r\n              getMany: jest.fn(),\r\n            })),\r\n          },\r\n        },\r\n        {\r\n          provide: RecommendationAnalyticsService,\r\n          useValue: {\r\n            trackRecommendationGeneration: jest.fn(),\r\n            trackRecommendationInteraction: jest.fn(),\r\n            trackRecommendationFeedback: jest.fn(),\r\n          },\r\n        },\r\n        {\r\n          provide: MLPersonalizationService,\r\n          useValue: {\r\n            generatePersonalizedRecommendations: jest.fn(),\r\n            updateModelWithFeedback: jest.fn(),\r\n          },\r\n        },\r\n        {\r\n          provide: ContentSimilarityService,\r\n          useValue: {\r\n            generateContentBasedRecommendations: jest.fn(),\r\n          },\r\n        },\r\n        {\r\n          provide: CollaborativeFilteringService,\r\n          useValue: {\r\n            generateRecommendations: jest.fn(),\r\n          },\r\n        },\r\n      ],\r\n    }).compile();\r\n\r\n    service = module.get<RecommendationEngineService>(RecommendationEngineService);\r\n    recommendationRepository = module.get<Repository<Recommendation>>(getRepositoryToken(Recommendation));\r\n    interactionRepository = module.get<Repository<UserInteraction>>(getRepositoryToken(UserInteraction));\r\n    userRepository = module.get<Repository<User>>(getRepositoryToken(User));\r\n    courseRepository = module.get<Repository<Course>>(getRepositoryToken(Course));\r\n    analyticsService = module.get<RecommendationAnalyticsService>(RecommendationAnalyticsService);\r\n    mlService = module.get<MLPersonalizationService>(MLPersonalizationService);\r\n    similarityService = module.get<ContentSimilarityService>(ContentSimilarityService);\r\n    collaborativeService = module.get<CollaborativeFilteringService>(CollaborativeFilteringService);\r\n  });\r\n\r\n  it('should be defined', () => {\r\n    expect(service).toBeDefined();\r\n  });\r\n\r\n  describe('generateRecommendations', () => {\r\n    it('should generate recommendations successfully', async () => {\r\n      // Arrange\r\n      const request = {\r\n        userId: 'user-1',\r\n        limit: 5,\r\n        minConfidence: 0.1,\r\n      };\r\n\r\n      jest.spyOn(userRepository, 'findOne').mockResolvedValue(mockUser);\r\n      jest.spyOn(interactionRepository, 'find').mockResolvedValue([mockInteraction]);\r\n      jest.spyOn(collaborativeService, 'generateRecommendations').mockResolvedValue([\r\n        {\r\n          userId: 'user-1',\r\n          courseId: 'course-1',\r\n          recommendationType: RecommendationType.COLLABORATIVE,\r\n          reason: RecommendationReason.SIMILAR_USERS,\r\n          confidenceScore: 0.7,\r\n          relevanceScore: 0.65,\r\n          priority: 3,\r\n          explanation: 'Users like you also liked this course',\r\n          metadata: { algorithmUsed: 'collaborative_filtering' },\r\n        },\r\n      ]);\r\n      jest.spyOn(similarityService, 'generateContentBasedRecommendations').mockResolvedValue([\r\n        {\r\n          userId: 'user-1',\r\n          courseId: 'course-2',\r\n          recommendationType: RecommendationType.CONTENT_BASED,\r\n          reason: RecommendationReason.SIMILAR_CONTENT,\r\n          confidenceScore: 0.8,\r\n          relevanceScore: 0.75,\r\n          priority: 4,\r\n          explanation: 'Similar to courses you have taken',\r\n          metadata: { algorithmUsed: 'content_similarity' },\r\n        },\r\n      ]);\r\n      jest.spyOn(mlService, 'generatePersonalizedRecommendations').mockResolvedValue([\r\n        {\r\n          userId: 'user-1',\r\n          courseId: 'course-3',\r\n          recommendationType: RecommendationType.CONTENT_BASED,\r\n          reason: RecommendationReason.INTEREST_BASED,\r\n          confidenceScore: 0.9,\r\n          relevanceScore: 0.85,\r\n          priority: 5,\r\n          explanation: 'Highly personalized for your interests',\r\n          metadata: { algorithmUsed: 'ml_personalization' },\r\n        },\r\n      ]);\r\n      jest.spyOn(recommendationRepository, 'save').mockResolvedValue([mockRecommendation] as any);\r\n      jest.spyOn(analyticsService, 'trackRecommendationGeneration').mockResolvedValue();\r\n\r\n      // Act\r\n      const result = await service.generateRecommendations(request);\r\n\r\n      // Assert\r\n      expect(result).toBeDefined();\r\n      expect(result.length).toBeGreaterThan(0);\r\n      expect(userRepository.findOne).toHaveBeenCalledWith({ where: { id: 'user-1' } });\r\n      expect(collaborativeService.generateRecommendations).toHaveBeenCalled();\r\n      expect(similarityService.generateContentBasedRecommendations).toHaveBeenCalled();\r\n      expect(mlService.generatePersonalizedRecommendations).toHaveBeenCalled();\r\n      expect(recommendationRepository.save).toHaveBeenCalled();\r\n      expect(analyticsService.trackRecommendationGeneration).toHaveBeenCalled();\r\n    });\r\n\r\n    it('should throw error when user not found', async () => {\r\n      // Arrange\r\n      const request = {\r\n        userId: 'nonexistent-user',\r\n        limit: 5,\r\n      };\r\n\r\n      jest.spyOn(userRepository, 'findOne').mockResolvedValue(null);\r\n\r\n      // Act & Assert\r\n      await expect(service.generateRecommendations(request)).rejects.toThrow('User nonexistent-user not found');\r\n    });\r\n\r\n    it('should handle empty recommendations gracefully', async () => {\r\n      // Arrange\r\n      const request = {\r\n        userId: 'user-1',\r\n        limit: 5,\r\n        minConfidence: 0.9, // High threshold\r\n      };\r\n\r\n      jest.spyOn(userRepository, 'findOne').mockResolvedValue(mockUser);\r\n      jest.spyOn(interactionRepository, 'find').mockResolvedValue([]);\r\n      jest.spyOn(collaborativeService, 'generateRecommendations').mockResolvedValue([]);\r\n      jest.spyOn(similarityService, 'generateContentBasedRecommendations').mockResolvedValue([]);\r\n      jest.spyOn(mlService, 'generatePersonalizedRecommendations').mockResolvedValue([]);\r\n      jest.spyOn(recommendationRepository, 'save').mockResolvedValue([]);\r\n\r\n      // Act\r\n      const result = await service.generateRecommendations(request);\r\n\r\n      // Assert\r\n      expect(result).toBeDefined();\r\n      expect(result.length).toBe(0);\r\n    });\r\n  });\r\n\r\n  describe('getRecommendations', () => {\r\n    it('should retrieve user recommendations with filters', async () => {\r\n      // Arrange\r\n      const userId = 'user-1';\r\n      const query = {\r\n        type: RecommendationType.CONTENT_BASED,\r\n        limit: 10,\r\n        offset: 0,\r\n        sortBy: 'createdAt',\r\n        sortOrder: 'DESC' as 'DESC',\r\n      };\r\n\r\n      const mockQueryBuilder = {\r\n        leftJoinAndSelect: jest.fn().mockReturnThis(),\r\n        where: jest.fn().mockReturnThis(),\r\n        andWhere: jest.fn().mockReturnThis(),\r\n        orderBy: jest.fn().mockReturnThis(),\r\n        skip: jest.fn().mockReturnThis(),\r\n        take: jest.fn().mockReturnThis(),\r\n        getCount: jest.fn().mockResolvedValue(1),\r\n        getMany: jest.fn().mockResolvedValue([mockRecommendation]),\r\n      };\r\n\r\n      jest.spyOn(recommendationRepository, 'createQueryBuilder').mockReturnValue(mockQueryBuilder as any);\r\n\r\n      // Act\r\n      const result = await service.getRecommendations(userId, query);\r\n\r\n      // Assert\r\n      expect(result).toBeDefined();\r\n      expect(result.recommendations).toHaveLength(1);\r\n      expect(result.total).toBe(1);\r\n      expect(mockQueryBuilder.where).toHaveBeenCalledWith('recommendation.userId = :userId', { userId });\r\n      expect(mockQueryBuilder.andWhere).toHaveBeenCalledWith('recommendation.recommendationType = :type', { type: query.type });\r\n    });\r\n\r\n    it('should apply default filters when none specified', async () => {\r\n      // Arrange\r\n      const userId = 'user-1';\r\n      const query = {\r\n        limit: 10,\r\n        offset: 0,\r\n        sortBy: 'createdAt',\r\n        sortOrder: 'DESC' as 'DESC',\r\n      };\r\n\r\n      const mockQueryBuilder = {\r\n        leftJoinAndSelect: jest.fn().mockReturnThis(),\r\n        where: jest.fn().mockReturnThis(),\r\n        andWhere: jest.fn().mockReturnThis(),\r\n        orderBy: jest.fn().mockReturnThis(),\r\n        skip: jest.fn().mockReturnThis(),\r\n        take: jest.fn().mockReturnThis(),\r\n        getCount: jest.fn().mockResolvedValue(0),\r\n        getMany: jest.fn().mockResolvedValue([]),\r\n      };\r\n\r\n      jest.spyOn(recommendationRepository, 'createQueryBuilder').mockReturnValue(mockQueryBuilder as any);\r\n\r\n      // Act\r\n      const result = await service.getRecommendations(userId, query);\r\n\r\n      // Assert\r\n      expect(result).toBeDefined();\r\n      expect(mockQueryBuilder.andWhere).toHaveBeenCalledWith('recommendation.status = :status', { status: RecommendationStatus.ACTIVE });\r\n    });\r\n  });\r\n\r\n  describe('recordInteraction', () => {\r\n    it('should record view interaction successfully', async () => {\r\n      // Arrange\r\n      const recommendationId = 'rec-1';\r\n      const interactionType = 'view';\r\n      const metadata = { source: 'homepage' };\r\n\r\n      jest.spyOn(recommendationRepository, 'findOne').mockResolvedValue(mockRecommendation);\r\n      jest.spyOn(recommendationRepository, 'save').mockResolvedValue(mockRecommendation);\r\n      jest.spyOn(analyticsService, 'trackRecommendationInteraction').mockResolvedValue();\r\n      jest.spyOn(interactionRepository, 'save').mockResolvedValue(mockInteraction);\r\n\r\n      // Act\r\n      await service.recordInteraction(recommendationId, interactionType, metadata);\r\n\r\n      // Assert\r\n      expect(recommendationRepository.findOne).toHaveBeenCalledWith({ where: { id: recommendationId } });\r\n      expect(recommendationRepository.save).toHaveBeenCalled();\r\n      expect(analyticsService.trackRecommendationInteraction).toHaveBeenCalledWith({\r\n        recommendationId,\r\n        userId: mockRecommendation.userId,\r\n        interactionType,\r\n        metadata,\r\n      });\r\n    });\r\n\r\n    it('should record click interaction and update clickedAt', async () => {\r\n      // Arrange\r\n      const recommendationId = 'rec-1';\r\n      const interactionType = 'click';\r\n\r\n      jest.spyOn(recommendationRepository, 'findOne').mockResolvedValue(mockRecommendation);\r\n      jest.spyOn(recommendationRepository, 'save').mockImplementation((rec: any) => {\r\n        expect(rec.clickedAt).toBeDefined();\r\n        return Promise.resolve(rec);\r\n      });\r\n      jest.spyOn(analyticsService, 'trackRecommendationInteraction').mockResolvedValue();\r\n      jest.spyOn(interactionRepository, 'save').mockResolvedValue(mockInteraction);\r\n\r\n      // Act\r\n      await service.recordInteraction(recommendationId, interactionType);\r\n\r\n      // Assert\r\n      expect(recommendationRepository.save).toHaveBeenCalled();\r\n    });\r\n\r\n    it('should record dismiss interaction and update status', async () => {\r\n      // Arrange\r\n      const recommendationId = 'rec-1';\r\n      const interactionType = 'dismiss';\r\n\r\n      jest.spyOn(recommendationRepository, 'findOne').mockResolvedValue(mockRecommendation);\r\n      jest.spyOn(recommendationRepository, 'save').mockImplementation((rec: any) => {\r\n        expect(rec.status).toBe(RecommendationStatus.DISMISSED);\r\n        expect(rec.dismissedAt).toBeDefined();\r\n        return Promise.resolve(rec);\r\n      });\r\n      jest.spyOn(analyticsService, 'trackRecommendationInteraction').mockResolvedValue();\r\n      jest.spyOn(interactionRepository, 'save').mockResolvedValue(mockInteraction);\r\n\r\n      // Act\r\n      await service.recordInteraction(recommendationId, interactionType);\r\n\r\n      // Assert\r\n      expect(recommendationRepository.save).toHaveBeenCalled();\r\n    });\r\n\r\n    it('should throw error when recommendation not found', async () => {\r\n      // Arrange\r\n      const recommendationId = 'nonexistent-rec';\r\n      const interactionType = 'view';\r\n\r\n      jest.spyOn(recommendationRepository, 'findOne').mockResolvedValue(null);\r\n\r\n      // Act & Assert\r\n      await expect(service.recordInteraction(recommendationId, interactionType)).rejects.toThrow(\r\n        `Recommendation ${recommendationId} not found`\r\n      );\r\n    });\r\n  });\r\n\r\n  describe('provideFeedback', () => {\r\n    it('should record feedback successfully', async () => {\r\n      // Arrange\r\n      const recommendationId = 'rec-1';\r\n      const score = 4;\r\n      const feedbackType = 'explicit';\r\n      const comment = 'Great recommendation!';\r\n\r\n      jest.spyOn(recommendationRepository, 'findOne').mockResolvedValue(mockRecommendation);\r\n      jest.spyOn(recommendationRepository, 'save').mockImplementation((rec: any) => {\r\n        expect(rec.metadata.feedback).toBeDefined();\r\n        expect(rec.metadata.feedback.score).toBe(score);\r\n        expect(rec.metadata.feedback.comment).toBe(comment);\r\n        return Promise.resolve(rec);\r\n      });\r\n      jest.spyOn(analyticsService, 'trackRecommendationFeedback').mockResolvedValue();\r\n      jest.spyOn(mlService, 'updateModelWithFeedback').mockResolvedValue();\r\n\r\n      // Act\r\n      await service.provideFeedback(recommendationId, score, feedbackType, comment);\r\n\r\n      // Assert\r\n      expect(recommendationRepository.save).toHaveBeenCalled();\r\n      expect(analyticsService.trackRecommendationFeedback).toHaveBeenCalledWith({\r\n        recommendationId,\r\n        userId: mockRecommendation.userId,\r\n        score,\r\n        feedbackType,\r\n        comment,\r\n      });\r\n      expect(mlService.updateModelWithFeedback).toHaveBeenCalledWith(\r\n        mockRecommendation.userId,\r\n        recommendationId,\r\n        score\r\n      );\r\n    });\r\n\r\n    it('should throw error when recommendation not found for feedback', async () => {\r\n      // Arrange\r\n      const recommendationId = 'nonexistent-rec';\r\n      const score = 4;\r\n\r\n      jest.spyOn(recommendationRepository, 'findOne').mockResolvedValue(null);\r\n\r\n      // Act & Assert\r\n      await expect(service.provideFeedback(recommendationId, score)).rejects.toThrow(\r\n        `Recommendation ${recommendationId} not found`\r\n      );\r\n    });\r\n  });\r\n\r\n  describe('buildRecommendationContext', () => {\r\n    it('should build context with user interactions and profile', async () => {\r\n      // Arrange\r\n      const request = {\r\n        userId: 'user-1',\r\n        context: {\r\n          sessionId: 'session-1',\r\n          deviceType: 'mobile',\r\n        },\r\n      };\r\n\r\n      jest.spyOn(interactionRepository, 'find').mockResolvedValue([mockInteraction]);\r\n      jest.spyOn(userRepository, 'findOne').mockResolvedValue(mockUser);\r\n\r\n      // Act\r\n      const context = await (service as any).buildRecommendationContext(request);\r\n\r\n      // Assert\r\n      expect(context).toBeDefined();\r\n      expect(context.userId).toBe('user-1');\r\n      expect(context.recentInteractions).toHaveLength(1);\r\n      expect(context.userProfile).toBe(mockUser);\r\n      expect(context.sessionId).toBe('session-1');\r\n      expect(context.deviceType).toBe('mobile');\r\n    });\r\n  });\r\n\r\n  describe('removeDuplicateRecommendations', () => {\r\n    it('should remove duplicate recommendations based on course and type', () => {\r\n      // Arrange\r\n      const recommendations = [\r\n        {\r\n          courseId: 'course-1',\r\n          recommendationType: RecommendationType.CONTENT_BASED,\r\n          confidenceScore: 0.8,\r\n        },\r\n        {\r\n          courseId: 'course-1',\r\n          recommendationType: RecommendationType.CONTENT_BASED,\r\n          confidenceScore: 0.7,\r\n        },\r\n        {\r\n          courseId: 'course-2',\r\n          recommendationType: RecommendationType.COLLABORATIVE,\r\n          confidenceScore: 0.6,\r\n        },\r\n      ];\r\n\r\n      // Act\r\n      const result = (service as any).removeDuplicateRecommendations(recommendations);\r\n\r\n      // Assert\r\n      expect(result).toHaveLength(2);\r\n      expect(result[0].courseId).toBe('course-1');\r\n      expect(result[0].confidenceScore).toBe(0.8); // Should keep the first one\r\n      expect(result[1].courseId).toBe('course-2');\r\n    });\r\n  });\r\n\r\n  describe('ensureRecommendationDiversity', () => {\r\n    it('should limit recommendations per type and topic', () => {\r\n      // Arrange\r\n      const recommendations = [\r\n        {\r\n          recommendationType: RecommendationType.CONTENT_BASED,\r\n          metadata: { tags: ['React'] },\r\n        },\r\n        {\r\n          recommendationType: RecommendationType.CONTENT_BASED,\r\n          metadata: { tags: ['React'] },\r\n        },\r\n        {\r\n          recommendationType: RecommendationType.CONTENT_BASED,\r\n          metadata: { tags: ['Vue'] },\r\n        },\r\n        {\r\n          recommendationType: RecommendationType.COLLABORATIVE,\r\n          metadata: { tags: ['Angular'] },\r\n        },\r\n      ];\r\n\r\n      // Act\r\n      const result = (service as any).ensureRecommendationDiversity(recommendations);\r\n\r\n      // Assert\r\n      expect(result.length).toBeLessThanOrEqual(recommendations.length);\r\n      // Should not have more than 3 of the same type\r\n      const contentBasedCount = result.filter(r => r.recommendationType === RecommendationType.CONTENT_BASED).length;\r\n      expect(contentBasedCount).toBeLessThanOrEqual(3);\r\n    });\r\n  });\r\n\r\n  describe('error handling', () => {\r\n    it('should handle database errors gracefully', async () => {\r\n      // Arrange\r\n      const request = {\r\n        userId: 'user-1',\r\n        limit: 5,\r\n      };\r\n\r\n      jest.spyOn(userRepository, 'findOne').mockRejectedValue(new Error('Database connection failed'));\r\n\r\n      // Act & Assert\r\n      await expect(service.generateRecommendations(request)).rejects.toThrow('Database connection failed');\r\n    });\r\n\r\n    it('should handle service errors in recommendation generation', async () => {\r\n      // Arrange\r\n      const request = {\r\n        userId: 'user-1',\r\n        limit: 5,\r\n      };\r\n\r\n      jest.spyOn(userRepository, 'findOne').mockResolvedValue(mockUser);\r\n      jest.spyOn(interactionRepository, 'find').mockResolvedValue([]);\r\n      jest.spyOn(collaborativeService, 'generateRecommendations').mockRejectedValue(new Error('ML service unavailable'));\r\n      jest.spyOn(similarityService, 'generateContentBasedRecommendations').mockResolvedValue([]);\r\n      jest.spyOn(mlService, 'generatePersonalizedRecommendations').mockResolvedValue([]);\r\n\r\n      // Act & Assert\r\n      await expect(service.generateRecommendations(request)).rejects.toThrow();\r\n    });\r\n  });\r\n\r\n  describe('performance tests', () => {\r\n    it('should handle large number of recommendations efficiently', async () => {\r\n      // Arrange\r\n      const request = {\r\n        userId: 'user-1',\r\n        limit: 100,\r\n      };\r\n\r\n      const largeMockRecommendations = Array.from({ length: 100 }, (_, i) => ({\r\n        userId: 'user-1',\r\n        courseId: `course-${i}`,\r\n        recommendationType: RecommendationType.CONTENT_BASED,\r\n        reason: RecommendationReason.SKILL_BASED,\r\n        confidenceScore: Math.random(),\r\n        relevanceScore: Math.random(),\r\n        priority: Math.floor(Math.random() * 5) + 1,\r\n        explanation: `Recommendation ${i}`,\r\n        metadata: { algorithmUsed: 'test' },\r\n      }));\r\n\r\n      jest.spyOn(userRepository, 'findOne').mockResolvedValue(mockUser);\r\n      jest.spyOn(interactionRepository, 'find').mockResolvedValue([]);\r\n      jest.spyOn(collaborativeService, 'generateRecommendations').mockResolvedValue(largeMockRecommendations.slice(0, 40));\r\n      jest.spyOn(similarityService, 'generateContentBasedRecommendations').mockResolvedValue(largeMockRecommendations.slice(40, 70));\r\n      jest.spyOn(mlService, 'generatePersonalizedRecommendations').mockResolvedValue(largeMockRecommendations.slice(70, 100));\r\n      jest.spyOn(recommendationRepository, 'save').mockResolvedValue(largeMockRecommendations as any);\r\n\r\n      const startTime = Date.now();\r\n\r\n      // Act\r\n      const result = await service.generateRecommendations(request);\r\n\r\n      // Assert\r\n      const endTime = Date.now();\r\n      const executionTime = endTime - startTime;\r\n      \r\n      expect(result).toBeDefined();\r\n      expect(executionTime).toBeLessThan(5000); // Should complete within 5 seconds\r\n      expect(result.length).toBeLessThanOrEqual(100);\r\n    });\r\n  });\r\n});\r\n"],"version":3}