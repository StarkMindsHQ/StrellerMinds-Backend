5dd0ada9bae0a178e665d4d9617545b3
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b, _c, _d, _e;
Object.defineProperty(exports, "__esModule", { value: true });
exports.DataWarehouseMetric = exports.AggregationType = exports.MetricType = void 0;
const typeorm_1 = require("typeorm");
var MetricType;
(function (MetricType) {
    MetricType["COUNTER"] = "counter";
    MetricType["GAUGE"] = "gauge";
    MetricType["HISTOGRAM"] = "histogram";
    MetricType["SUMMARY"] = "summary";
})(MetricType || (exports.MetricType = MetricType = {}));
var AggregationType;
(function (AggregationType) {
    AggregationType["SUM"] = "sum";
    AggregationType["AVG"] = "avg";
    AggregationType["COUNT"] = "count";
    AggregationType["MIN"] = "min";
    AggregationType["MAX"] = "max";
})(AggregationType || (exports.AggregationType = AggregationType = {}));
let DataWarehouseMetric = class DataWarehouseMetric {
};
exports.DataWarehouseMetric = DataWarehouseMetric;
__decorate([
    (0, typeorm_1.PrimaryGeneratedColumn)("uuid"),
    __metadata("design:type", String)
], DataWarehouseMetric.prototype, "id", void 0);
__decorate([
    (0, typeorm_1.Column)(),
    __metadata("design:type", String)
], DataWarehouseMetric.prototype, "metricName", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: "enum",
        enum: MetricType,
    }),
    __metadata("design:type", String)
], DataWarehouseMetric.prototype, "metricType", void 0);
__decorate([
    (0, typeorm_1.Column)("decimal", { precision: 15, scale: 4 }),
    __metadata("design:type", Number)
], DataWarehouseMetric.prototype, "value", void 0);
__decorate([
    (0, typeorm_1.Column)("jsonb"),
    __metadata("design:type", typeof (_a = typeof Record !== "undefined" && Record) === "function" ? _a : Object)
], DataWarehouseMetric.prototype, "dimensions", void 0);
__decorate([
    (0, typeorm_1.Column)("jsonb", { nullable: true }),
    __metadata("design:type", typeof (_b = typeof Record !== "undefined" && Record) === "function" ? _b : Object)
], DataWarehouseMetric.prototype, "tags", void 0);
__decorate([
    (0, typeorm_1.Column)({ type: "timestamp" }),
    __metadata("design:type", typeof (_c = typeof Date !== "undefined" && Date) === "function" ? _c : Object)
], DataWarehouseMetric.prototype, "timestamp", void 0);
__decorate([
    (0, typeorm_1.Column)({
        type: "enum",
        enum: AggregationType,
        default: AggregationType.SUM,
    }),
    __metadata("design:type", String)
], DataWarehouseMetric.prototype, "aggregationType", void 0);
__decorate([
    (0, typeorm_1.Column)({ default: "1h" }),
    __metadata("design:type", String)
], DataWarehouseMetric.prototype, "granularity", void 0);
__decorate([
    (0, typeorm_1.CreateDateColumn)(),
    __metadata("design:type", typeof (_d = typeof Date !== "undefined" && Date) === "function" ? _d : Object)
], DataWarehouseMetric.prototype, "createdAt", void 0);
__decorate([
    (0, typeorm_1.UpdateDateColumn)(),
    __metadata("design:type", typeof (_e = typeof Date !== "undefined" && Date) === "function" ? _e : Object)
], DataWarehouseMetric.prototype, "updatedAt", void 0);
exports.DataWarehouseMetric = DataWarehouseMetric = __decorate([
    (0, typeorm_1.Entity)("data_warehouse_metrics"),
    (0, typeorm_1.Index)(["metricName", "timestamp"]),
    (0, typeorm_1.Index)(["metricType", "timestamp"]),
    (0, typeorm_1.Index)(["dimensions", "timestamp"])
], DataWarehouseMetric);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiQzpcXFVzZXJzXFxnLWVrb2hcXERlc2t0b3BcXFN0cmVsbGVyTWluZHMtQmFja2VuZFxcc3JjXFxhbmFseXRpY1xcZW50aXRpZXNcXGRhdGEtd2FyZWhvdXNlLW1ldHJpYy5lbnRpdHkudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUFBLHFDQUEyRztBQUUzRyxJQUFZLFVBS1g7QUFMRCxXQUFZLFVBQVU7SUFDcEIsaUNBQW1CLENBQUE7SUFDbkIsNkJBQWUsQ0FBQTtJQUNmLHFDQUF1QixDQUFBO0lBQ3ZCLGlDQUFtQixDQUFBO0FBQ3JCLENBQUMsRUFMVyxVQUFVLDBCQUFWLFVBQVUsUUFLckI7QUFFRCxJQUFZLGVBTVg7QUFORCxXQUFZLGVBQWU7SUFDekIsOEJBQVcsQ0FBQTtJQUNYLDhCQUFXLENBQUE7SUFDWCxrQ0FBZSxDQUFBO0lBQ2YsOEJBQVcsQ0FBQTtJQUNYLDhCQUFXLENBQUE7QUFDYixDQUFDLEVBTlcsZUFBZSwrQkFBZixlQUFlLFFBTTFCO0FBTU0sSUFBTSxtQkFBbUIsR0FBekIsTUFBTSxtQkFBbUI7Q0F3Qy9CLENBQUE7QUF4Q1ksa0RBQW1CO0FBRTlCO0lBREMsSUFBQSxnQ0FBc0IsRUFBQyxNQUFNLENBQUM7OytDQUNyQjtBQUdWO0lBREMsSUFBQSxnQkFBTSxHQUFFOzt1REFDUztBQU1sQjtJQUpDLElBQUEsZ0JBQU0sRUFBQztRQUNOLElBQUksRUFBRSxNQUFNO1FBQ1osSUFBSSxFQUFFLFVBQVU7S0FDakIsQ0FBQzs7dURBQ29CO0FBR3RCO0lBREMsSUFBQSxnQkFBTSxFQUFDLFNBQVMsRUFBRSxFQUFFLFNBQVMsRUFBRSxFQUFFLEVBQUUsS0FBSyxFQUFFLENBQUMsRUFBRSxDQUFDOztrREFDbEM7QUFHYjtJQURDLElBQUEsZ0JBQU0sRUFBQyxPQUFPLENBQUM7a0RBQ0osTUFBTSxvQkFBTixNQUFNO3VEQUFnQjtBQUdsQztJQURDLElBQUEsZ0JBQU0sRUFBQyxPQUFPLEVBQUUsRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFFLENBQUM7a0RBQzdCLE1BQU0sb0JBQU4sTUFBTTtpREFBZ0I7QUFHN0I7SUFEQyxJQUFBLGdCQUFNLEVBQUMsRUFBRSxJQUFJLEVBQUUsV0FBVyxFQUFFLENBQUM7a0RBQ25CLElBQUksb0JBQUosSUFBSTtzREFBQTtBQU9mO0lBTEMsSUFBQSxnQkFBTSxFQUFDO1FBQ04sSUFBSSxFQUFFLE1BQU07UUFDWixJQUFJLEVBQUUsZUFBZTtRQUNyQixPQUFPLEVBQUUsZUFBZSxDQUFDLEdBQUc7S0FDN0IsQ0FBQzs7NERBQzhCO0FBR2hDO0lBREMsSUFBQSxnQkFBTSxFQUFDLEVBQUUsT0FBTyxFQUFFLElBQUksRUFBRSxDQUFDOzt3REFDUDtBQUduQjtJQURDLElBQUEsMEJBQWdCLEdBQUU7a0RBQ1IsSUFBSSxvQkFBSixJQUFJO3NEQUFBO0FBR2Y7SUFEQyxJQUFBLDBCQUFnQixHQUFFO2tEQUNSLElBQUksb0JBQUosSUFBSTtzREFBQTs4QkF2Q0osbUJBQW1CO0lBSi9CLElBQUEsZ0JBQU0sRUFBQyx3QkFBd0IsQ0FBQztJQUNoQyxJQUFBLGVBQUssRUFBQyxDQUFDLFlBQVksRUFBRSxXQUFXLENBQUMsQ0FBQztJQUNsQyxJQUFBLGVBQUssRUFBQyxDQUFDLFlBQVksRUFBRSxXQUFXLENBQUMsQ0FBQztJQUNsQyxJQUFBLGVBQUssRUFBQyxDQUFDLFlBQVksRUFBRSxXQUFXLENBQUMsQ0FBQztHQUN0QixtQkFBbUIsQ0F3Qy9CIiwibmFtZXMiOltdLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcZy1la29oXFxEZXNrdG9wXFxTdHJlbGxlck1pbmRzLUJhY2tlbmRcXHNyY1xcYW5hbHl0aWNcXGVudGl0aWVzXFxkYXRhLXdhcmVob3VzZS1tZXRyaWMuZW50aXR5LnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEVudGl0eSwgUHJpbWFyeUdlbmVyYXRlZENvbHVtbiwgQ29sdW1uLCBDcmVhdGVEYXRlQ29sdW1uLCBVcGRhdGVEYXRlQ29sdW1uLCBJbmRleCB9IGZyb20gXCJ0eXBlb3JtXCJcclxuXHJcbmV4cG9ydCBlbnVtIE1ldHJpY1R5cGUge1xyXG4gIENPVU5URVIgPSBcImNvdW50ZXJcIixcclxuICBHQVVHRSA9IFwiZ2F1Z2VcIixcclxuICBISVNUT0dSQU0gPSBcImhpc3RvZ3JhbVwiLFxyXG4gIFNVTU1BUlkgPSBcInN1bW1hcnlcIixcclxufVxyXG5cclxuZXhwb3J0IGVudW0gQWdncmVnYXRpb25UeXBlIHtcclxuICBTVU0gPSBcInN1bVwiLFxyXG4gIEFWRyA9IFwiYXZnXCIsXHJcbiAgQ09VTlQgPSBcImNvdW50XCIsXHJcbiAgTUlOID0gXCJtaW5cIixcclxuICBNQVggPSBcIm1heFwiLFxyXG59XHJcblxyXG5ARW50aXR5KFwiZGF0YV93YXJlaG91c2VfbWV0cmljc1wiKVxyXG5ASW5kZXgoW1wibWV0cmljTmFtZVwiLCBcInRpbWVzdGFtcFwiXSlcclxuQEluZGV4KFtcIm1ldHJpY1R5cGVcIiwgXCJ0aW1lc3RhbXBcIl0pXHJcbkBJbmRleChbXCJkaW1lbnNpb25zXCIsIFwidGltZXN0YW1wXCJdKVxyXG5leHBvcnQgY2xhc3MgRGF0YVdhcmVob3VzZU1ldHJpYyB7XHJcbiAgQFByaW1hcnlHZW5lcmF0ZWRDb2x1bW4oXCJ1dWlkXCIpXHJcbiAgaWQ6IHN0cmluZ1xyXG5cclxuICBAQ29sdW1uKClcclxuICBtZXRyaWNOYW1lOiBzdHJpbmdcclxuXHJcbiAgQENvbHVtbih7XHJcbiAgICB0eXBlOiBcImVudW1cIixcclxuICAgIGVudW06IE1ldHJpY1R5cGUsXHJcbiAgfSlcclxuICBtZXRyaWNUeXBlOiBNZXRyaWNUeXBlXHJcblxyXG4gIEBDb2x1bW4oXCJkZWNpbWFsXCIsIHsgcHJlY2lzaW9uOiAxNSwgc2NhbGU6IDQgfSlcclxuICB2YWx1ZTogbnVtYmVyXHJcblxyXG4gIEBDb2x1bW4oXCJqc29uYlwiKVxyXG4gIGRpbWVuc2lvbnM6IFJlY29yZDxzdHJpbmcsIHN0cmluZz5cclxuXHJcbiAgQENvbHVtbihcImpzb25iXCIsIHsgbnVsbGFibGU6IHRydWUgfSlcclxuICB0YWdzPzogUmVjb3JkPHN0cmluZywgc3RyaW5nPlxyXG5cclxuICBAQ29sdW1uKHsgdHlwZTogXCJ0aW1lc3RhbXBcIiB9KVxyXG4gIHRpbWVzdGFtcDogRGF0ZVxyXG5cclxuICBAQ29sdW1uKHtcclxuICAgIHR5cGU6IFwiZW51bVwiLFxyXG4gICAgZW51bTogQWdncmVnYXRpb25UeXBlLFxyXG4gICAgZGVmYXVsdDogQWdncmVnYXRpb25UeXBlLlNVTSxcclxuICB9KVxyXG4gIGFnZ3JlZ2F0aW9uVHlwZTogQWdncmVnYXRpb25UeXBlXHJcblxyXG4gIEBDb2x1bW4oeyBkZWZhdWx0OiBcIjFoXCIgfSlcclxuICBncmFudWxhcml0eTogc3RyaW5nXHJcblxyXG4gIEBDcmVhdGVEYXRlQ29sdW1uKClcclxuICBjcmVhdGVkQXQ6IERhdGVcclxuXHJcbiAgQFVwZGF0ZURhdGVDb2x1bW4oKVxyXG4gIHVwZGF0ZWRBdDogRGF0ZVxyXG59XHJcbiJdLCJ2ZXJzaW9uIjozfQ==