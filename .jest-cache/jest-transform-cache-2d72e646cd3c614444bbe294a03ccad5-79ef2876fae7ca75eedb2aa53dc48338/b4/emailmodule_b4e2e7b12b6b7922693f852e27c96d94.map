{"file":"C:\\Users\\g-ekoh\\Desktop\\StrellerMinds-Backend\\src\\email\\email.module.ts","mappings":";;;;;;;;;AAAA;;;;GAIG;AACH,2CAAwC;AACxC,2CAA6D;AAC7D,uCAA0C;AAC1C,6CAAgD;AAChD,mDAA+C;AAC/C,yDAAqD;AACrD,+EAA0E;AAC1E,uDAAmD;AACnD,4EAAiE;AACjE,kEAAuD;AACvD,gFAAqE;AACrE,uEAAwE;AACxE,qEAAsE;AACtE,+DAAgE;AAChE,iDAAqD;AACrD,mEAAoE;AACpE,6DAAwD;AA4CjD,IAAM,WAAW,GAAjB,MAAM,WAAW;CAAG,CAAA;AAAd,kCAAW;sBAAX,WAAW;IA1CvB,IAAA,eAAM,EAAC;QACN,OAAO,EAAE;YACP,qBAAY;YACZ,uBAAa,CAAC,UAAU,CAAC,CAAC,qCAAa,EAAE,2BAAQ,EAAE,yCAAe,CAAC,CAAC;YACpE,iBAAU,CAAC,aAAa,CAAC;gBACvB,IAAI,EAAE,OAAO;aACd,CAAC;SACH;QACD,WAAW,EAAE;YACX,kCAAe;YACf,uDAAyB;YACzB,+CAAwB;YACxB,6CAAuB;YACvB,2CAAsB;SACvB;QACD,SAAS,EAAE;YACT;gBACE,OAAO,EAAE,4BAAY;gBACrB,UAAU,EAAE,CAAC,MAAqB,EAAE,EAAE;oBACpC,IACE,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,KAAK,aAAa;wBACxC,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,KAAK,OAAO,EACvC,CAAC;wBACD,OAAO,IAAI,qCAAgB,EAAE,CAAC;oBAChC,CAAC;oBACD,4EAA4E;oBAC5E,OAAO,IAAI,4BAAY,CACrB,MAAM,EACN,SAAS,EAAE,aAAa;oBACxB,SAAS,EAAE,0BAA0B;oBACrC,SAAS,EAAE,qBAAqB;oBAChC,SAAS,CACV,CAAC;gBACJ,CAAC;gBACD,MAAM,EAAE,CAAC,sBAAa,CAAC;aACxB;YACD,gCAAc;YACd,uCAAoB;YACpB,4BAAgB;SACjB;QACD,OAAO,EAAE,CAAC,4BAAY,CAAC;KACxB,CAAC;GACW,WAAW,CAAG","names":[],"sources":["C:\\Users\\g-ekoh\\Desktop\\StrellerMinds-Backend\\src\\email\\email.module.ts"],"sourcesContent":["/**\r\n * EmailModule provides email sending, analytics, preference management, and tracking features.\r\n *\r\n * @module Email\r\n */\r\nimport { Module } from '@nestjs/common';\r\nimport { ConfigModule, ConfigService } from '@nestjs/config';\r\nimport { BullModule } from '@nestjs/bull';\r\nimport { TypeOrmModule } from '@nestjs/typeorm';\r\nimport { EmailService } from './email.service';\r\nimport { EmailController } from './email.controller';\r\nimport { EmailPreferenceController } from './email-preference.controller';\r\nimport { EmailProcessor } from './email.processor';\r\nimport { EmailTemplate } from './entities/email-template.entity';\r\nimport { EmailLog } from './entities/email-log.entity';\r\nimport { EmailPreference } from './entities/email-preference.entity';\r\nimport { EmailAnalyticsController } from './admin/analytics.controller';\r\nimport { EmailTemplateController } from './admin/template.controller';\r\nimport { EmailTemplateService } from './admin/template.service';\r\nimport { EmailTestService } from './utils/test.util';\r\nimport { EmailPreviewController } from './admin/preview.controller';\r\nimport { MockEmailService } from './mock-email.service';\r\n\r\n@Module({\r\n  imports: [\r\n    ConfigModule,\r\n    TypeOrmModule.forFeature([EmailTemplate, EmailLog, EmailPreference]),\r\n    BullModule.registerQueue({\r\n      name: 'email',\r\n    }),\r\n  ],\r\n  controllers: [\r\n    EmailController,\r\n    EmailPreferenceController,\r\n    EmailAnalyticsController,\r\n    EmailTemplateController,\r\n    EmailPreviewController,\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: EmailService,\r\n      useFactory: (config: ConfigService) => {\r\n        if (\r\n          config.get('NODE_ENV') === 'development' ||\r\n          config.get('EMAIL_ENABLED') === 'false'\r\n        ) {\r\n          return new MockEmailService();\r\n        }\r\n        // The real EmailService will be instantiated by Nest with DI for other deps\r\n        return new EmailService(\r\n          config,\r\n          undefined, // emailQueue\r\n          undefined, // emailTemplateRepository\r\n          undefined, // emailLogRepository\r\n          undefined, // emailPreferenceRepository\r\n        );\r\n      },\r\n      inject: [ConfigService],\r\n    },\r\n    EmailProcessor,\r\n    EmailTemplateService,\r\n    EmailTestService,\r\n  ],\r\n  exports: [EmailService],\r\n})\r\nexport class EmailModule {}\r\n"],"version":3}