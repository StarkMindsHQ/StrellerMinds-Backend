{"file":"C:\\Users\\g-ekoh\\Desktop\\StrellerMinds-Backend\\src\\users\\dtos\\create.users.dto.ts","mappings":";;;;;;;;;;;;;AAAA;;;;;;GAMG;AACH,6CAAmE;AACnE,qDAOyB;AACzB,0DAAkD;AAClD,oEAA4D;AAE5D,MAAa,cAAc;CAyC1B;AAzCD,wCAyCC;AArCC;IAHC,IAAA,qBAAW,EAAC,EAAE,OAAO,EAAE,kBAAkB,EAAE,WAAW,EAAE,oBAAoB,EAAE,CAAC;IAC/E,IAAA,yBAAO,GAAE;IACT,IAAA,4BAAU,GAAE;;6CACC;AAMd;IAJC,IAAA,qBAAW,EAAC,EAAE,OAAO,EAAE,mBAAmB,EAAE,SAAS,EAAE,CAAC,EAAE,WAAW,EAAE,6BAA6B,EAAE,CAAC;IACvG,IAAA,0BAAQ,GAAE;IACV,IAAA,2BAAS,EAAC,CAAC,EAAE,EAAE,OAAO,EAAE,6CAA6C,EAAE,CAAC;IACxE,IAAA,4BAAU,GAAE;;gDACI;AAKjB;IAHC,IAAA,qBAAW,EAAC,EAAE,OAAO,EAAE,MAAM,EAAE,WAAW,EAAE,YAAY,EAAE,CAAC;IAC3D,IAAA,0BAAQ,GAAE;IACV,IAAA,4BAAU,GAAE;;iDACK;AAKlB;IAHC,IAAA,qBAAW,EAAC,EAAE,OAAO,EAAE,KAAK,EAAE,WAAW,EAAE,WAAW,EAAE,CAAC;IACzD,IAAA,0BAAQ,GAAE;IACV,IAAA,4BAAU,GAAE;;gDACI;AAKjB;IAHC,IAAA,6BAAmB,EAAC,EAAE,OAAO,EAAE,6BAA6B,EAAE,WAAW,EAAE,8BAA8B,EAAE,CAAC;IAC5G,IAAA,4BAAU,GAAE;IACZ,IAAA,0BAAQ,GAAE;;uDACc;AAKzB;IAHC,IAAA,6BAAmB,EAAC,EAAE,OAAO,EAAE,aAAa,EAAE,WAAW,EAAE,2BAA2B,EAAE,CAAC;IACzF,IAAA,0BAAQ,GAAE;IACV,IAAA,4BAAU,GAAE;;2CACA;AAKb;IAHC,IAAA,6BAAmB,EAAC,EAAE,IAAI,EAAE,wBAAQ,EAAE,WAAW,EAAE,sBAAsB,EAAE,CAAC;IAC5E,IAAA,wBAAM,EAAC,wBAAQ,CAAC;IAChB,IAAA,4BAAU,GAAE;kDACN,wBAAQ,oBAAR,wBAAQ;4CAAC;AAKhB;IAHC,IAAA,6BAAmB,EAAC,EAAE,IAAI,EAAE,kCAAa,EAAE,WAAW,EAAE,2BAA2B,EAAE,CAAC;IACtF,IAAA,wBAAM,EAAC,kCAAa,CAAC;IACrB,IAAA,4BAAU,GAAE;kDACJ,kCAAa,oBAAb,kCAAa;8CAAC","names":[],"sources":["C:\\Users\\g-ekoh\\Desktop\\StrellerMinds-Backend\\src\\users\\dtos\\create.users.dto.ts"],"sourcesContent":["/**\r\n * DTO for creating a new user.\r\n *\r\n * Used for user registration and admin user creation.\r\n *\r\n * All fields are documented for OpenAPI/Swagger UI.\r\n */\r\nimport { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\r\nimport {\r\n  IsEmail,\r\n  IsEnum,\r\n  IsNotEmpty,\r\n  IsOptional,\r\n  IsString,\r\n  MinLength,\r\n} from 'class-validator';\r\nimport { UserRole } from '../enums/userRole.enum';\r\nimport { AccountStatus } from '../enums/accountStatus.enum';\r\n\r\nexport class CreateUsersDto {\r\n  @ApiProperty({ example: 'user@example.com', description: 'User email address' })\r\n  @IsEmail()\r\n  @IsNotEmpty()\r\n  email: string;\r\n\r\n  @ApiProperty({ example: 'StrongPassword123', minLength: 8, description: 'User password (min 8 chars)' })\r\n  @IsString()\r\n  @MinLength(8, { message: 'Password must be at least 8 characters long' })\r\n  @IsNotEmpty()\r\n  password: string;\r\n\r\n  @ApiProperty({ example: 'John', description: 'First name' })\r\n  @IsString()\r\n  @IsNotEmpty()\r\n  firstName: string;\r\n\r\n  @ApiProperty({ example: 'Doe', description: 'Last name' })\r\n  @IsString()\r\n  @IsNotEmpty()\r\n  lastName: string;\r\n\r\n  @ApiPropertyOptional({ example: 'https://cdn.com/profile.jpg', description: 'Profile image URL (optional)' })\r\n  @IsOptional()\r\n  @IsString()\r\n  profileImageUrl?: string;\r\n\r\n  @ApiPropertyOptional({ example: 'A short bio', description: 'User biography (optional)' })\r\n  @IsString()\r\n  @IsOptional()\r\n  bio?: string;\r\n\r\n  @ApiPropertyOptional({ enum: UserRole, description: 'User role (optional)' })\r\n  @IsEnum(UserRole)\r\n  @IsOptional()\r\n  role?: UserRole;\r\n\r\n  @ApiPropertyOptional({ enum: AccountStatus, description: 'Account status (optional)' })\r\n  @IsEnum(AccountStatus)\r\n  @IsOptional()\r\n  status?: AccountStatus;\r\n}\r\n"],"version":3}