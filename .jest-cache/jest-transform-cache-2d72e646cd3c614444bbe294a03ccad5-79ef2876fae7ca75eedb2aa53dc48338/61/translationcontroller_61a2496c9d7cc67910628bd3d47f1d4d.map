{"file":"C:\\Users\\g-ekoh\\Desktop\\StrellerMinds-Backend\\src\\translation\\translation.controller.ts","mappings":";;;;;;;;;;;;;;;;AAAA,2CAAoE;AACpE,+DAA2D;AAC3D,uDAAyD;AACzD,8DAAsD;AAG/C,IAAM,qBAAqB,GAA3B,MAAM,qBAAqB;IAChC,YAA6B,OAA2B;QAA3B,YAAO,GAAP,OAAO,CAAoB;IAAG,CAAC;IAGtD,AAAN,KAAK,CAAC,MAAM,CAAS,GAAyB;QAC5C,OAAO,MAAM,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC;IACnD,CAAC;IAGK,AAAN,KAAK,CAAC,GAAG,CAAe,GAAW,EAAiB,IAAc;QAChE,OAAO,MAAM,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;IACtD,CAAC;IAGK,AAAN,KAAK,CAAC,QAAQ,CACG,IAAc,EACd,IAAc;QAE7B,OAAO,MAAM,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IACvD,CAAC;CACF,CAAA;AApBY,sDAAqB;AAI1B;IADL,IAAA,aAAI,GAAE;IACO,WAAA,IAAA,aAAI,GAAE,CAAA;;yDAAM,sCAAoB,oBAApB,sCAAoB;;mDAE7C;AAGK;IADL,IAAA,YAAG,GAAE;IACK,WAAA,IAAA,cAAK,EAAC,KAAK,CAAC,CAAA;IAAe,WAAA,IAAA,cAAK,EAAC,MAAM,CAAC,CAAA;;iEAAO,wBAAQ,oBAAR,wBAAQ;;gDAEjE;AAGK;IADL,IAAA,YAAG,EAAC,OAAO,CAAC;IAEV,WAAA,IAAA,cAAK,EAAC,MAAM,CAAC,CAAA;IACb,WAAA,IAAA,cAAK,EAAC,MAAM,CAAC,CAAA;;gEAAO,wBAAQ,oBAAR,wBAAQ;;qDAG9B;gCAnBU,qBAAqB;IADjC,IAAA,mBAAU,EAAC,cAAc,CAAC;yDAEa,wCAAkB,oBAAlB,wCAAkB;GAD7C,qBAAqB,CAoBjC","names":[],"sources":["C:\\Users\\g-ekoh\\Desktop\\StrellerMinds-Backend\\src\\translation\\translation.controller.ts"],"sourcesContent":["import { Controller, Get, Post, Body, Query } from '@nestjs/common';\r\nimport { TranslationService } from './translation.service';\r\nimport { CreateTranslationDto } from './translation.dto';\r\nimport { Language } from 'src/language/language.enum';\r\n\r\n@Controller('translations')\r\nexport class TranslationController {\r\n  constructor(private readonly service: TranslationService) {}\r\n\r\n  @Post()\r\n  async create(@Body() dto: CreateTranslationDto) {\r\n    return await this.service.createTranslation(dto);\r\n  }\r\n\r\n  @Get()\r\n  async get(@Query('key') key: string, @Query('lang') lang: Language) {\r\n    return await this.service.getTranslation(key, lang);\r\n  }\r\n\r\n  @Get('batch')\r\n  async getBatch(\r\n    @Query('keys') keys: string[],\r\n    @Query('lang') lang: Language\r\n  ) {\r\n    return await this.service.translateBatch(keys, lang);\r\n  }\r\n}\r\n"],"version":3}