{"file":"C:\\Users\\g-ekoh\\Desktop\\StrellerMinds-Backend\\src\\grading\\controller\\grading.controller.spec.ts","mappings":";;AAAA,6CAAsD;AACtD,6DAAyD;AACzD,iEAA6D;AAI7D,QAAQ,CAAC,mBAAmB,EAAE,GAAG,EAAE;IACjC,IAAI,UAA6B,CAAC;IAClC,IAAI,OAAuB,CAAC;IAE5B,MAAM,WAAW,GAAG;QAClB,eAAe,EAAE,IAAI,CAAC,EAAE,EAAE;QAC1B,WAAW,EAAE,IAAI,CAAC,EAAE,EAAE;QACtB,iBAAiB,EAAE,IAAI,CAAC,EAAE,EAAE;KAC7B,CAAC;IAEF,UAAU,CAAC,KAAK,IAAI,EAAE;QACpB,MAAM,MAAM,GAAkB,MAAM,cAAI,CAAC,mBAAmB,CAAC;YAC3D,WAAW,EAAE,CAAC,sCAAiB,CAAC;YAChC,SAAS,EAAE;gBACT,EAAE,OAAO,EAAE,gCAAc,EAAE,QAAQ,EAAE,WAAW,EAAE;aACnD;SACF,CAAC,CAAC,OAAO,EAAE,CAAC;QAEb,UAAU,GAAG,MAAM,CAAC,GAAG,CAAoB,sCAAiB,CAAC,CAAC;QAC9D,OAAO,GAAG,MAAM,CAAC,GAAG,CAAiB,gCAAc,CAAC,CAAC;IACvD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,4CAA4C,EAAE,KAAK,IAAI,EAAE;QAC1D,MAAM,GAAG,GAAmB,EAAE,YAAY,EAAE,EAAE,EAAE,QAAQ,EAAE,WAAW,EAAE,CAAC;QACxE,MAAM,GAAG,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC;QAEhC,MAAM,UAAU,CAAC,eAAe,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;QACjD,MAAM,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC,oBAAoB,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;IAC5E,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,wCAAwC,EAAE,KAAK,IAAI,EAAE;QACtD,MAAM,GAAG,GAAmB,EAAE,QAAQ,EAAE,SAAS,EAAE,CAAC;QACpD,MAAM,GAAG,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC;QAEhC,MAAM,UAAU,CAAC,WAAW,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;QAC1C,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,oBAAoB,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;IACrE,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,8CAA8C,EAAE,KAAK,IAAI,EAAE;QAC5D,MAAM,GAAG,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC;QAChC,MAAM,UAAU,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC;QACxC,MAAM,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC,oBAAoB,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IACnE,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","names":[],"sources":["C:\\Users\\g-ekoh\\Desktop\\StrellerMinds-Backend\\src\\grading\\controller\\grading.controller.spec.ts"],"sourcesContent":["import { Test, TestingModule } from '@nestjs/testing';\r\nimport { GradingController } from './grading.controller';\r\nimport { GradingService } from '../services/grading.service';\r\nimport { CreateGradeDto } from '../dto/create-grade.dto';\r\nimport { UpdateGradeDto } from '../dto/update-grade.dto';\r\n\r\ndescribe('GradingController', () => {\r\n  let controller: GradingController;\r\n  let service: GradingService;\r\n\r\n  const mockService = {\r\n    gradeAssignment: jest.fn(),\r\n    updateGrade: jest.fn(),\r\n    getGradingHistory: jest.fn(),\r\n  };\r\n\r\n  beforeEach(async () => {\r\n    const module: TestingModule = await Test.createTestingModule({\r\n      controllers: [GradingController],\r\n      providers: [\r\n        { provide: GradingService, useValue: mockService },\r\n      ],\r\n    }).compile();\r\n\r\n    controller = module.get<GradingController>(GradingController);\r\n    service = module.get<GradingService>(GradingService);\r\n  });\r\n\r\n  it('should call gradingService.gradeAssignment', async () => {\r\n    const dto: CreateGradeDto = { numericGrade: 85, feedback: 'Good work' };\r\n    const req = { user: { id: 1 } };\r\n\r\n    await controller.gradeAssignment(2, 5, dto, req);\r\n    expect(service.gradeAssignment).toHaveBeenCalledWith(req.user, 2, 5, dto);\r\n  });\r\n\r\n  it('should call gradingService.updateGrade', async () => {\r\n    const dto: UpdateGradeDto = { feedback: 'Updated' };\r\n    const req = { user: { id: 1 } };\r\n\r\n    await controller.updateGrade(1, dto, req);\r\n    expect(service.updateGrade).toHaveBeenCalledWith(req.user, 1, dto);\r\n  });\r\n\r\n  it('should call gradingService.getGradingHistory', async () => {\r\n    const req = { user: { id: 1 } };\r\n    await controller.getGradingHistory(req);\r\n    expect(service.getGradingHistory).toHaveBeenCalledWith(req.user);\r\n  });\r\n});\r\n"],"version":3}