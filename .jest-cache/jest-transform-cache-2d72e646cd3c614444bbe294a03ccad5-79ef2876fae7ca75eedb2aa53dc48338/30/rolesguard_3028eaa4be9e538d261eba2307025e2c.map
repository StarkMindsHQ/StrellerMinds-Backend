{"file":"C:\\Users\\g-ekoh\\Desktop\\StrellerMinds-Backend\\src\\role\\roles.guard.ts","mappings":";;;;;;;;;;;;;AAAA,sCAAsC;AACtC,2CAA2E;AAC3E,uCAAyC;AACzC,uDAA8C;AAIvC,IAAM,UAAU,GAAhB,MAAM,UAAU;IACrB,YAAoB,SAAoB;QAApB,cAAS,GAAT,SAAS,CAAW;IAAG,CAAC;IAE5C,WAAW,CAAC,OAAyB;QACnC,MAAM,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAAS,2BAAS,EAAE;YACxE,OAAO,CAAC,UAAU,EAAE;YACpB,OAAO,CAAC,QAAQ,EAAE;SACnB,CAAC,CAAC;QACH,IAAI,CAAC,aAAa,EAAE,CAAC;YACnB,OAAO,IAAI,CAAC,CAAC,0CAA0C;QACzD,CAAC;QAED,MAAM,EAAE,IAAI,EAAE,GAAG,OAAO,CAAC,YAAY,EAAE,CAAC,UAAU,EAAE,CAAC;QACrD,OAAO,aAAa,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,EAAE,KAAK,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;IACnE,CAAC;CACF,CAAA;AAfY,gCAAU;qBAAV,UAAU;IADtB,IAAA,mBAAU,GAAE;yDAEoB,gBAAS,oBAAT,gBAAS;GAD7B,UAAU,CAetB","names":[],"sources":["C:\\Users\\g-ekoh\\Desktop\\StrellerMinds-Backend\\src\\role\\roles.guard.ts"],"sourcesContent":["/* eslint-disable prettier/prettier */\r\nimport { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\r\nimport { Reflector } from '@nestjs/core';\r\nimport { ROLES_KEY } from './roles.decorator';\r\nimport { Role } from './roles.enum';\r\n\r\n@Injectable()\r\nexport class RolesGuard implements CanActivate {\r\n  constructor(private reflector: Reflector) {}\r\n\r\n  canActivate(context: ExecutionContext): boolean {\r\n    const requiredRoles = this.reflector.getAllAndOverride<Role[]>(ROLES_KEY, [\r\n      context.getHandler(),\r\n      context.getClass(),\r\n    ]);\r\n    if (!requiredRoles) {\r\n      return true; // If no roles are specified, allow access\r\n    }\r\n\r\n    const { user } = context.switchToHttp().getRequest();\r\n    return requiredRoles.some((role) => user?.roles?.includes(role));\r\n  }\r\n}\r\n"],"version":3}