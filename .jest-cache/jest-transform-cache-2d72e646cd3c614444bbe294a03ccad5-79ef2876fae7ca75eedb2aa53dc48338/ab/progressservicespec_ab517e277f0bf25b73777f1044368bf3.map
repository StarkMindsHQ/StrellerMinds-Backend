{"file":"C:\\Users\\g-ekoh\\Desktop\\StrellerMinds-Backend\\src\\progress\\progress.service.spec.ts","mappings":";;AAAA,yDAAqD;AAErD,QAAQ,CAAC,iBAAiB,EAAE,GAAG,EAAE;IAC/B,IAAI,OAAwB,CAAC;IAE7B,UAAU,CAAC,GAAG,EAAE;QACd,OAAO,GAAG,IAAI,kCAAe,EAAE,CAAC;IAClC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,8CAA8C,EAAE,GAAG,EAAE;QACtD,OAAO,CAAC,cAAc,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;QAC/B,MAAM,QAAQ,GAAG,OAAO,CAAC,eAAe,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;QAChD,MAAM,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;IACnD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,gDAAgD,EAAE,GAAG,EAAE;QACxD,OAAO,CAAC,cAAc,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;QAC/B,OAAO,CAAC,cAAc,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;QAC/B,MAAM,QAAQ,GAAG,OAAO,CAAC,eAAe,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;QAChD,MAAM,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAChF,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,6CAA6C,EAAE,GAAG,EAAE;QACrD,MAAM,UAAU,GAAG,OAAO,CAAC,uBAAuB,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;QAC3D,MAAM,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC7B,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,6CAA6C,EAAE,GAAG,EAAE;QACrD,OAAO,CAAC,cAAc,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;QAC/B,OAAO,CAAC,cAAc,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;QAC/B,MAAM,UAAU,GAAG,OAAO,CAAC,uBAAuB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACzD,MAAM,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAC9B,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,wDAAwD,EAAE,GAAG,EAAE;QAChE,OAAO,CAAC,cAAc,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;QAC/B,MAAM,QAAQ,GAAG,OAAO,CAAC,eAAe,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC/C,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAChC,MAAM,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QACjD,MAAM,CAAC,QAAQ,CAAC,oBAAoB,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjD,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","names":[],"sources":["C:\\Users\\g-ekoh\\Desktop\\StrellerMinds-Backend\\src\\progress\\progress.service.spec.ts"],"sourcesContent":["import { ProgressService } from './progress.service';\r\n\r\ndescribe('ProgressService', () => {\r\n  let service: ProgressService;\r\n\r\n  beforeEach(() => {\r\n    service = new ProgressService();\r\n  });\r\n\r\n  it('should mark a lesson as completed for a user', () => {\r\n    service.completeLesson(1, 101);\r\n    const progress = service.getProgressData(1, 10);\r\n    expect(progress.completedLessons).toContain(101);\r\n  });\r\n\r\n  it('should not throw when marking multiple lessons', () => {\r\n    service.completeLesson(1, 101);\r\n    service.completeLesson(1, 102);\r\n    const progress = service.getProgressData(1, 10);\r\n    expect(progress.completedLessons).toEqual(expect.arrayContaining([101, 102]));\r\n  });\r\n\r\n  it('should return 0% for users with no progress', () => {\r\n    const percentage = service.getCompletionPercentage(99, 10);\r\n    expect(percentage).toBe(0);\r\n  });\r\n\r\n  it('should return correct completion percentage', () => {\r\n    service.completeLesson(2, 201);\r\n    service.completeLesson(2, 202);\r\n    const percentage = service.getCompletionPercentage(2, 4);\r\n    expect(percentage).toBe(50);\r\n  });\r\n\r\n  it('should return progress data with userId and percentage', () => {\r\n    service.completeLesson(3, 301);\r\n    const progress = service.getProgressData(3, 5);\r\n    expect(progress.userId).toBe(3);\r\n    expect(progress.completedLessons).toEqual([301]);\r\n    expect(progress.completionPercentage).toBe(20);\r\n  });\r\n});\r\n"],"version":3}