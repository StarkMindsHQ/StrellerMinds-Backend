65064f8958809ec2340a367798793d1b
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b, _c;
Object.defineProperty(exports, "__esModule", { value: true });
exports.UserConsent = exports.ConsentStatus = exports.ConsentType = void 0;
const typeorm_1 = require("typeorm");
const swagger_1 = require("@nestjs/swagger");
/**
 * Enum for consent types.
 */
var ConsentType;
(function (ConsentType) {
    ConsentType["MARKETING"] = "marketing";
    ConsentType["ANALYTICS"] = "analytics";
    ConsentType["FUNCTIONAL"] = "functional";
    ConsentType["NECESSARY"] = "necessary";
})(ConsentType || (exports.ConsentType = ConsentType = {}));
/**
 * Enum for consent status.
 */
var ConsentStatus;
(function (ConsentStatus) {
    ConsentStatus["GRANTED"] = "granted";
    ConsentStatus["DENIED"] = "denied";
    ConsentStatus["WITHDRAWN"] = "withdrawn";
})(ConsentStatus || (exports.ConsentStatus = ConsentStatus = {}));
/**
 * Entity representing a user's consent record.
 */
let UserConsent = class UserConsent {
};
exports.UserConsent = UserConsent;
__decorate([
    (0, swagger_1.ApiProperty)({ description: 'Consent record ID', example: 'uuid-v4' }),
    (0, typeorm_1.PrimaryGeneratedColumn)('uuid'),
    __metadata("design:type", String)
], UserConsent.prototype, "id", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ description: 'User ID', example: 'uuid-user' }),
    (0, typeorm_1.Column)('uuid'),
    __metadata("design:type", String)
], UserConsent.prototype, "userId", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({
        enum: ConsentType,
        description: 'Consent type',
        example: ConsentType.MARKETING,
    }),
    (0, typeorm_1.Column)({
        type: 'enum',
        enum: ConsentType,
    }),
    __metadata("design:type", String)
], UserConsent.prototype, "consentType", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({
        enum: ConsentStatus,
        description: 'Consent status',
        example: ConsentStatus.GRANTED,
    }),
    (0, typeorm_1.Column)({
        type: 'enum',
        enum: ConsentStatus,
    }),
    __metadata("design:type", String)
], UserConsent.prototype, "status", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ description: 'Purpose of consent' }),
    (0, typeorm_1.Column)({ type: 'text', nullable: true }),
    __metadata("design:type", String)
], UserConsent.prototype, "purpose", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ description: 'Legal basis for consent' }),
    (0, typeorm_1.Column)({ type: 'text', nullable: true }),
    __metadata("design:type", String)
], UserConsent.prototype, "legalBasis", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({
        description: 'Expiry date for consent',
        type: String,
        format: 'date-time',
    }),
    (0, typeorm_1.Column)({ type: 'timestamp', nullable: true }),
    __metadata("design:type", typeof (_a = typeof Date !== "undefined" && Date) === "function" ? _a : Object)
], UserConsent.prototype, "expiresAt", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'Date/time when the consent was created',
        type: String,
        format: 'date-time',
        example: '2025-06-29T12:00:00Z',
    }),
    (0, typeorm_1.CreateDateColumn)(),
    __metadata("design:type", typeof (_b = typeof Date !== "undefined" && Date) === "function" ? _b : Object)
], UserConsent.prototype, "createdAt", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'Date/time when the consent was last updated',
        type: String,
        format: 'date-time',
        example: '2025-06-29T12:10:00Z',
    }),
    (0, typeorm_1.UpdateDateColumn)(),
    __metadata("design:type", typeof (_c = typeof Date !== "undefined" && Date) === "function" ? _c : Object)
], UserConsent.prototype, "updatedAt", void 0);
exports.UserConsent = UserConsent = __decorate([
    (0, typeorm_1.Entity)('user_consents')
], UserConsent);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiQzpcXFVzZXJzXFxnLWVrb2hcXERlc2t0b3BcXFN0cmVsbGVyTWluZHMtQmFja2VuZFxcc3JjXFxnZHByXFxlbnRpdGllc1xcdXNlci1jb25zZW50LmVudGl0eS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQUEscUNBTWlCO0FBQ2pCLDZDQUFtRTtBQUVuRTs7R0FFRztBQUNILElBQVksV0FLWDtBQUxELFdBQVksV0FBVztJQUNyQixzQ0FBdUIsQ0FBQTtJQUN2QixzQ0FBdUIsQ0FBQTtJQUN2Qix3Q0FBeUIsQ0FBQTtJQUN6QixzQ0FBdUIsQ0FBQTtBQUN6QixDQUFDLEVBTFcsV0FBVywyQkFBWCxXQUFXLFFBS3RCO0FBRUQ7O0dBRUc7QUFDSCxJQUFZLGFBSVg7QUFKRCxXQUFZLGFBQWE7SUFDdkIsb0NBQW1CLENBQUE7SUFDbkIsa0NBQWlCLENBQUE7SUFDakIsd0NBQXVCLENBQUE7QUFDekIsQ0FBQyxFQUpXLGFBQWEsNkJBQWIsYUFBYSxRQUl4QjtBQUVEOztHQUVHO0FBRUksSUFBTSxXQUFXLEdBQWpCLE1BQU0sV0FBVztDQXlFdkIsQ0FBQTtBQXpFWSxrQ0FBVztBQUl0QjtJQUZDLElBQUEscUJBQVcsRUFBQyxFQUFFLFdBQVcsRUFBRSxtQkFBbUIsRUFBRSxPQUFPLEVBQUUsU0FBUyxFQUFFLENBQUM7SUFDckUsSUFBQSxnQ0FBc0IsRUFBQyxNQUFNLENBQUM7O3VDQUNwQjtBQUtYO0lBRkMsSUFBQSxxQkFBVyxFQUFDLEVBQUUsV0FBVyxFQUFFLFNBQVMsRUFBRSxPQUFPLEVBQUUsV0FBVyxFQUFFLENBQUM7SUFDN0QsSUFBQSxnQkFBTSxFQUFDLE1BQU0sQ0FBQzs7MkNBQ0E7QUFZZjtJQVRDLElBQUEscUJBQVcsRUFBQztRQUNYLElBQUksRUFBRSxXQUFXO1FBQ2pCLFdBQVcsRUFBRSxjQUFjO1FBQzNCLE9BQU8sRUFBRSxXQUFXLENBQUMsU0FBUztLQUMvQixDQUFDO0lBQ0QsSUFBQSxnQkFBTSxFQUFDO1FBQ04sSUFBSSxFQUFFLE1BQU07UUFDWixJQUFJLEVBQUUsV0FBVztLQUNsQixDQUFDOztnREFDdUI7QUFZekI7SUFUQyxJQUFBLHFCQUFXLEVBQUM7UUFDWCxJQUFJLEVBQUUsYUFBYTtRQUNuQixXQUFXLEVBQUUsZ0JBQWdCO1FBQzdCLE9BQU8sRUFBRSxhQUFhLENBQUMsT0FBTztLQUMvQixDQUFDO0lBQ0QsSUFBQSxnQkFBTSxFQUFDO1FBQ04sSUFBSSxFQUFFLE1BQU07UUFDWixJQUFJLEVBQUUsYUFBYTtLQUNwQixDQUFDOzsyQ0FDb0I7QUFLdEI7SUFGQyxJQUFBLDZCQUFtQixFQUFDLEVBQUUsV0FBVyxFQUFFLG9CQUFvQixFQUFFLENBQUM7SUFDMUQsSUFBQSxnQkFBTSxFQUFDLEVBQUUsSUFBSSxFQUFFLE1BQU0sRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFFLENBQUM7OzRDQUN6QjtBQUtoQjtJQUZDLElBQUEsNkJBQW1CLEVBQUMsRUFBRSxXQUFXLEVBQUUseUJBQXlCLEVBQUUsQ0FBQztJQUMvRCxJQUFBLGdCQUFNLEVBQUMsRUFBRSxJQUFJLEVBQUUsTUFBTSxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUUsQ0FBQzs7K0NBQ3RCO0FBU25CO0lBTkMsSUFBQSw2QkFBbUIsRUFBQztRQUNuQixXQUFXLEVBQUUseUJBQXlCO1FBQ3RDLElBQUksRUFBRSxNQUFNO1FBQ1osTUFBTSxFQUFFLFdBQVc7S0FDcEIsQ0FBQztJQUNELElBQUEsZ0JBQU0sRUFBQyxFQUFFLElBQUksRUFBRSxXQUFXLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBRSxDQUFDO2tEQUNuQyxJQUFJLG9CQUFKLElBQUk7OENBQUM7QUFVaEI7SUFQQyxJQUFBLHFCQUFXLEVBQUM7UUFDWCxXQUFXLEVBQUUsd0NBQXdDO1FBQ3JELElBQUksRUFBRSxNQUFNO1FBQ1osTUFBTSxFQUFFLFdBQVc7UUFDbkIsT0FBTyxFQUFFLHNCQUFzQjtLQUNoQyxDQUFDO0lBQ0QsSUFBQSwwQkFBZ0IsR0FBRTtrREFDUixJQUFJLG9CQUFKLElBQUk7OENBQUM7QUFVaEI7SUFQQyxJQUFBLHFCQUFXLEVBQUM7UUFDWCxXQUFXLEVBQUUsNkNBQTZDO1FBQzFELElBQUksRUFBRSxNQUFNO1FBQ1osTUFBTSxFQUFFLFdBQVc7UUFDbkIsT0FBTyxFQUFFLHNCQUFzQjtLQUNoQyxDQUFDO0lBQ0QsSUFBQSwwQkFBZ0IsR0FBRTtrREFDUixJQUFJLG9CQUFKLElBQUk7OENBQUM7c0JBeEVMLFdBQVc7SUFEdkIsSUFBQSxnQkFBTSxFQUFDLGVBQWUsQ0FBQztHQUNYLFdBQVcsQ0F5RXZCIiwibmFtZXMiOltdLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcZy1la29oXFxEZXNrdG9wXFxTdHJlbGxlck1pbmRzLUJhY2tlbmRcXHNyY1xcZ2RwclxcZW50aXRpZXNcXHVzZXItY29uc2VudC5lbnRpdHkudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcclxuICBFbnRpdHksXHJcbiAgUHJpbWFyeUdlbmVyYXRlZENvbHVtbixcclxuICBDb2x1bW4sXHJcbiAgQ3JlYXRlRGF0ZUNvbHVtbixcclxuICBVcGRhdGVEYXRlQ29sdW1uLFxyXG59IGZyb20gJ3R5cGVvcm0nO1xyXG5pbXBvcnQgeyBBcGlQcm9wZXJ0eSwgQXBpUHJvcGVydHlPcHRpb25hbCB9IGZyb20gJ0BuZXN0anMvc3dhZ2dlcic7XHJcblxyXG4vKipcclxuICogRW51bSBmb3IgY29uc2VudCB0eXBlcy5cclxuICovXHJcbmV4cG9ydCBlbnVtIENvbnNlbnRUeXBlIHtcclxuICBNQVJLRVRJTkcgPSAnbWFya2V0aW5nJyxcclxuICBBTkFMWVRJQ1MgPSAnYW5hbHl0aWNzJyxcclxuICBGVU5DVElPTkFMID0gJ2Z1bmN0aW9uYWwnLFxyXG4gIE5FQ0VTU0FSWSA9ICduZWNlc3NhcnknLFxyXG59XHJcblxyXG4vKipcclxuICogRW51bSBmb3IgY29uc2VudCBzdGF0dXMuXHJcbiAqL1xyXG5leHBvcnQgZW51bSBDb25zZW50U3RhdHVzIHtcclxuICBHUkFOVEVEID0gJ2dyYW50ZWQnLFxyXG4gIERFTklFRCA9ICdkZW5pZWQnLFxyXG4gIFdJVEhEUkFXTiA9ICd3aXRoZHJhd24nLFxyXG59XHJcblxyXG4vKipcclxuICogRW50aXR5IHJlcHJlc2VudGluZyBhIHVzZXIncyBjb25zZW50IHJlY29yZC5cclxuICovXHJcbkBFbnRpdHkoJ3VzZXJfY29uc2VudHMnKVxyXG5leHBvcnQgY2xhc3MgVXNlckNvbnNlbnQge1xyXG4gIC8qKiBDb25zZW50IHJlY29yZCBJRCAqL1xyXG4gIEBBcGlQcm9wZXJ0eSh7IGRlc2NyaXB0aW9uOiAnQ29uc2VudCByZWNvcmQgSUQnLCBleGFtcGxlOiAndXVpZC12NCcgfSlcclxuICBAUHJpbWFyeUdlbmVyYXRlZENvbHVtbigndXVpZCcpXHJcbiAgaWQ6IHN0cmluZztcclxuXHJcbiAgLyoqIFVzZXIgSUQgKi9cclxuICBAQXBpUHJvcGVydHkoeyBkZXNjcmlwdGlvbjogJ1VzZXIgSUQnLCBleGFtcGxlOiAndXVpZC11c2VyJyB9KVxyXG4gIEBDb2x1bW4oJ3V1aWQnKVxyXG4gIHVzZXJJZDogc3RyaW5nO1xyXG5cclxuICAvKiogQ29uc2VudCB0eXBlICovXHJcbiAgQEFwaVByb3BlcnR5KHtcclxuICAgIGVudW06IENvbnNlbnRUeXBlLFxyXG4gICAgZGVzY3JpcHRpb246ICdDb25zZW50IHR5cGUnLFxyXG4gICAgZXhhbXBsZTogQ29uc2VudFR5cGUuTUFSS0VUSU5HLFxyXG4gIH0pXHJcbiAgQENvbHVtbih7XHJcbiAgICB0eXBlOiAnZW51bScsXHJcbiAgICBlbnVtOiBDb25zZW50VHlwZSxcclxuICB9KVxyXG4gIGNvbnNlbnRUeXBlOiBDb25zZW50VHlwZTtcclxuXHJcbiAgLyoqIENvbnNlbnQgc3RhdHVzICovXHJcbiAgQEFwaVByb3BlcnR5KHtcclxuICAgIGVudW06IENvbnNlbnRTdGF0dXMsXHJcbiAgICBkZXNjcmlwdGlvbjogJ0NvbnNlbnQgc3RhdHVzJyxcclxuICAgIGV4YW1wbGU6IENvbnNlbnRTdGF0dXMuR1JBTlRFRCxcclxuICB9KVxyXG4gIEBDb2x1bW4oe1xyXG4gICAgdHlwZTogJ2VudW0nLFxyXG4gICAgZW51bTogQ29uc2VudFN0YXR1cyxcclxuICB9KVxyXG4gIHN0YXR1czogQ29uc2VudFN0YXR1cztcclxuXHJcbiAgLyoqIFB1cnBvc2Ugb2YgY29uc2VudCAob3B0aW9uYWwpICovXHJcbiAgQEFwaVByb3BlcnR5T3B0aW9uYWwoeyBkZXNjcmlwdGlvbjogJ1B1cnBvc2Ugb2YgY29uc2VudCcgfSlcclxuICBAQ29sdW1uKHsgdHlwZTogJ3RleHQnLCBudWxsYWJsZTogdHJ1ZSB9KVxyXG4gIHB1cnBvc2U6IHN0cmluZztcclxuXHJcbiAgLyoqIExlZ2FsIGJhc2lzIGZvciBjb25zZW50IChvcHRpb25hbCkgKi9cclxuICBAQXBpUHJvcGVydHlPcHRpb25hbCh7IGRlc2NyaXB0aW9uOiAnTGVnYWwgYmFzaXMgZm9yIGNvbnNlbnQnIH0pXHJcbiAgQENvbHVtbih7IHR5cGU6ICd0ZXh0JywgbnVsbGFibGU6IHRydWUgfSlcclxuICBsZWdhbEJhc2lzOiBzdHJpbmc7XHJcblxyXG4gIC8qKiBFeHBpcnkgZGF0ZSBmb3IgY29uc2VudCAob3B0aW9uYWwpICovXHJcbiAgQEFwaVByb3BlcnR5T3B0aW9uYWwoe1xyXG4gICAgZGVzY3JpcHRpb246ICdFeHBpcnkgZGF0ZSBmb3IgY29uc2VudCcsXHJcbiAgICB0eXBlOiBTdHJpbmcsXHJcbiAgICBmb3JtYXQ6ICdkYXRlLXRpbWUnLFxyXG4gIH0pXHJcbiAgQENvbHVtbih7IHR5cGU6ICd0aW1lc3RhbXAnLCBudWxsYWJsZTogdHJ1ZSB9KVxyXG4gIGV4cGlyZXNBdDogRGF0ZTtcclxuXHJcbiAgLyoqIERhdGUvdGltZSB3aGVuIHRoZSBjb25zZW50IHdhcyBjcmVhdGVkICovXHJcbiAgQEFwaVByb3BlcnR5KHtcclxuICAgIGRlc2NyaXB0aW9uOiAnRGF0ZS90aW1lIHdoZW4gdGhlIGNvbnNlbnQgd2FzIGNyZWF0ZWQnLFxyXG4gICAgdHlwZTogU3RyaW5nLFxyXG4gICAgZm9ybWF0OiAnZGF0ZS10aW1lJyxcclxuICAgIGV4YW1wbGU6ICcyMDI1LTA2LTI5VDEyOjAwOjAwWicsXHJcbiAgfSlcclxuICBAQ3JlYXRlRGF0ZUNvbHVtbigpXHJcbiAgY3JlYXRlZEF0OiBEYXRlO1xyXG5cclxuICAvKiogRGF0ZS90aW1lIHdoZW4gdGhlIGNvbnNlbnQgd2FzIGxhc3QgdXBkYXRlZCAqL1xyXG4gIEBBcGlQcm9wZXJ0eSh7XHJcbiAgICBkZXNjcmlwdGlvbjogJ0RhdGUvdGltZSB3aGVuIHRoZSBjb25zZW50IHdhcyBsYXN0IHVwZGF0ZWQnLFxyXG4gICAgdHlwZTogU3RyaW5nLFxyXG4gICAgZm9ybWF0OiAnZGF0ZS10aW1lJyxcclxuICAgIGV4YW1wbGU6ICcyMDI1LTA2LTI5VDEyOjEwOjAwWicsXHJcbiAgfSlcclxuICBAVXBkYXRlRGF0ZUNvbHVtbigpXHJcbiAgdXBkYXRlZEF0OiBEYXRlO1xyXG59XHJcbiJdLCJ2ZXJzaW9uIjozfQ==