{"file":"C:\\Users\\g-ekoh\\Desktop\\StrellerMinds-Backend\\src\\test\\contract\\stellar.pact.spec.ts","mappings":";;;;;AAAA,6CAA0C;AAC1C,kDAA0B;AAE1B,QAAQ,CAAC,0BAA0B,EAAE,GAAG,EAAE;IACxC,MAAM,QAAQ,GAAG,IAAA,uBAAU,EAAC,iBAAiB,CAAC,CAAC;IAE/C,SAAS,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAC;IAClC,QAAQ,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC;IAEpC,QAAQ,CAAC,wCAAwC,EAAE,GAAG,EAAE;QACtD,SAAS,CAAC,GAAG,EAAE,CACb,QAAQ,CAAC,cAAc,CAAC;YACtB,KAAK,EAAE,oBAAoB;YAC3B,aAAa,EAAE,iCAAiC;YAChD,WAAW,EAAE;gBACX,MAAM,EAAE,KAAK;gBACb,IAAI,EAAE,qBAAqB;aAC5B;YACD,eAAe,EAAE;gBACf,MAAM,EAAE,GAAG;gBACX,IAAI,EAAE;oBACJ,EAAE,EAAE,OAAO;oBACX,UAAU,EAAE,IAAI;iBACjB;aACF;SACF,CAAC,CACH,CAAC;QAEF,EAAE,CAAC,kCAAkC,EAAE,KAAK,IAAI,EAAE;YAChD,MAAM,QAAQ,GAAG,MAAM,eAAK,CAAC,GAAG,CAC9B,GAAG,QAAQ,CAAC,WAAW,CAAC,OAAO,qBAAqB,CACrD,CAAC;YACF,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAClC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACzC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","names":[],"sources":["C:\\Users\\g-ekoh\\Desktop\\StrellerMinds-Backend\\src\\test\\contract\\stellar.pact.spec.ts"],"sourcesContent":["import { createPact } from './pactHelper';\r\nimport axios from 'axios';\r\n\r\ndescribe('Stellar Horizon API Pact', () => {\r\n  const provider = createPact('stellar-horizon');\r\n\r\n  beforeAll(() => provider.setup());\r\n  afterAll(() => provider.finalize());\r\n\r\n  describe('when a transaction lookup is requested', () => {\r\n    beforeAll(() =>\r\n      provider.addInteraction({\r\n        state: 'transaction exists',\r\n        uponReceiving: 'a request for transaction by ID',\r\n        withRequest: {\r\n          method: 'GET',\r\n          path: '/transactions/12345',\r\n        },\r\n        willRespondWith: {\r\n          status: 200,\r\n          body: {\r\n            id: '12345',\r\n            successful: true,\r\n          },\r\n        },\r\n      }),\r\n    );\r\n\r\n    it('returns the expected transaction', async () => {\r\n      const response = await axios.get(\r\n        `${provider.mockService.baseUrl}/transactions/12345`,\r\n      );\r\n      expect(response.status).toBe(200);\r\n      expect(response.data.id).toBe('12345');\r\n    });\r\n  });\r\n});\r\n"],"version":3}