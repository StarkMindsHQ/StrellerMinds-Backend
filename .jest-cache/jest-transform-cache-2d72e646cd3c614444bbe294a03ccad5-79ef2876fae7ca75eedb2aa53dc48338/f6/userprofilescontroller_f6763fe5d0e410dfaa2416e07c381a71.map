{"file":"C:\\Users\\g-ekoh\\Desktop\\StrellerMinds-Backend\\src\\user-profiles\\user-profiles.controller.ts","mappings":"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","names":[],"sources":["C:\\Users\\g-ekoh\\Desktop\\StrellerMinds-Backend\\src\\user-profiles\\user-profiles.controller.ts"],"sourcesContent":["import {\r\n  Controller,\r\n  Get,\r\n  Post,\r\n  Body,\r\n  Patch,\r\n  Put,\r\n  Param,\r\n  Delete,\r\n  UseGuards,\r\n  Request,\r\n  HttpCode,\r\n  HttpStatus,\r\n  Headers,\r\n} from '@nestjs/common';\r\nimport { UserProfilesService } from './user-profiles.service';\r\nimport { CreateUserProfileDto } from './dto/create-user-profile.dto';\r\nimport { UpdateUserProfileDto } from './dto/update-user-profile.dto';\r\nimport { JwtAuthGuard } from '../auth/guards/jwt-auth.guard';\r\nimport { RolesGuard } from '../auth/guards/roles.guard';\r\nimport { Roles } from '../auth/decorators/roles.decorator';\r\nimport {\r\n  ApiTags,\r\n  ApiOperation,\r\n  ApiResponse,\r\n  ApiBearerAuth,\r\n} from '@nestjs/swagger';\r\nimport { detectLanguageFromHeader } from 'src/common/util/language-detector.util';\r\n\r\n@ApiTags('user-profiles')\r\n@Controller('user-profiles')\r\nexport class UserProfilesController {\r\n  constructor(private readonly userProfilesService: UserProfilesService) {}\r\n\r\n  @Post()\r\n  @UseGuards(JwtAuthGuard)\r\n  @ApiBearerAuth()\r\n  @ApiOperation({ summary: 'Create a new user profile' })\r\n  @ApiResponse({\r\n    status: 201,\r\n    description: 'The profile has been successfully created.',\r\n  })\r\n  @ApiResponse({ status: 400, description: 'Bad Request.' })\r\n  @ApiResponse({ status: 403, description: 'Forbidden.' })\r\n  create(@Request() req, @Body() createUserProfileDto: CreateUserProfileDto) {\r\n    return this.userProfilesService.create(req.user.id, createUserProfileDto);\r\n  }\r\n\r\n  @Get()\r\n  @ApiOperation({ summary: 'Get all public profiles' })\r\n  @ApiResponse({ status: 200, description: 'Return all public profiles.' })\r\n  findAll() {\r\n    return this.userProfilesService.findAll();\r\n  }\r\n\r\n  @Get(':id')\r\n  @UseGuards(JwtAuthGuard)\r\n  @ApiBearerAuth()\r\n  @ApiOperation({ summary: 'Get a profile by id' })\r\n  @ApiResponse({ status: 200, description: 'Return the profile.' })\r\n  @ApiResponse({ status: 404, description: 'Profile not found.' })\r\n  findOne(@Param('id') id: string, @Request() req) {\r\n    return this.userProfilesService.findOne(id);\r\n  }\r\n\r\n  @Get('user/:userId')\r\n  @UseGuards(JwtAuthGuard)\r\n  @ApiBearerAuth()\r\n  @ApiOperation({ summary: 'Get a profile by user id' })\r\n  @ApiResponse({ status: 200, description: 'Return the profile.' })\r\n  @ApiResponse({ status: 404, description: 'Profile not found.' })\r\n  findByUserId(@Param('userId') userId: string, @Request() req) {\r\n    return this.userProfilesService.findByUserId(userId, req.user.id);\r\n  }\r\n\r\n  @Put(':id')\r\n  @UseGuards(JwtAuthGuard)\r\n  @ApiBearerAuth()\r\n  @ApiOperation({ summary: 'Update a profile' })\r\n  @ApiResponse({\r\n    status: 200,\r\n    description: 'The profile has been successfully updated.',\r\n  })\r\n  @ApiResponse({ status: 403, description: 'Forbidden.' })\r\n  @ApiResponse({ status: 404, description: 'Profile not found.' })\r\n  update(\r\n    @Param('id') id: string,\r\n    @Request() req,\r\n    @Body() updateUserProfileDto: UpdateUserProfileDto,\r\n  ) {\r\n    return this.userProfilesService.update(\r\n      id,\r\n      req.user.id,\r\n      updateUserProfileDto,\r\n    );\r\n  }\r\n\r\n  @Patch(':id')\r\n  @UseGuards(JwtAuthGuard)\r\n  @ApiBearerAuth()\r\n  @ApiOperation({ summary: 'Partially update a profile' })\r\n  @ApiResponse({\r\n    status: 200,\r\n    description: 'The profile has been successfully updated.',\r\n  })\r\n  @ApiResponse({ status: 403, description: 'Forbidden.' })\r\n  @ApiResponse({ status: 404, description: 'Profile not found.' })\r\n  patch(\r\n    @Param('id') id: string,\r\n    @Request() req,\r\n    @Body() updateUserProfileDto: UpdateUserProfileDto,\r\n  ) {\r\n    return this.userProfilesService.patch(\r\n      id,\r\n      req.user.id,\r\n      updateUserProfileDto,\r\n    );\r\n  }\r\n\r\n  @Delete(':id')\r\n  @UseGuards(JwtAuthGuard)\r\n  @HttpCode(HttpStatus.NO_CONTENT)\r\n  @ApiBearerAuth()\r\n  @ApiOperation({ summary: 'Delete a profile' })\r\n  @ApiResponse({\r\n    status: 204,\r\n    description: 'The profile has been successfully deleted.',\r\n  })\r\n  @ApiResponse({ status: 403, description: 'Forbidden.' })\r\n  @ApiResponse({ status: 404, description: 'Profile not found.' })\r\n  remove(@Param('id') id: string, @Request() req) {\r\n    return this.userProfilesService.remove(id, req.user.id);\r\n  }\r\n\r\n  @Delete(':id/admin')\r\n  @UseGuards(JwtAuthGuard, RolesGuard)\r\n  @Roles('admin')\r\n  @HttpCode(HttpStatus.NO_CONTENT)\r\n  @ApiBearerAuth()\r\n  @ApiOperation({ summary: 'Admin delete a profile' })\r\n  @ApiResponse({\r\n    status: 204,\r\n    description: 'The profile has been successfully deleted.',\r\n  })\r\n  @ApiResponse({ status: 403, description: 'Forbidden.' })\r\n  @ApiResponse({ status: 404, description: 'Profile not found.' })\r\n  adminRemove(@Param('id') id: string, @Request() req) {\r\n    // Admin can delete any profile\r\n    return this.userProfilesService.remove(id, req.user.id);\r\n  }\r\n\r\n  @Get('detect-language')\r\n@UseGuards(JwtAuthGuard)\r\n@ApiOperation({ summary: 'Detect and store preferred language' })\r\n@ApiResponse({ status: 200, description: 'Detected language returned and saved.' })\r\n@ApiBearerAuth()\r\nasync detectLanguage(@Request() req, @Headers('accept-language') acceptLanguage: string) {\r\n  const detectedLang = detectLanguageFromHeader(acceptLanguage) || 'en';\r\n\r\n  // Save to user's profile\r\n  await this.userProfilesService.setPreferredLanguage(req.user.id, detectedLang);\r\n\r\n  return { detectedLanguage: detectedLang };\r\n}\r\n}\r\n"],"version":3}