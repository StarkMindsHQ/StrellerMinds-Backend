d35ed1c1251e983cf4a3c8fae8e509b7
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p;
Object.defineProperty(exports, "__esModule", { value: true });
exports.UserResolver = void 0;
const graphql_1 = require("@nestjs/graphql");
const common_1 = require("@nestjs/common");
const graphql_subscriptions_1 = require("graphql-subscriptions");
const user_entity_1 = require("../entities/user.entity");
const gql_auth_guard_1 = require("../../../guards/gql-auth.guard");
const current_user_decorator_1 = require("../../../decorators/current-user.decorator");
const cache_interceptor_1 = require("../../../interceptors/cache.interceptor");
const pubSub = new graphql_subscriptions_1.PubSub();
let UserResolver = class UserResolver {
    constructor(userService, userLoader) {
        this.userService = userService;
        this.userLoader = userLoader;
    }
    async getUsers(args) {
        return this.userService.findAll(args);
    }
    async getUser(id) {
        return this.userLoader.load(id);
    }
    async getCurrentUser(user) {
        return user;
    }
    async createUser(input) {
        const user = await this.userService.create(input);
        // Publish subscription event
        pubSub.publish("userCreated", { userCreated: user });
        return user;
    }
    async updateUser(id, input, currentUser) {
        const user = await this.userService.update(id, input, currentUser);
        // Publish subscription event
        pubSub.publish("userUpdated", { userUpdated: user });
        return user;
    }
    async deleteUser(id, currentUser) {
        await this.userService.delete(id, currentUser);
        // Publish subscription event
        pubSub.publish("userDeleted", { userDeleted: { id } });
        return true;
    }
    // Field resolvers for optimized data fetching
    async posts(user, context) {
        // Use DataLoader to avoid N+1 queries
        return context.dataSources.postLoader?.loadByUserId(user.id) || [];
    }
    async postsCount(user, context) {
        return context.dataSources.postLoader?.countByUserId(user.id) || 0;
    }
    async lastLoginAt(user) {
        // This could be fetched from a separate service
        return this.userService.getLastLoginAt(user.id);
    }
    // Subscriptions
    userCreated() {
        return pubSub.asyncIterator("userCreated");
    }
    userUpdated() {
        return pubSub.asyncIterator("userUpdated");
    }
    userDeleted() {
        return pubSub.asyncIterator("userDeleted");
    }
};
exports.UserResolver = UserResolver;
__decorate([
    (0, graphql_1.Query)(() => [user_entity_1.User], { name: "users" }),
    (0, common_1.UseInterceptors)(cache_interceptor_1.CacheInterceptor),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", typeof (_a = typeof Promise !== "undefined" && Promise) === "function" ? _a : Object)
], UserResolver.prototype, "getUsers", null);
__decorate([
    (0, graphql_1.Query)(() => user_entity_1.User, { name: "user", nullable: true }),
    (0, common_1.UseInterceptors)(cache_interceptor_1.CacheInterceptor),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String]),
    __metadata("design:returntype", typeof (_b = typeof Promise !== "undefined" && Promise) === "function" ? _b : Object)
], UserResolver.prototype, "getUser", null);
__decorate([
    (0, graphql_1.Query)(() => user_entity_1.User, { name: "me" }),
    (0, common_1.UseGuards)(gql_auth_guard_1.GqlAuthGuard),
    __param(0, (0, current_user_decorator_1.CurrentUser)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_c = typeof user_entity_1.User !== "undefined" && user_entity_1.User) === "function" ? _c : Object]),
    __metadata("design:returntype", typeof (_d = typeof Promise !== "undefined" && Promise) === "function" ? _d : Object)
], UserResolver.prototype, "getCurrentUser", null);
__decorate([
    (0, graphql_1.Mutation)(() => user_entity_1.User),
    (0, common_1.UseGuards)(gql_auth_guard_1.GqlAuthGuard),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", typeof (_e = typeof Promise !== "undefined" && Promise) === "function" ? _e : Object)
], UserResolver.prototype, "createUser", null);
__decorate([
    (0, graphql_1.Mutation)(() => user_entity_1.User),
    (0, common_1.UseGuards)(gql_auth_guard_1.GqlAuthGuard),
    __param(2, (0, current_user_decorator_1.CurrentUser)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String, Object, typeof (_f = typeof user_entity_1.User !== "undefined" && user_entity_1.User) === "function" ? _f : Object]),
    __metadata("design:returntype", typeof (_g = typeof Promise !== "undefined" && Promise) === "function" ? _g : Object)
], UserResolver.prototype, "updateUser", null);
__decorate([
    (0, graphql_1.Mutation)(() => Boolean),
    (0, common_1.UseGuards)(gql_auth_guard_1.GqlAuthGuard),
    __param(1, (0, current_user_decorator_1.CurrentUser)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String, typeof (_h = typeof user_entity_1.User !== "undefined" && user_entity_1.User) === "function" ? _h : Object]),
    __metadata("design:returntype", typeof (_j = typeof Promise !== "undefined" && Promise) === "function" ? _j : Object)
], UserResolver.prototype, "deleteUser", null);
__decorate([
    (0, graphql_1.ResolveField)(() => [String]),
    __param(0, (0, graphql_1.Parent)()),
    __param(1, (0, graphql_1.Context)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_k = typeof user_entity_1.User !== "undefined" && user_entity_1.User) === "function" ? _k : Object, Object]),
    __metadata("design:returntype", Promise)
], UserResolver.prototype, "posts", null);
__decorate([
    (0, graphql_1.ResolveField)(() => Number),
    __param(0, (0, graphql_1.Parent)()),
    __param(1, (0, graphql_1.Context)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_l = typeof user_entity_1.User !== "undefined" && user_entity_1.User) === "function" ? _l : Object, Object]),
    __metadata("design:returntype", typeof (_m = typeof Promise !== "undefined" && Promise) === "function" ? _m : Object)
], UserResolver.prototype, "postsCount", null);
__decorate([
    (0, graphql_1.ResolveField)(() => String, { nullable: true }),
    __param(0, (0, graphql_1.Parent)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [typeof (_o = typeof user_entity_1.User !== "undefined" && user_entity_1.User) === "function" ? _o : Object]),
    __metadata("design:returntype", typeof (_p = typeof Promise !== "undefined" && Promise) === "function" ? _p : Object)
], UserResolver.prototype, "lastLoginAt", null);
__decorate([
    (0, graphql_1.Subscription)(() => user_entity_1.User, { name: "userCreated" }),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", void 0)
], UserResolver.prototype, "userCreated", null);
__decorate([
    (0, graphql_1.Subscription)(() => user_entity_1.User, { name: "userUpdated" }),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", void 0)
], UserResolver.prototype, "userUpdated", null);
__decorate([
    (0, graphql_1.Subscription)(() => String, { name: "userDeleted" }),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", void 0)
], UserResolver.prototype, "userDeleted", null);
exports.UserResolver = UserResolver = __decorate([
    (0, graphql_1.Resolver)(() => user_entity_1.User),
    __metadata("design:paramtypes", [Object, Object])
], UserResolver);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,