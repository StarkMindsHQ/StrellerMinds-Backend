{"file":"C:\\Users\\g-ekoh\\Desktop\\StrellerMinds-Backend\\src\\audit\\controllers\\audit.log.controller.ts","mappings":";;;;;;;;;;;;;;;;AAAA;;GAEG;AACH,2CAOwB;AACxB,6CAMyB;AACzB,qEAAgE;AAChE,+DAA2D;AAC3D,2EAA8D;AAC9D,mEAA2D;AAC3D,qEAAgE;AAChE,mEAAwD;AAOjD,IAAM,kBAAkB,GAAxB,MAAM,kBAAkB;IAC7B,YAA6B,eAAgC;QAAhC,oBAAe,GAAf,eAAe,CAAiB;IAAG,CAAC;IAS3D,AAAN,KAAK,CAAC,mBAAmB;QACvB,OAAO,IAAI,CAAC,eAAe,CAAC,mBAAmB,EAAE,CAAC;IACpD,CAAC;IASK,AAAN,KAAK,CAAC,aAAa,CACF,UAAkB,EACL,QAAgB;QAE5C,OAAO,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;IACrE,CAAC;CACF,CAAA;AA3BY,gDAAkB;AAUvB;IAPL,IAAA,YAAG,EAAC,gBAAgB,CAAC;IACrB,IAAA,sBAAY,EAAC,EAAE,OAAO,EAAE,kCAAkC,EAAE,CAAC;IAC7D,IAAA,qBAAW,EAAC;QACX,MAAM,EAAE,GAAG;QACX,WAAW,EAAE,sCAAsC;QACnD,IAAI,EAAE,CAAC,2BAAQ,CAAC;KACjB,CAAC;;;wDAC2B,OAAO,oBAAP,OAAO;6DAEnC;AASK;IAPL,IAAA,YAAG,EAAC,kBAAkB,CAAC;IACvB,IAAA,sBAAY,EAAC,EAAE,OAAO,EAAE,sCAAsC,EAAE,CAAC;IACjE,IAAA,qBAAW,EAAC;QACX,MAAM,EAAE,GAAG;QACX,WAAW,EAAE,6CAA6C;QAC1D,IAAI,EAAE,CAAC,2BAAQ,CAAC;KACjB,CAAC;IAEC,WAAA,IAAA,cAAK,EAAC,MAAM,CAAC,CAAA;IACb,WAAA,IAAA,cAAK,EAAC,IAAI,EAAE,sBAAa,CAAC,CAAA;;;wDAC1B,OAAO,oBAAP,OAAO;uDAET;6BA1BU,kBAAkB;IAL9B,IAAA,iBAAO,EAAC,OAAO,CAAC;IAChB,IAAA,mBAAU,EAAC,OAAO,CAAC;IACnB,IAAA,kBAAS,EAAC,6BAAY,EAAE,wBAAU,CAAC;IACnC,IAAA,uBAAK,EAAC,wBAAQ,CAAC,KAAK,CAAC,CAAC,oCAAoC;;IAC1D,IAAA,uBAAa,GAAE;yDAEgC,mCAAe,oBAAf,mCAAe;GADlD,kBAAkB,CA2B9B","names":[],"sources":["C:\\Users\\g-ekoh\\Desktop\\StrellerMinds-Backend\\src\\audit\\controllers\\audit.log.controller.ts"],"sourcesContent":["/**\r\n * AuditLogController handles endpoints for retrieving audit logs.\r\n */\r\nimport {\r\n  Controller,\r\n  Get,\r\n  Param,\r\n  Query,\r\n  UseGuards,\r\n  ParseUUIDPipe,\r\n} from '@nestjs/common';\r\nimport {\r\n  ApiTags,\r\n  ApiOperation,\r\n  ApiResponse,\r\n  ApiBearerAuth,\r\n  ApiQuery,\r\n} from '@nestjs/swagger';\r\nimport { JwtAuthGuard } from '../../auth/guards/jwt-auth.guard';\r\nimport { RolesGuard } from '../../auth/guards/roles.guard';\r\nimport { Roles } from '../../auth/decorators/roles.decorator';\r\nimport { UserRole } from '../../users/enums/userRole.enum';\r\nimport { AuditLogService } from '../services/audit.log.service';\r\nimport { AuditLog } from '../entities/audit.log.entity';\r\n\r\n@ApiTags('audit')\r\n@Controller('audit')\r\n@UseGuards(JwtAuthGuard, RolesGuard)\r\n@Roles(UserRole.ADMIN) // Only admins can access audit logs\r\n@ApiBearerAuth()\r\nexport class AuditLogController {\r\n  constructor(private readonly auditLogService: AuditLogService) {}\r\n\r\n  @Get('user-deletions')\r\n  @ApiOperation({ summary: 'Get all user deletion audit logs' })\r\n  @ApiResponse({\r\n    status: 200,\r\n    description: 'Returns all user deletion audit logs',\r\n    type: [AuditLog],\r\n  })\r\n  async getUserDeletionLogs(): Promise<AuditLog[]> {\r\n    return this.auditLogService.getUserDeletionLogs();\r\n  }\r\n\r\n  @Get('entity/:type/:id')\r\n  @ApiOperation({ summary: 'Get audit logs for a specific entity' })\r\n  @ApiResponse({\r\n    status: 200,\r\n    description: 'Returns audit logs for the specified entity',\r\n    type: [AuditLog],\r\n  })\r\n  async getEntityLogs(\r\n    @Param('type') entityType: string,\r\n    @Param('id', ParseUUIDPipe) entityId: string,\r\n  ): Promise<AuditLog[]> {\r\n    return this.auditLogService.getLogsForEntity(entityType, entityId);\r\n  }\r\n}\r\n"],"version":3}