0e8b7446bae2a0f9423adf0d4451b724
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b, _c, _d;
Object.defineProperty(exports, "__esModule", { value: true });
exports.CredentialHistoryResponseDto = exports.CredentialDto = exports.BlockchainReferenceDto = void 0;
const swagger_1 = require("@nestjs/swagger");
/**
 * DTO representing a blockchain reference for a credential.
 */
class BlockchainReferenceDto {
}
exports.BlockchainReferenceDto = BlockchainReferenceDto;
__decorate([
    (0, swagger_1.ApiProperty)({ description: 'Blockchain transaction hash', example: '0x123...' }),
    __metadata("design:type", String)
], BlockchainReferenceDto.prototype, "txHash", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ description: 'Blockchain network name', example: 'stellar' }),
    __metadata("design:type", String)
], BlockchainReferenceDto.prototype, "network", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ description: 'Transaction timestamp', type: String, format: 'date-time', example: '2025-06-29T12:00:00Z' }),
    __metadata("design:type", typeof (_a = typeof Date !== "undefined" && Date) === "function" ? _a : Object)
], BlockchainReferenceDto.prototype, "timestamp", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ description: 'Block height', example: 123456 }),
    __metadata("design:type", Number)
], BlockchainReferenceDto.prototype, "blockHeight", void 0);
/**
 * DTO representing a credential in the history response.
 */
class CredentialDto {
}
exports.CredentialDto = CredentialDto;
__decorate([
    (0, swagger_1.ApiProperty)({ description: 'Credential ID', example: 'uuid-v4' }),
    __metadata("design:type", String)
], CredentialDto.prototype, "id", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ description: 'Credential type', example: 'course-completion' }),
    __metadata("design:type", String)
], CredentialDto.prototype, "type", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ description: 'Credential name', example: 'Blockchain Basics Certificate' }),
    __metadata("design:type", String)
], CredentialDto.prototype, "name", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ description: 'Date issued', type: String, format: 'date-time', example: '2025-06-29T12:00:00Z' }),
    __metadata("design:type", typeof (_b = typeof Date !== "undefined" && Date) === "function" ? _b : Object)
], CredentialDto.prototype, "issuedAt", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ description: 'Date expires', type: String, format: 'date-time', example: '2026-06-29T12:00:00Z' }),
    __metadata("design:type", typeof (_c = typeof Date !== "undefined" && Date) === "function" ? _c : Object)
], CredentialDto.prototype, "expiresAt", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ description: 'Issuer details' }),
    __metadata("design:type", Object)
], CredentialDto.prototype, "issuer", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ description: 'Credential status', example: 'active' }),
    __metadata("design:type", String)
], CredentialDto.prototype, "status", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ description: 'Credential verification status', example: true }),
    __metadata("design:type", Boolean)
], CredentialDto.prototype, "verificationStatus", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ description: 'Credential metadata', type: 'object', example: { score: 95 } }),
    __metadata("design:type", typeof (_d = typeof Record !== "undefined" && Record) === "function" ? _d : Object)
], CredentialDto.prototype, "metadata", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({ description: 'Blockchain reference' }),
    __metadata("design:type", BlockchainReferenceDto)
], CredentialDto.prototype, "blockchainReference", void 0);
/**
 * DTO for paginated credential history response.
 */
class CredentialHistoryResponseDto {
}
exports.CredentialHistoryResponseDto = CredentialHistoryResponseDto;
__decorate([
    (0, swagger_1.ApiProperty)({ type: [CredentialDto], description: 'List of credentials' }),
    __metadata("design:type", Array)
], CredentialHistoryResponseDto.prototype, "data", void 0);
__decorate([
    (0, swagger_1.ApiProperty)({
        description: 'Pagination metadata',
        example: {
            page: 1,
            limit: 10,
            totalItems: 100,
            totalPages: 10,
        },
    }),
    __metadata("design:type", Object)
], CredentialHistoryResponseDto.prototype, "meta", void 0);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiQzpcXFVzZXJzXFxnLWVrb2hcXERlc2t0b3BcXFN0cmVsbGVyTWluZHMtQmFja2VuZFxcc3JjXFxjcmVkZW50aWFsXFxkdG9cXGNyZWRlbnRpYWwtaGlzdG9yeS1yZXNwb25zZS5kdG8udHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUFBLDZDQUFtRTtBQUVuRTs7R0FFRztBQUNILE1BQWEsc0JBQXNCO0NBZ0JsQztBQWhCRCx3REFnQkM7QUFiQztJQURDLElBQUEscUJBQVcsRUFBQyxFQUFFLFdBQVcsRUFBRSw2QkFBNkIsRUFBRSxPQUFPLEVBQUUsVUFBVSxFQUFFLENBQUM7O3NEQUNsRTtBQUlmO0lBREMsSUFBQSxxQkFBVyxFQUFDLEVBQUUsV0FBVyxFQUFFLHlCQUF5QixFQUFFLE9BQU8sRUFBRSxTQUFTLEVBQUUsQ0FBQzs7dURBQzVEO0FBSWhCO0lBREMsSUFBQSxxQkFBVyxFQUFDLEVBQUUsV0FBVyxFQUFFLHVCQUF1QixFQUFFLElBQUksRUFBRSxNQUFNLEVBQUUsTUFBTSxFQUFFLFdBQVcsRUFBRSxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsQ0FBQztrREFDL0csSUFBSSxvQkFBSixJQUFJO3lEQUFDO0FBSWhCO0lBREMsSUFBQSxxQkFBVyxFQUFDLEVBQUUsV0FBVyxFQUFFLGNBQWMsRUFBRSxPQUFPLEVBQUUsTUFBTSxFQUFFLENBQUM7OzJEQUMxQztBQUd0Qjs7R0FFRztBQUNILE1BQWEsYUFBYTtDQWlDekI7QUFqQ0Qsc0NBaUNDO0FBL0JDO0lBREMsSUFBQSxxQkFBVyxFQUFDLEVBQUUsV0FBVyxFQUFFLGVBQWUsRUFBRSxPQUFPLEVBQUUsU0FBUyxFQUFFLENBQUM7O3lDQUN2RDtBQUdYO0lBREMsSUFBQSxxQkFBVyxFQUFDLEVBQUUsV0FBVyxFQUFFLGlCQUFpQixFQUFFLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxDQUFDOzsyQ0FDakU7QUFHYjtJQURDLElBQUEscUJBQVcsRUFBQyxFQUFFLFdBQVcsRUFBRSxpQkFBaUIsRUFBRSxPQUFPLEVBQUUsK0JBQStCLEVBQUUsQ0FBQzs7MkNBQzdFO0FBR2I7SUFEQyxJQUFBLHFCQUFXLEVBQUMsRUFBRSxXQUFXLEVBQUUsYUFBYSxFQUFFLElBQUksRUFBRSxNQUFNLEVBQUUsTUFBTSxFQUFFLFdBQVcsRUFBRSxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsQ0FBQztrREFDdEcsSUFBSSxvQkFBSixJQUFJOytDQUFDO0FBR2Y7SUFEQyxJQUFBLDZCQUFtQixFQUFDLEVBQUUsV0FBVyxFQUFFLGNBQWMsRUFBRSxJQUFJLEVBQUUsTUFBTSxFQUFFLE1BQU0sRUFBRSxXQUFXLEVBQUUsT0FBTyxFQUFFLHNCQUFzQixFQUFFLENBQUM7a0RBQzdHLElBQUksb0JBQUosSUFBSTtnREFBQztBQUdqQjtJQURDLElBQUEscUJBQVcsRUFBQyxFQUFFLFdBQVcsRUFBRSxnQkFBZ0IsRUFBRSxDQUFDOzs2Q0FJN0M7QUFHRjtJQURDLElBQUEscUJBQVcsRUFBQyxFQUFFLFdBQVcsRUFBRSxtQkFBbUIsRUFBRSxPQUFPLEVBQUUsUUFBUSxFQUFFLENBQUM7OzZDQUN0RDtBQUdmO0lBREMsSUFBQSxxQkFBVyxFQUFDLEVBQUUsV0FBVyxFQUFFLGdDQUFnQyxFQUFFLE9BQU8sRUFBRSxJQUFJLEVBQUUsQ0FBQzs7eURBQ2xEO0FBRzVCO0lBREMsSUFBQSxxQkFBVyxFQUFDLEVBQUUsV0FBVyxFQUFFLHFCQUFxQixFQUFFLElBQUksRUFBRSxRQUFRLEVBQUUsT0FBTyxFQUFFLEVBQUUsS0FBSyxFQUFFLEVBQUUsRUFBRSxFQUFFLENBQUM7a0RBQ2xGLE1BQU0sb0JBQU4sTUFBTTsrQ0FBYztBQUc5QjtJQURDLElBQUEscUJBQVcsRUFBQyxFQUFFLFdBQVcsRUFBRSxzQkFBc0IsRUFBRSxDQUFDOzhCQUNoQyxzQkFBc0I7MERBQUM7QUFHOUM7O0dBRUc7QUFDSCxNQUFhLDRCQUE0QjtDQW1CeEM7QUFuQkQsb0VBbUJDO0FBakJDO0lBREMsSUFBQSxxQkFBVyxFQUFDLEVBQUUsSUFBSSxFQUFFLENBQUMsYUFBYSxDQUFDLEVBQUUsV0FBVyxFQUFFLHFCQUFxQixFQUFFLENBQUM7OzBEQUNyRDtBQVd0QjtJQVRDLElBQUEscUJBQVcsRUFBQztRQUNYLFdBQVcsRUFBRSxxQkFBcUI7UUFDbEMsT0FBTyxFQUFFO1lBQ1AsSUFBSSxFQUFFLENBQUM7WUFDUCxLQUFLLEVBQUUsRUFBRTtZQUNULFVBQVUsRUFBRSxHQUFHO1lBQ2YsVUFBVSxFQUFFLEVBQUU7U0FDZjtLQUNGLENBQUM7OzBEQU1BIiwibmFtZXMiOltdLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcZy1la29oXFxEZXNrdG9wXFxTdHJlbGxlck1pbmRzLUJhY2tlbmRcXHNyY1xcY3JlZGVudGlhbFxcZHRvXFxjcmVkZW50aWFsLWhpc3RvcnktcmVzcG9uc2UuZHRvLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFwaVByb3BlcnR5LCBBcGlQcm9wZXJ0eU9wdGlvbmFsIH0gZnJvbSAnQG5lc3Rqcy9zd2FnZ2VyJztcclxuXHJcbi8qKlxyXG4gKiBEVE8gcmVwcmVzZW50aW5nIGEgYmxvY2tjaGFpbiByZWZlcmVuY2UgZm9yIGEgY3JlZGVudGlhbC5cclxuICovXHJcbmV4cG9ydCBjbGFzcyBCbG9ja2NoYWluUmVmZXJlbmNlRHRvIHtcclxuICAvKiogQmxvY2tjaGFpbiB0cmFuc2FjdGlvbiBoYXNoICovXHJcbiAgQEFwaVByb3BlcnR5KHsgZGVzY3JpcHRpb246ICdCbG9ja2NoYWluIHRyYW5zYWN0aW9uIGhhc2gnLCBleGFtcGxlOiAnMHgxMjMuLi4nIH0pXHJcbiAgdHhIYXNoOiBzdHJpbmc7XHJcblxyXG4gIC8qKiBCbG9ja2NoYWluIG5ldHdvcmsgbmFtZSAqL1xyXG4gIEBBcGlQcm9wZXJ0eSh7IGRlc2NyaXB0aW9uOiAnQmxvY2tjaGFpbiBuZXR3b3JrIG5hbWUnLCBleGFtcGxlOiAnc3RlbGxhcicgfSlcclxuICBuZXR3b3JrOiBzdHJpbmc7XHJcblxyXG4gIC8qKiBUaW1lc3RhbXAgb2YgdGhlIHRyYW5zYWN0aW9uICovXHJcbiAgQEFwaVByb3BlcnR5KHsgZGVzY3JpcHRpb246ICdUcmFuc2FjdGlvbiB0aW1lc3RhbXAnLCB0eXBlOiBTdHJpbmcsIGZvcm1hdDogJ2RhdGUtdGltZScsIGV4YW1wbGU6ICcyMDI1LTA2LTI5VDEyOjAwOjAwWicgfSlcclxuICB0aW1lc3RhbXA6IERhdGU7XHJcblxyXG4gIC8qKiBCbG9jayBoZWlnaHQgb2YgdGhlIHRyYW5zYWN0aW9uICovXHJcbiAgQEFwaVByb3BlcnR5KHsgZGVzY3JpcHRpb246ICdCbG9jayBoZWlnaHQnLCBleGFtcGxlOiAxMjM0NTYgfSlcclxuICBibG9ja0hlaWdodDogbnVtYmVyO1xyXG59XHJcblxyXG4vKipcclxuICogRFRPIHJlcHJlc2VudGluZyBhIGNyZWRlbnRpYWwgaW4gdGhlIGhpc3RvcnkgcmVzcG9uc2UuXHJcbiAqL1xyXG5leHBvcnQgY2xhc3MgQ3JlZGVudGlhbER0byB7XHJcbiAgQEFwaVByb3BlcnR5KHsgZGVzY3JpcHRpb246ICdDcmVkZW50aWFsIElEJywgZXhhbXBsZTogJ3V1aWQtdjQnIH0pXHJcbiAgaWQ6IHN0cmluZztcclxuXHJcbiAgQEFwaVByb3BlcnR5KHsgZGVzY3JpcHRpb246ICdDcmVkZW50aWFsIHR5cGUnLCBleGFtcGxlOiAnY291cnNlLWNvbXBsZXRpb24nIH0pXHJcbiAgdHlwZTogc3RyaW5nO1xyXG5cclxuICBAQXBpUHJvcGVydHkoeyBkZXNjcmlwdGlvbjogJ0NyZWRlbnRpYWwgbmFtZScsIGV4YW1wbGU6ICdCbG9ja2NoYWluIEJhc2ljcyBDZXJ0aWZpY2F0ZScgfSlcclxuICBuYW1lOiBzdHJpbmc7XHJcblxyXG4gIEBBcGlQcm9wZXJ0eSh7IGRlc2NyaXB0aW9uOiAnRGF0ZSBpc3N1ZWQnLCB0eXBlOiBTdHJpbmcsIGZvcm1hdDogJ2RhdGUtdGltZScsIGV4YW1wbGU6ICcyMDI1LTA2LTI5VDEyOjAwOjAwWicgfSlcclxuICBpc3N1ZWRBdDogRGF0ZTtcclxuXHJcbiAgQEFwaVByb3BlcnR5T3B0aW9uYWwoeyBkZXNjcmlwdGlvbjogJ0RhdGUgZXhwaXJlcycsIHR5cGU6IFN0cmluZywgZm9ybWF0OiAnZGF0ZS10aW1lJywgZXhhbXBsZTogJzIwMjYtMDYtMjlUMTI6MDA6MDBaJyB9KVxyXG4gIGV4cGlyZXNBdD86IERhdGU7XHJcblxyXG4gIEBBcGlQcm9wZXJ0eSh7IGRlc2NyaXB0aW9uOiAnSXNzdWVyIGRldGFpbHMnIH0pXHJcbiAgaXNzdWVyOiB7XHJcbiAgICBpZDogc3RyaW5nO1xyXG4gICAgbmFtZTogc3RyaW5nO1xyXG4gIH07XHJcblxyXG4gIEBBcGlQcm9wZXJ0eSh7IGRlc2NyaXB0aW9uOiAnQ3JlZGVudGlhbCBzdGF0dXMnLCBleGFtcGxlOiAnYWN0aXZlJyB9KVxyXG4gIHN0YXR1czogc3RyaW5nO1xyXG5cclxuICBAQXBpUHJvcGVydHkoeyBkZXNjcmlwdGlvbjogJ0NyZWRlbnRpYWwgdmVyaWZpY2F0aW9uIHN0YXR1cycsIGV4YW1wbGU6IHRydWUgfSlcclxuICB2ZXJpZmljYXRpb25TdGF0dXM6IGJvb2xlYW47XHJcblxyXG4gIEBBcGlQcm9wZXJ0eSh7IGRlc2NyaXB0aW9uOiAnQ3JlZGVudGlhbCBtZXRhZGF0YScsIHR5cGU6ICdvYmplY3QnLCBleGFtcGxlOiB7IHNjb3JlOiA5NSB9IH0pXHJcbiAgbWV0YWRhdGE6IFJlY29yZDxzdHJpbmcsIGFueT47XHJcblxyXG4gIEBBcGlQcm9wZXJ0eSh7IGRlc2NyaXB0aW9uOiAnQmxvY2tjaGFpbiByZWZlcmVuY2UnIH0pXHJcbiAgYmxvY2tjaGFpblJlZmVyZW5jZTogQmxvY2tjaGFpblJlZmVyZW5jZUR0bztcclxufVxyXG5cclxuLyoqXHJcbiAqIERUTyBmb3IgcGFnaW5hdGVkIGNyZWRlbnRpYWwgaGlzdG9yeSByZXNwb25zZS5cclxuICovXHJcbmV4cG9ydCBjbGFzcyBDcmVkZW50aWFsSGlzdG9yeVJlc3BvbnNlRHRvIHtcclxuICBAQXBpUHJvcGVydHkoeyB0eXBlOiBbQ3JlZGVudGlhbER0b10sIGRlc2NyaXB0aW9uOiAnTGlzdCBvZiBjcmVkZW50aWFscycgfSlcclxuICBkYXRhOiBDcmVkZW50aWFsRHRvW107XHJcblxyXG4gIEBBcGlQcm9wZXJ0eSh7XHJcbiAgICBkZXNjcmlwdGlvbjogJ1BhZ2luYXRpb24gbWV0YWRhdGEnLFxyXG4gICAgZXhhbXBsZToge1xyXG4gICAgICBwYWdlOiAxLFxyXG4gICAgICBsaW1pdDogMTAsXHJcbiAgICAgIHRvdGFsSXRlbXM6IDEwMCxcclxuICAgICAgdG90YWxQYWdlczogMTAsXHJcbiAgICB9LFxyXG4gIH0pXHJcbiAgbWV0YToge1xyXG4gICAgcGFnZTogbnVtYmVyO1xyXG4gICAgbGltaXQ6IG51bWJlcjtcclxuICAgIHRvdGFsSXRlbXM6IG51bWJlcjtcclxuICAgIHRvdGFsUGFnZXM6IG51bWJlcjtcclxuICB9O1xyXG59XHJcbiJdLCJ2ZXJzaW9uIjozfQ==