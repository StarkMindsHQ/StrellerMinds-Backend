{"file":"C:\\Users\\g-ekoh\\Desktop\\StrellerMinds-Backend\\src\\search\\search.controller.ts","mappings":"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","names":[],"sources":["C:\\Users\\g-ekoh\\Desktop\\StrellerMinds-Backend\\src\\search\\search.controller.ts"],"sourcesContent":["import { Controller, Get, Post, Delete, UseGuards, UseInterceptors, BadRequestException } from \"@nestjs/common\"\r\nimport { ApiTags, ApiOperation, ApiResponse, ApiBearerAuth, ApiQuery } from \"@nestjs/swagger\"\r\nimport type { Request } from \"express\"\r\nimport { JwtAuthGuard } from \"../auth/guards/jwt-auth.guard\"\r\nimport { OptionalJwtAuthGuard } from \"../auth/guards/optional-jwt-auth.guard\"\r\nimport { RolesGuard } from \"../auth/guards/roles.guard\"\r\nimport { Roles } from \"../auth/decorators/roles.decorator\"\r\nimport { SearchAnalyticsInterceptor } from \"./interceptors/search-analytics.interceptor\"\r\nimport { CacheInterceptor } from \"@nestjs/cache-manager\"\r\nimport type { SearchService } from \"./search.service\"\r\nimport type { SearchDto } from \"./dto/search.dto\"\r\nimport type { AdvancedFilterDto } from \"./dto/advanced-filter.dto\"\r\nimport type { SearchSuggestionDto } from \"./dto/search-suggestion.dto\"\r\nimport type { FacetedSearchDto } from \"./dto/faceted-search.dto\"\r\nimport type { SemanticSearchDto } from \"./dto/semantic-search.dto\"\r\nimport type { SearchExportDto } from \"./dto/search-export.dto\"\r\nimport type { SearchRecommendationDto } from \"./dto/search-recommendation.dto\"\r\nimport type { SaveFilterDto } from \"./dto/save-filter.dto\"\r\nimport type { SearchResult, SearchSuggestion, SearchAnalyticsResult } from \"./interfaces/search.interface\"\r\n\r\n@ApiTags(\"Search\")\r\n@Controller(\"search\")\r\n@UseInterceptors(SearchAnalyticsInterceptor)\r\nexport class SearchController {\r\n  constructor(private readonly searchService: SearchService) {}\r\n\r\n  @Post()\r\n  @UseGuards(OptionalJwtAuthGuard)\r\n  @UseInterceptors(CacheInterceptor)\r\n  @ApiOperation({ summary: \"Perform full-text search\" })\r\n  @ApiResponse({ status: 200, description: \"Search results returned successfully\" })\r\n  @ApiResponse({ status: 400, description: \"Invalid search parameters\" })\r\n  async search(searchDto: SearchDto, req: Request): Promise<SearchResult> {\r\n    const userId = req.user?.[\"id\"]\r\n    return this.searchService.search(searchDto, userId)\r\n  }\r\n\r\n  @Post(\"advanced\")\r\n  @UseGuards(OptionalJwtAuthGuard)\r\n  @UseInterceptors(CacheInterceptor)\r\n  @ApiOperation({ summary: \"Perform advanced search with filters\" })\r\n  @ApiResponse({ status: 200, description: \"Advanced search results returned successfully\" })\r\n  async advancedSearch(filterDto: AdvancedFilterDto, req: Request): Promise<SearchResult> {\r\n    const userId = req.user?.[\"id\"]\r\n    return this.searchService.advancedSearch(filterDto, userId)\r\n  }\r\n\r\n  @Post(\"faceted\")\r\n  @UseGuards(OptionalJwtAuthGuard)\r\n  @ApiOperation({ summary: \"Perform faceted search\" })\r\n  @ApiResponse({ status: 200, description: \"Faceted search results returned successfully\" })\r\n  async facetedSearch(facetDto: FacetedSearchDto, req: Request) {\r\n    const userId = req.user?.[\"id\"]\r\n    return this.searchService.facetedSearch(facetDto, userId)\r\n  }\r\n\r\n  @Post(\"semantic\")\r\n  @UseGuards(OptionalJwtAuthGuard)\r\n  @ApiOperation({ summary: \"Perform semantic search using AI embeddings\" })\r\n  @ApiResponse({ status: 200, description: \"Semantic search results returned successfully\" })\r\n  async semanticSearch(semanticDto: SemanticSearchDto, req: Request): Promise<SearchResult> {\r\n    const userId = req.user?.[\"id\"]\r\n    return this.searchService.semanticSearch(semanticDto, userId)\r\n  }\r\n\r\n  @Get(\"suggestions\")\r\n  @UseInterceptors(CacheInterceptor)\r\n  @ApiOperation({ summary: \"Get search suggestions\" })\r\n  @ApiResponse({ status: 200, description: \"Search suggestions returned successfully\" })\r\n  async getSuggestions(suggestionDto: SearchSuggestionDto): Promise<{ suggestions: SearchSuggestion[] }> {\r\n    return this.searchService.getSuggestions(suggestionDto)\r\n  }\r\n\r\n  @Post(\"recommendations\")\r\n  @UseGuards(JwtAuthGuard)\r\n  @ApiOperation({ summary: \"Get personalized course recommendations\" })\r\n  @ApiResponse({ status: 200, description: \"Recommendations returned successfully\" })\r\n  @ApiBearerAuth()\r\n  async getRecommendations(recommendationDto: SearchRecommendationDto, req: Request): Promise<SearchResult> {\r\n    const userId = req.user[\"id\"]\r\n    return this.searchService.getRecommendations(recommendationDto, userId)\r\n  }\r\n\r\n  @Post(\"export\")\r\n  @UseGuards(JwtAuthGuard)\r\n  @ApiOperation({ summary: \"Export search results\" })\r\n  @ApiResponse({ status: 200, description: \"Export initiated successfully\" })\r\n  @ApiBearerAuth()\r\n  async exportSearchResults(exportDto: SearchExportDto, req: Request): Promise<{ downloadUrl: string }> {\r\n    const userId = req.user[\"id\"]\r\n    return this.searchService.exportSearchResults(exportDto, userId)\r\n  }\r\n\r\n  @Post(\"filters\")\r\n  @UseGuards(JwtAuthGuard)\r\n  @ApiOperation({ summary: \"Save search filter\" })\r\n  @ApiResponse({ status: 201, description: \"Filter saved successfully\" })\r\n  @ApiBearerAuth()\r\n  async saveSearchFilter(saveFilterDto: SaveFilterDto, req: Request) {\r\n    const userId = req.user[\"id\"]\r\n    return this.searchService.saveSearchFilter(userId, saveFilterDto.name, saveFilterDto.filterData)\r\n  }\r\n\r\n  @Get(\"filters\")\r\n  @UseGuards(JwtAuthGuard)\r\n  @ApiOperation({ summary: \"Get user saved filters\" })\r\n  @ApiResponse({ status: 200, description: \"Filters returned successfully\" })\r\n  @ApiBearerAuth()\r\n  async getUserSearchFilters(req: Request) {\r\n    const userId = req.user[\"id\"]\r\n    return this.searchService.getUserSearchFilters(userId)\r\n  }\r\n\r\n  @Delete(\"filters/:filterId\")\r\n  @UseGuards(JwtAuthGuard)\r\n  @ApiOperation({ summary: \"Delete saved filter\" })\r\n  @ApiResponse({ status: 200, description: \"Filter deleted successfully\" })\r\n  @ApiBearerAuth()\r\n  async deleteSearchFilter(filterId: string, req: Request) {\r\n    // Implementation would be added to service\r\n    return { success: true }\r\n  }\r\n\r\n  @Get(\"analytics\")\r\n  @UseGuards(JwtAuthGuard, RolesGuard)\r\n  @Roles(\"admin\", \"instructor\")\r\n  @ApiOperation({ summary: \"Get search analytics\" })\r\n  @ApiResponse({ status: 200, description: \"Analytics returned successfully\" })\r\n  @ApiBearerAuth()\r\n  @ApiQuery({ name: \"startDate\", required: false, type: String })\r\n  @ApiQuery({ name: \"endDate\", required: false, type: String })\r\n  @ApiQuery({ name: \"userId\", required: false, type: String })\r\n  async getSearchAnalytics(\r\n    req: Request,\r\n    startDate?: string,\r\n    endDate?: string,\r\n    userId?: string,\r\n  ): Promise<SearchAnalyticsResult> {\r\n    const params: any = {}\r\n\r\n    if (startDate) {\r\n      const parsedStartDate = new Date(startDate)\r\n      if (isNaN(parsedStartDate.getTime())) {\r\n        throw new BadRequestException(\"Invalid start date format\")\r\n      }\r\n      params.startDate = parsedStartDate\r\n    }\r\n\r\n    if (endDate) {\r\n      const parsedEndDate = new Date(endDate)\r\n      if (isNaN(parsedEndDate.getTime())) {\r\n        throw new BadRequestException(\"Invalid end date format\")\r\n      }\r\n      params.endDate = parsedEndDate\r\n    }\r\n\r\n    if (userId) {\r\n      params.userId = userId\r\n    }\r\n\r\n    return this.searchService.getSearchAnalytics(params)\r\n  }\r\n\r\n  @Get(\"popular-terms\")\r\n  @UseInterceptors(CacheInterceptor)\r\n  @ApiOperation({ summary: \"Get popular search terms\" })\r\n  @ApiResponse({ status: 200, description: \"Popular terms returned successfully\" })\r\n  async getPopularSearchTerms(limit?: number) {\r\n    return this.searchService.getPopularSearchTerms(limit)\r\n  }\r\n\r\n  @Post(\"track-click\")\r\n  @UseGuards(JwtAuthGuard)\r\n  @ApiOperation({ summary: \"Track search result click\" })\r\n  @ApiResponse({ status: 200, description: \"Click tracked successfully\" })\r\n  @ApiBearerAuth()\r\n  async trackSearchClick(searchId: string, courseId: string, req: Request) {\r\n    await this.searchService.trackSearchClick(searchId, courseId)\r\n    return { success: true }\r\n  }\r\n\r\n  @Get(\"trending\")\r\n  @UseInterceptors(CacheInterceptor)\r\n  @ApiOperation({ summary: \"Get trending search topics\" })\r\n  @ApiResponse({ status: 200, description: \"Trending topics returned successfully\" })\r\n  async getTrendingTopics() {\r\n    // Implementation would analyze recent search patterns\r\n    return { trending: [] }\r\n  }\r\n\r\n  @Get(\"autocomplete/:query\")\r\n  @UseInterceptors(CacheInterceptor)\r\n  @ApiOperation({ summary: \"Get autocomplete suggestions\" })\r\n  @ApiResponse({ status: 200, description: \"Autocomplete suggestions returned successfully\" })\r\n  async getAutocomplete(query: string) {\r\n    return this.searchService.getSuggestions({ query, limit: 10 })\r\n  }\r\n\r\n  @Post(\"feedback\")\r\n  @UseGuards(JwtAuthGuard)\r\n  @ApiOperation({ summary: \"Submit search feedback\" })\r\n  @ApiResponse({ status: 200, description: \"Feedback submitted successfully\" })\r\n  @ApiBearerAuth()\r\n  async submitSearchFeedback(feedbackDto: { searchId: string; rating: number; comment?: string }, req: Request) {\r\n    // Implementation would save feedback for search improvement\r\n    return { success: true }\r\n  }\r\n\r\n  @Get(\"history\")\r\n  @UseGuards(JwtAuthGuard)\r\n  @ApiOperation({ summary: \"Get user search history\" })\r\n  @ApiResponse({ status: 200, description: \"Search history returned successfully\" })\r\n  @ApiBearerAuth()\r\n  async getSearchHistory(req: Request) {\r\n    const userId = req.user[\"id\"]\r\n    return this.searchService.getSearchAnalytics({ userId, limit: 50 })\r\n  }\r\n\r\n  @Delete(\"history\")\r\n  @UseGuards(JwtAuthGuard)\r\n  @ApiOperation({ summary: \"Clear user search history\" })\r\n  @ApiResponse({ status: 200, description: \"Search history cleared successfully\" })\r\n  @ApiBearerAuth()\r\n  async clearSearchHistory(req: Request) {\r\n    // Implementation would clear user's search history\r\n    return { success: true }\r\n  }\r\n}\r\n"],"version":3}