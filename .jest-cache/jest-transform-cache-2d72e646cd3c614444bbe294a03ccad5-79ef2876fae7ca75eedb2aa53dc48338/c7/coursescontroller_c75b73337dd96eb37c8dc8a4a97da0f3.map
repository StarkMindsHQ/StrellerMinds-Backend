{"file":"C:\\Users\\g-ekoh\\Desktop\\StrellerMinds-Backend\\src\\courses\\courses.controller.ts","mappings":"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","names":[],"sources":["C:\\Users\\g-ekoh\\Desktop\\StrellerMinds-Backend\\src\\courses\\courses.controller.ts"],"sourcesContent":["/**\r\n * CourseController handles course CRUD operations.\r\n */\r\nimport {\r\n    Controller,\r\n    Get,\r\n    Post,\r\n    Body,\r\n    Param,\r\n    Delete,\r\n    Patch,\r\n    ParseUUIDPipe,\r\n  } from '@nestjs/common';\r\nimport { ApiTags, ApiBearerAuth, ApiOperation, ApiResponse, ApiBody, ApiParam } from '@nestjs/swagger';\r\nimport { CourseService } from './courses.service';\r\nimport { CreateCourseDto } from './dtos/create.course.dto';\r\nimport { UpdateCourseDto } from './dtos/update.course.dto';\r\n\r\n@ApiTags('Courses')\r\n@ApiBearerAuth()\r\n@Controller('courses')\r\nexport class CourseController {\r\n    constructor(private readonly courseService: CourseService) {}\r\n  \r\n    @ApiOperation({ summary: 'Create a new course' })\r\n    @ApiBody({ type: CreateCourseDto })\r\n    @ApiResponse({ status: 201, description: 'Course created successfully.' })\r\n    @Post()\r\n    public async create(@Body() createCourseDto: CreateCourseDto) {\r\n      return await this.courseService.create(createCourseDto);\r\n    }\r\n  \r\n    @ApiOperation({ summary: 'Get all courses' })\r\n    @ApiResponse({ status: 200, description: 'List of courses.' })\r\n    @Get()\r\n    public async findAll() {\r\n      return await this.courseService.findAll();\r\n    }\r\n  \r\n    @ApiOperation({ summary: 'Get course by ID' })\r\n    @ApiParam({ name: 'id', type: 'string', description: 'Course ID' })\r\n    @ApiResponse({ status: 200, description: 'Course found.' })\r\n    @Get(':id')\r\n    public async findOne(@Param('id', ParseUUIDPipe) id: string) {\r\n      return await this.courseService.findOne(id);\r\n    }\r\n  \r\n    @ApiOperation({ summary: 'Update course' })\r\n    @ApiParam({ name: 'id', type: 'string', description: 'Course ID' })\r\n    @ApiBody({ type: UpdateCourseDto })\r\n    @ApiResponse({ status: 200, description: 'Course updated.' })\r\n    @Patch(':id')\r\n    public async update(@Param('id', ParseUUIDPipe) id: string, @Body() updateCourseDto: UpdateCourseDto) {\r\n      return await this.courseService.update(id, updateCourseDto);\r\n    }\r\n  \r\n    @ApiOperation({ summary: 'Delete course' })\r\n    @ApiParam({ name: 'id', type: 'string', description: 'Course ID' })\r\n    @ApiResponse({ status: 200, description: 'Course deleted.' })\r\n    @Delete(':id')\r\n    public async delete(@Param('id', ParseUUIDPipe) id: string) {\r\n      return await this.courseService.delete(id);\r\n    }\r\n  }\r\n"],"version":3}