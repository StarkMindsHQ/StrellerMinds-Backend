{"file":"C:\\Users\\g-ekoh\\Desktop\\StrellerMinds-Backend\\src\\course\\course.controller.spec.ts","mappings":"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","names":[],"sources":["C:\\Users\\g-ekoh\\Desktop\\StrellerMinds-Backend\\src\\course\\course.controller.spec.ts"],"sourcesContent":["import { Test, TestingModule } from '@nestjs/testing';\r\nimport { CoursesController } from './courses.controller';\r\nimport { CourseService } from './course.service';\r\nimport { JwtAuthGuard } from 'src/auth/guards/jwt-auth.guard';\r\nimport { RolesGuard } from 'src/auth/guards/roles.guard';\r\n\r\nconst mockCourse = {\r\n  id: '1',\r\n  title: 'Test Course',\r\n  description: 'Description',\r\n  difficulty: 'Beginner',\r\n  modules: [],\r\n};\r\n\r\ndescribe('CoursesController', () => {\r\n  let controller: CoursesController;\r\n  let service: CourseService;\r\n\r\n  const mockCourseService = {\r\n    create: jest.fn().mockResolvedValue(mockCourse),\r\n    findAll: jest.fn().mockResolvedValue([mockCourse]),\r\n    findOne: jest.fn().mockResolvedValue(mockCourse),\r\n    update: jest.fn().mockResolvedValue(mockCourse),\r\n    remove: jest.fn().mockResolvedValue({ affected: 1 }),\r\n  };\r\n\r\n  beforeEach(async () => {\r\n    const module: TestingModule = await Test.createTestingModule({\r\n      controllers: [CoursesController],\r\n      providers: [{ provide: CourseService, useValue: mockCourseService }],\r\n    })\r\n      .overrideGuard(JwtAuthGuard)\r\n      .useValue({ canActivate: () => true })\r\n      .overrideGuard(RolesGuard)\r\n      .useValue({ canActivate: () => true })\r\n      .compile();\r\n\r\n    controller = module.get<CoursesController>(CoursesController);\r\n    service = module.get<CourseService>(CourseService);\r\n  });\r\n\r\n  it('should be defined', () => {\r\n    expect(controller).toBeDefined();\r\n  });\r\n\r\n  it('should create a course', async () => {\r\n    const dto = { ...mockCourse };\r\n    const result = await controller.create(dto);\r\n    expect(service.create).toHaveBeenCalledWith(dto);\r\n    expect(result).toEqual(mockCourse);\r\n  });\r\n\r\n  it('should return all courses', async () => {\r\n    const result = await controller.findAll();\r\n    expect(service.findAll).toHaveBeenCalled();\r\n    expect(result).toEqual([mockCourse]);\r\n  });\r\n\r\n  it('should return one course by id', async () => {\r\n    const result = await controller.findOne('1');\r\n    expect(service.findOne).toHaveBeenCalledWith('1');\r\n    expect(result).toEqual(mockCourse);\r\n  });\r\n\r\n  it('should update a course', async () => {\r\n    const dto = { title: 'Updated Title' };\r\n    const result = await controller.update('1', dto);\r\n    expect(service.update).toHaveBeenCalledWith('1', dto);\r\n    expect(result).toEqual(mockCourse);\r\n  });\r\n\r\n  it('should delete a course', async () => {\r\n    const result = await controller.remove('1');\r\n    expect(service.remove).toHaveBeenCalledWith('1');\r\n    expect(result).toEqual({ affected: 1 });\r\n  });\r\n});\r\n"],"version":3}