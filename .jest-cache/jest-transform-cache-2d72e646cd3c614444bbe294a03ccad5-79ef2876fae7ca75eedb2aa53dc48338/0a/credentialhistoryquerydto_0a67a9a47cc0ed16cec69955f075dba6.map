{"file":"C:\\Users\\g-ekoh\\Desktop\\StrellerMinds-Backend\\src\\credential\\dto\\credential-history-query.dto.ts","mappings":";;;;;;;;;;;;;AAAA,qDAAmF;AACnF,yDAAyC;AACzC,6CAAmE;AAEnE;;GAEG;AACH,IAAY,gBAKX;AALD,WAAY,gBAAgB;IAC1B,yCAAqB,CAAA;IACrB,6CAAyB,CAAA;IACzB,uCAAmB,CAAA;IACnB,+BAAW,CAAA;AACb,CAAC,EALW,gBAAgB,gCAAhB,gBAAgB,QAK3B;AAED;;GAEG;AACH,MAAa,yBAAyB;IAAtC;QACE,8CAA8C;QAM9C,SAAI,GAAY,CAAC,CAAC;QAElB,6CAA6C;QAM7C,UAAK,GAAY,EAAE,CAAC;QAsBpB,+BAA+B;QAI/B,WAAM,GAAsB,gBAAgB,CAAC,GAAG,CAAC;IACnD,CAAC;CAAA;AA1CD,8DA0CC;AAnCC;IALC,IAAA,6BAAmB,EAAC,EAAE,WAAW,EAAE,4BAA4B,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC;IAC1F,IAAA,4BAAU,GAAE;IACZ,IAAA,uBAAK,GAAE;IACP,IAAA,qBAAG,EAAC,CAAC,CAAC;IACN,IAAA,wBAAI,EAAC,GAAG,EAAE,CAAC,MAAM,CAAC;;uDACD;AAQlB;IALC,IAAA,6BAAmB,EAAC,EAAE,WAAW,EAAE,0BAA0B,EAAE,OAAO,EAAE,EAAE,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC;IACzF,IAAA,4BAAU,GAAE;IACZ,IAAA,uBAAK,GAAE;IACP,IAAA,qBAAG,EAAC,CAAC,CAAC;IACN,IAAA,wBAAI,EAAC,GAAG,EAAE,CAAC,MAAM,CAAC;;wDACC;AAMpB;IAHC,IAAA,6BAAmB,EAAC,EAAE,WAAW,EAAE,wBAAwB,EAAE,CAAC;IAC9D,IAAA,4BAAU,GAAE;IACZ,IAAA,0BAAQ,GAAE;;iEACa;AAOxB;IAJC,IAAA,6BAAmB,EAAC,EAAE,WAAW,EAAE,mCAAmC,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,WAAW,EAAE,CAAC;IAC5G,IAAA,4BAAU,GAAE;IACZ,IAAA,wBAAM,GAAE;IACR,IAAA,wBAAI,EAAC,GAAG,EAAE,CAAC,IAAI,CAAC;kDACL,IAAI,oBAAJ,IAAI;4DAAC;AAOjB;IAJC,IAAA,6BAAmB,EAAC,EAAE,WAAW,EAAE,iCAAiC,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,WAAW,EAAE,CAAC;IAC1G,IAAA,4BAAU,GAAE;IACZ,IAAA,wBAAM,GAAE;IACR,IAAA,wBAAI,EAAC,GAAG,EAAE,CAAC,IAAI,CAAC;kDACP,IAAI,oBAAJ,IAAI;0DAAC;AAMf;IAHC,IAAA,6BAAmB,EAAC,EAAE,IAAI,EAAE,gBAAgB,EAAE,WAAW,EAAE,0BAA0B,EAAE,OAAO,EAAE,gBAAgB,CAAC,GAAG,EAAE,CAAC;IACvH,IAAA,4BAAU,GAAE;IACZ,IAAA,wBAAM,EAAC,gBAAgB,CAAC;;yDACwB","names":[],"sources":["C:\\Users\\g-ekoh\\Desktop\\StrellerMinds-Backend\\src\\credential\\dto\\credential-history-query.dto.ts"],"sourcesContent":["import { IsOptional, IsInt, Min, IsString, IsEnum, IsDate } from 'class-validator';\r\nimport { Type } from 'class-transformer';\r\nimport { ApiPropertyOptional, ApiProperty } from '@nestjs/swagger';\r\n\r\n/**\r\n * Enum for credential status filter in history queries.\r\n */\r\nexport enum CredentialStatus {\r\n  VERIFIED = 'VERIFIED',\r\n  UNVERIFIED = 'UNVERIFIED',\r\n  REVOKED = 'REVOKED',\r\n  ALL = 'ALL',\r\n}\r\n\r\n/**\r\n * DTO for querying credential history with filters and pagination.\r\n */\r\nexport class CredentialHistoryQueryDto {\r\n  /** Page number for pagination (default: 1) */\r\n  @ApiPropertyOptional({ description: 'Page number for pagination', default: 1, minimum: 1 })\r\n  @IsOptional()\r\n  @IsInt()\r\n  @Min(1)\r\n  @Type(() => Number)\r\n  page?: number = 1;\r\n\r\n  /** Number of items per page (default: 10) */\r\n  @ApiPropertyOptional({ description: 'Number of items per page', default: 10, minimum: 1 })\r\n  @IsOptional()\r\n  @IsInt()\r\n  @Min(1)\r\n  @Type(() => Number)\r\n  limit?: number = 10;\r\n\r\n  /** Credential type filter */\r\n  @ApiPropertyOptional({ description: 'Credential type filter' })\r\n  @IsOptional()\r\n  @IsString()\r\n  credentialType?: string;\r\n\r\n  /** Start date for issued credentials (ISO8601) */\r\n  @ApiPropertyOptional({ description: 'Start date for issued credentials', type: String, format: 'date-time' })\r\n  @IsOptional()\r\n  @IsDate()\r\n  @Type(() => Date)\r\n  startDate?: Date;\r\n\r\n  /** End date for issued credentials (ISO8601) */\r\n  @ApiPropertyOptional({ description: 'End date for issued credentials', type: String, format: 'date-time' })\r\n  @IsOptional()\r\n  @IsDate()\r\n  @Type(() => Date)\r\n  endDate?: Date;\r\n\r\n  /** Credential status filter */\r\n  @ApiPropertyOptional({ enum: CredentialStatus, description: 'Credential status filter', default: CredentialStatus.ALL })\r\n  @IsOptional()\r\n  @IsEnum(CredentialStatus)\r\n  status?: CredentialStatus = CredentialStatus.ALL;\r\n}"],"version":3}