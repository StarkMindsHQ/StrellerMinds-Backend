187b570c319e915542809d9720418176
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a, _b;
Object.defineProperty(exports, "__esModule", { value: true });
exports.CredentialHistoryQueryDto = exports.CredentialStatus = void 0;
const class_validator_1 = require("class-validator");
const class_transformer_1 = require("class-transformer");
const swagger_1 = require("@nestjs/swagger");
/**
 * Enum for credential status filter in history queries.
 */
var CredentialStatus;
(function (CredentialStatus) {
    CredentialStatus["VERIFIED"] = "VERIFIED";
    CredentialStatus["UNVERIFIED"] = "UNVERIFIED";
    CredentialStatus["REVOKED"] = "REVOKED";
    CredentialStatus["ALL"] = "ALL";
})(CredentialStatus || (exports.CredentialStatus = CredentialStatus = {}));
/**
 * DTO for querying credential history with filters and pagination.
 */
class CredentialHistoryQueryDto {
    constructor() {
        /** Page number for pagination (default: 1) */
        this.page = 1;
        /** Number of items per page (default: 10) */
        this.limit = 10;
        /** Credential status filter */
        this.status = CredentialStatus.ALL;
    }
}
exports.CredentialHistoryQueryDto = CredentialHistoryQueryDto;
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ description: 'Page number for pagination', default: 1, minimum: 1 }),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsInt)(),
    (0, class_validator_1.Min)(1),
    (0, class_transformer_1.Type)(() => Number),
    __metadata("design:type", Number)
], CredentialHistoryQueryDto.prototype, "page", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ description: 'Number of items per page', default: 10, minimum: 1 }),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsInt)(),
    (0, class_validator_1.Min)(1),
    (0, class_transformer_1.Type)(() => Number),
    __metadata("design:type", Number)
], CredentialHistoryQueryDto.prototype, "limit", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ description: 'Credential type filter' }),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], CredentialHistoryQueryDto.prototype, "credentialType", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ description: 'Start date for issued credentials', type: String, format: 'date-time' }),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsDate)(),
    (0, class_transformer_1.Type)(() => Date),
    __metadata("design:type", typeof (_a = typeof Date !== "undefined" && Date) === "function" ? _a : Object)
], CredentialHistoryQueryDto.prototype, "startDate", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ description: 'End date for issued credentials', type: String, format: 'date-time' }),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsDate)(),
    (0, class_transformer_1.Type)(() => Date),
    __metadata("design:type", typeof (_b = typeof Date !== "undefined" && Date) === "function" ? _b : Object)
], CredentialHistoryQueryDto.prototype, "endDate", void 0);
__decorate([
    (0, swagger_1.ApiPropertyOptional)({ enum: CredentialStatus, description: 'Credential status filter', default: CredentialStatus.ALL }),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsEnum)(CredentialStatus),
    __metadata("design:type", String)
], CredentialHistoryQueryDto.prototype, "status", void 0);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiQzpcXFVzZXJzXFxnLWVrb2hcXERlc2t0b3BcXFN0cmVsbGVyTWluZHMtQmFja2VuZFxcc3JjXFxjcmVkZW50aWFsXFxkdG9cXGNyZWRlbnRpYWwtaGlzdG9yeS1xdWVyeS5kdG8udHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUFBLHFEQUFtRjtBQUNuRix5REFBeUM7QUFDekMsNkNBQW1FO0FBRW5FOztHQUVHO0FBQ0gsSUFBWSxnQkFLWDtBQUxELFdBQVksZ0JBQWdCO0lBQzFCLHlDQUFxQixDQUFBO0lBQ3JCLDZDQUF5QixDQUFBO0lBQ3pCLHVDQUFtQixDQUFBO0lBQ25CLCtCQUFXLENBQUE7QUFDYixDQUFDLEVBTFcsZ0JBQWdCLGdDQUFoQixnQkFBZ0IsUUFLM0I7QUFFRDs7R0FFRztBQUNILE1BQWEseUJBQXlCO0lBQXRDO1FBQ0UsOENBQThDO1FBTTlDLFNBQUksR0FBWSxDQUFDLENBQUM7UUFFbEIsNkNBQTZDO1FBTTdDLFVBQUssR0FBWSxFQUFFLENBQUM7UUFzQnBCLCtCQUErQjtRQUkvQixXQUFNLEdBQXNCLGdCQUFnQixDQUFDLEdBQUcsQ0FBQztJQUNuRCxDQUFDO0NBQUE7QUExQ0QsOERBMENDO0FBbkNDO0lBTEMsSUFBQSw2QkFBbUIsRUFBQyxFQUFFLFdBQVcsRUFBRSw0QkFBNEIsRUFBRSxPQUFPLEVBQUUsQ0FBQyxFQUFFLE9BQU8sRUFBRSxDQUFDLEVBQUUsQ0FBQztJQUMxRixJQUFBLDRCQUFVLEdBQUU7SUFDWixJQUFBLHVCQUFLLEdBQUU7SUFDUCxJQUFBLHFCQUFHLEVBQUMsQ0FBQyxDQUFDO0lBQ04sSUFBQSx3QkFBSSxFQUFDLEdBQUcsRUFBRSxDQUFDLE1BQU0sQ0FBQzs7dURBQ0Q7QUFRbEI7SUFMQyxJQUFBLDZCQUFtQixFQUFDLEVBQUUsV0FBVyxFQUFFLDBCQUEwQixFQUFFLE9BQU8sRUFBRSxFQUFFLEVBQUUsT0FBTyxFQUFFLENBQUMsRUFBRSxDQUFDO0lBQ3pGLElBQUEsNEJBQVUsR0FBRTtJQUNaLElBQUEsdUJBQUssR0FBRTtJQUNQLElBQUEscUJBQUcsRUFBQyxDQUFDLENBQUM7SUFDTixJQUFBLHdCQUFJLEVBQUMsR0FBRyxFQUFFLENBQUMsTUFBTSxDQUFDOzt3REFDQztBQU1wQjtJQUhDLElBQUEsNkJBQW1CLEVBQUMsRUFBRSxXQUFXLEVBQUUsd0JBQXdCLEVBQUUsQ0FBQztJQUM5RCxJQUFBLDRCQUFVLEdBQUU7SUFDWixJQUFBLDBCQUFRLEdBQUU7O2lFQUNhO0FBT3hCO0lBSkMsSUFBQSw2QkFBbUIsRUFBQyxFQUFFLFdBQVcsRUFBRSxtQ0FBbUMsRUFBRSxJQUFJLEVBQUUsTUFBTSxFQUFFLE1BQU0sRUFBRSxXQUFXLEVBQUUsQ0FBQztJQUM1RyxJQUFBLDRCQUFVLEdBQUU7SUFDWixJQUFBLHdCQUFNLEdBQUU7SUFDUixJQUFBLHdCQUFJLEVBQUMsR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDO2tEQUNMLElBQUksb0JBQUosSUFBSTs0REFBQztBQU9qQjtJQUpDLElBQUEsNkJBQW1CLEVBQUMsRUFBRSxXQUFXLEVBQUUsaUNBQWlDLEVBQUUsSUFBSSxFQUFFLE1BQU0sRUFBRSxNQUFNLEVBQUUsV0FBVyxFQUFFLENBQUM7SUFDMUcsSUFBQSw0QkFBVSxHQUFFO0lBQ1osSUFBQSx3QkFBTSxHQUFFO0lBQ1IsSUFBQSx3QkFBSSxFQUFDLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQztrREFDUCxJQUFJLG9CQUFKLElBQUk7MERBQUM7QUFNZjtJQUhDLElBQUEsNkJBQW1CLEVBQUMsRUFBRSxJQUFJLEVBQUUsZ0JBQWdCLEVBQUUsV0FBVyxFQUFFLDBCQUEwQixFQUFFLE9BQU8sRUFBRSxnQkFBZ0IsQ0FBQyxHQUFHLEVBQUUsQ0FBQztJQUN2SCxJQUFBLDRCQUFVLEdBQUU7SUFDWixJQUFBLHdCQUFNLEVBQUMsZ0JBQWdCLENBQUM7O3lEQUN3QiIsIm5hbWVzIjpbXSwic291cmNlcyI6WyJDOlxcVXNlcnNcXGctZWtvaFxcRGVza3RvcFxcU3RyZWxsZXJNaW5kcy1CYWNrZW5kXFxzcmNcXGNyZWRlbnRpYWxcXGR0b1xcY3JlZGVudGlhbC1oaXN0b3J5LXF1ZXJ5LmR0by50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJc09wdGlvbmFsLCBJc0ludCwgTWluLCBJc1N0cmluZywgSXNFbnVtLCBJc0RhdGUgfSBmcm9tICdjbGFzcy12YWxpZGF0b3InO1xyXG5pbXBvcnQgeyBUeXBlIH0gZnJvbSAnY2xhc3MtdHJhbnNmb3JtZXInO1xyXG5pbXBvcnQgeyBBcGlQcm9wZXJ0eU9wdGlvbmFsLCBBcGlQcm9wZXJ0eSB9IGZyb20gJ0BuZXN0anMvc3dhZ2dlcic7XHJcblxyXG4vKipcclxuICogRW51bSBmb3IgY3JlZGVudGlhbCBzdGF0dXMgZmlsdGVyIGluIGhpc3RvcnkgcXVlcmllcy5cclxuICovXHJcbmV4cG9ydCBlbnVtIENyZWRlbnRpYWxTdGF0dXMge1xyXG4gIFZFUklGSUVEID0gJ1ZFUklGSUVEJyxcclxuICBVTlZFUklGSUVEID0gJ1VOVkVSSUZJRUQnLFxyXG4gIFJFVk9LRUQgPSAnUkVWT0tFRCcsXHJcbiAgQUxMID0gJ0FMTCcsXHJcbn1cclxuXHJcbi8qKlxyXG4gKiBEVE8gZm9yIHF1ZXJ5aW5nIGNyZWRlbnRpYWwgaGlzdG9yeSB3aXRoIGZpbHRlcnMgYW5kIHBhZ2luYXRpb24uXHJcbiAqL1xyXG5leHBvcnQgY2xhc3MgQ3JlZGVudGlhbEhpc3RvcnlRdWVyeUR0byB7XHJcbiAgLyoqIFBhZ2UgbnVtYmVyIGZvciBwYWdpbmF0aW9uIChkZWZhdWx0OiAxKSAqL1xyXG4gIEBBcGlQcm9wZXJ0eU9wdGlvbmFsKHsgZGVzY3JpcHRpb246ICdQYWdlIG51bWJlciBmb3IgcGFnaW5hdGlvbicsIGRlZmF1bHQ6IDEsIG1pbmltdW06IDEgfSlcclxuICBASXNPcHRpb25hbCgpXHJcbiAgQElzSW50KClcclxuICBATWluKDEpXHJcbiAgQFR5cGUoKCkgPT4gTnVtYmVyKVxyXG4gIHBhZ2U/OiBudW1iZXIgPSAxO1xyXG5cclxuICAvKiogTnVtYmVyIG9mIGl0ZW1zIHBlciBwYWdlIChkZWZhdWx0OiAxMCkgKi9cclxuICBAQXBpUHJvcGVydHlPcHRpb25hbCh7IGRlc2NyaXB0aW9uOiAnTnVtYmVyIG9mIGl0ZW1zIHBlciBwYWdlJywgZGVmYXVsdDogMTAsIG1pbmltdW06IDEgfSlcclxuICBASXNPcHRpb25hbCgpXHJcbiAgQElzSW50KClcclxuICBATWluKDEpXHJcbiAgQFR5cGUoKCkgPT4gTnVtYmVyKVxyXG4gIGxpbWl0PzogbnVtYmVyID0gMTA7XHJcblxyXG4gIC8qKiBDcmVkZW50aWFsIHR5cGUgZmlsdGVyICovXHJcbiAgQEFwaVByb3BlcnR5T3B0aW9uYWwoeyBkZXNjcmlwdGlvbjogJ0NyZWRlbnRpYWwgdHlwZSBmaWx0ZXInIH0pXHJcbiAgQElzT3B0aW9uYWwoKVxyXG4gIEBJc1N0cmluZygpXHJcbiAgY3JlZGVudGlhbFR5cGU/OiBzdHJpbmc7XHJcblxyXG4gIC8qKiBTdGFydCBkYXRlIGZvciBpc3N1ZWQgY3JlZGVudGlhbHMgKElTTzg2MDEpICovXHJcbiAgQEFwaVByb3BlcnR5T3B0aW9uYWwoeyBkZXNjcmlwdGlvbjogJ1N0YXJ0IGRhdGUgZm9yIGlzc3VlZCBjcmVkZW50aWFscycsIHR5cGU6IFN0cmluZywgZm9ybWF0OiAnZGF0ZS10aW1lJyB9KVxyXG4gIEBJc09wdGlvbmFsKClcclxuICBASXNEYXRlKClcclxuICBAVHlwZSgoKSA9PiBEYXRlKVxyXG4gIHN0YXJ0RGF0ZT86IERhdGU7XHJcblxyXG4gIC8qKiBFbmQgZGF0ZSBmb3IgaXNzdWVkIGNyZWRlbnRpYWxzIChJU084NjAxKSAqL1xyXG4gIEBBcGlQcm9wZXJ0eU9wdGlvbmFsKHsgZGVzY3JpcHRpb246ICdFbmQgZGF0ZSBmb3IgaXNzdWVkIGNyZWRlbnRpYWxzJywgdHlwZTogU3RyaW5nLCBmb3JtYXQ6ICdkYXRlLXRpbWUnIH0pXHJcbiAgQElzT3B0aW9uYWwoKVxyXG4gIEBJc0RhdGUoKVxyXG4gIEBUeXBlKCgpID0+IERhdGUpXHJcbiAgZW5kRGF0ZT86IERhdGU7XHJcblxyXG4gIC8qKiBDcmVkZW50aWFsIHN0YXR1cyBmaWx0ZXIgKi9cclxuICBAQXBpUHJvcGVydHlPcHRpb25hbCh7IGVudW06IENyZWRlbnRpYWxTdGF0dXMsIGRlc2NyaXB0aW9uOiAnQ3JlZGVudGlhbCBzdGF0dXMgZmlsdGVyJywgZGVmYXVsdDogQ3JlZGVudGlhbFN0YXR1cy5BTEwgfSlcclxuICBASXNPcHRpb25hbCgpXHJcbiAgQElzRW51bShDcmVkZW50aWFsU3RhdHVzKVxyXG4gIHN0YXR1cz86IENyZWRlbnRpYWxTdGF0dXMgPSBDcmVkZW50aWFsU3RhdHVzLkFMTDtcclxufSJdLCJ2ZXJzaW9uIjozfQ==