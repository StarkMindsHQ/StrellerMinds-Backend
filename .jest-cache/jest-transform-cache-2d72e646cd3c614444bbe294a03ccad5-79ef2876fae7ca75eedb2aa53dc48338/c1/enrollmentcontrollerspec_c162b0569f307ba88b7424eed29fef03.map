{"file":"C:\\Users\\g-ekoh\\Desktop\\StrellerMinds-Backend\\src\\enrollment\\enrollment.controller.spec.ts","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,6CAAsD;AAEtD,mDAAqC;AACrC,qDAAiD;AAEjD,QAAQ,CAAC,4BAA4B,EAAE,GAAG,EAAE;IAC1C,IAAI,GAAqB,CAAC;IAC1B,IAAI,KAAK,GAAG,cAAc,CAAC,CAAC,4CAA4C;IAExE,SAAS,CAAC,KAAK,IAAI,EAAE;QACnB,MAAM,aAAa,GAAkB,MAAM,cAAI,CAAC,mBAAmB,CAAC;YAClE,OAAO,EAAE,CAAC,sBAAS,CAAC;SACrB,CAAC,CAAC,OAAO,EAAE,CAAC;QAEb,GAAG,GAAG,aAAa,CAAC,qBAAqB,EAAE,CAAC;QAC5C,MAAM,GAAG,CAAC,IAAI,EAAE,CAAC;IACnB,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,qBAAqB,EAAE,KAAK,IAAI,EAAE;QACnC,MAAM,GAAG,GAAG,EAAE,SAAS,EAAE,SAAS,EAAE,QAAQ,EAAE,SAAS,EAAE,CAAC;QAE1D,MAAM,QAAQ,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;aAChD,IAAI,CAAC,cAAc,CAAC;aACpB,GAAG,CAAC,eAAe,EAAE,UAAU,KAAK,EAAE,CAAC;aACvC,IAAI,CAAC,GAAG,CAAC;aACT,MAAM,CAAC,GAAG,CAAC,CAAC;QAEf,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;QAC3C,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;IACtD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,oBAAoB,EAAE,KAAK,IAAI,EAAE;QAClC,MAAM,GAAG,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;aAC3C,GAAG,CAAC,cAAc,CAAC;aACnB,GAAG,CAAC,eAAe,EAAE,UAAU,KAAK,EAAE,CAAC;aACvC,MAAM,CAAC,GAAG,CAAC,CAAC;QAEf,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC7C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,2BAA2B,EAAE,KAAK,IAAI,EAAE;QACzC,gBAAgB;QAChB,MAAM,GAAG,GAAG,EAAE,SAAS,EAAE,YAAY,EAAE,QAAQ,EAAE,SAAS,EAAE,CAAC;QAC7D,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;aAChD,IAAI,CAAC,cAAc,CAAC;aACpB,GAAG,CAAC,eAAe,EAAE,UAAU,KAAK,EAAE,CAAC;aACvC,IAAI,CAAC,GAAG,CAAC;aACT,MAAM,CAAC,GAAG,CAAC,CAAC;QAEf,eAAe;QACf,MAAM,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;aAC/B,MAAM,CAAC,gBAAgB,IAAI,CAAC,EAAE,EAAE,CAAC;aACjC,GAAG,CAAC,eAAe,EAAE,UAAU,KAAK,EAAE,CAAC;aACvC,MAAM,CAAC,GAAG,CAAC,CAAC;IACjB,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,KAAK,IAAI,EAAE;QAClB,MAAM,GAAG,CAAC,KAAK,EAAE,CAAC;IACpB,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","names":[],"sources":["C:\\Users\\g-ekoh\\Desktop\\StrellerMinds-Backend\\src\\enrollment\\enrollment.controller.spec.ts"],"sourcesContent":["import { Test, TestingModule } from '@nestjs/testing';\r\nimport { INestApplication } from '@nestjs/common';\r\nimport * as request from 'supertest';\r\nimport { AppModule } from '../../src/app.module';\r\n\r\ndescribe('EnrollmentController (e2e)', () => {\r\n  let app: INestApplication;\r\n  let token = 'mocked-token'; // Replace with real token if auth is active\r\n\r\n  beforeAll(async () => {\r\n    const moduleFixture: TestingModule = await Test.createTestingModule({\r\n      imports: [AppModule],\r\n    }).compile();\r\n\r\n    app = moduleFixture.createNestApplication();\r\n    await app.init();\r\n  });\r\n\r\n  it('/enrollments (POST)', async () => {\r\n    const dto = { studentId: 'john123', courseId: 'course1' };\r\n\r\n    const response = await request(app.getHttpServer())\r\n      .post('/enrollments')\r\n      .set('Authorization', `Bearer ${token}`)\r\n      .send(dto)\r\n      .expect(201);\r\n\r\n    expect(response.body).toHaveProperty('id');\r\n    expect(response.body.studentId).toBe(dto.studentId);\r\n  });\r\n\r\n  it('/enrollments (GET)', async () => {\r\n    const res = await request(app.getHttpServer())\r\n      .get('/enrollments')\r\n      .set('Authorization', `Bearer ${token}`)\r\n      .expect(200);\r\n\r\n    expect(Array.isArray(res.body)).toBe(true);\r\n  });\r\n\r\n  it('/enrollments/:id (DELETE)', async () => {\r\n    // First, enroll\r\n    const dto = { studentId: 'deletetest', courseId: 'course1' };\r\n    const { body } = await request(app.getHttpServer())\r\n      .post('/enrollments')\r\n      .set('Authorization', `Bearer ${token}`)\r\n      .send(dto)\r\n      .expect(201);\r\n\r\n    // Then, delete\r\n    await request(app.getHttpServer())\r\n      .delete(`/enrollments/${body.id}`)\r\n      .set('Authorization', `Bearer ${token}`)\r\n      .expect(200);\r\n  });\r\n\r\n  afterAll(async () => {\r\n    await app.close();\r\n  });\r\n});\r\n"],"version":3}