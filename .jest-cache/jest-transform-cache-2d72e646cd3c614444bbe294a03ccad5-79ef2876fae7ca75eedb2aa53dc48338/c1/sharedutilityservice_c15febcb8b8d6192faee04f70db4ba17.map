{"file":"C:\\Users\\g-ekoh\\Desktop\\StrellerMinds-Backend\\src\\common\\services\\shared-utility.service.ts","mappings":"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","names":[],"sources":["C:\\Users\\g-ekoh\\Desktop\\StrellerMinds-Backend\\src\\common\\services\\shared-utility.service.ts"],"sourcesContent":["import { Injectable, Logger, BadRequestException } from '@nestjs/common';\r\n\r\n@Injectable()\r\nexport class SharedUtilityService {\r\n  private readonly logger = new Logger(SharedUtilityService.name);\r\n  private readonly maxRecursionDepth = 100;\r\n  private readonly maxObjectSize = 1000000; // 1MB limit for safety\r\n\r\n  /**\r\n   * Validate email format\r\n   */\r\n  isValidEmail(email: string): boolean {\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    return emailRegex.test(email);\r\n  }\r\n\r\n  /**\r\n   * Validate password strength\r\n   */\r\n  validatePasswordStrength(password: string): { isValid: boolean; errors: string[] } {\r\n    const errors: string[] = [];\r\n    \r\n    if (password.length < 8) {\r\n      errors.push('Password must be at least 8 characters long');\r\n    }\r\n    \r\n    if (!/[A-Z]/.test(password)) {\r\n      errors.push('Password must contain at least one uppercase letter');\r\n    }\r\n    \r\n    if (!/[a-z]/.test(password)) {\r\n      errors.push('Password must contain at least one lowercase letter');\r\n    }\r\n    \r\n    if (!/\\d/.test(password)) {\r\n      errors.push('Password must contain at least one number');\r\n    }\r\n    \r\n    if (!/[!@#$%^&*(),.?\":{}|<>]/.test(password)) {\r\n      errors.push('Password must contain at least one special character');\r\n    }\r\n    \r\n    return {\r\n      isValid: errors.length === 0,\r\n      errors\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Generate a random string of specified length\r\n   */\r\n  generateRandomString(length: number): string {\r\n    const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    let result = '';\r\n    for (let i = 0; i < length; i++) {\r\n      result += chars.charAt(Math.floor(Math.random() * chars.length));\r\n    }\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Sanitize input string to prevent injection attacks\r\n   * Note: For production use, consider using a dedicated sanitization library like DOMPurify\r\n   */\r\n  sanitizeInput(input: string): string {\r\n    if (!input) return input;\r\n    \r\n    // Basic XSS protection - remove script tags and dangerous attributes\r\n    return input\r\n      .replace(/<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi, '')\r\n      .replace(/<iframe\\b[^<]*(?:(?!<\\/iframe>)<[^<]*)*<\\/iframe>/gi, '')\r\n      .replace(/<object\\b[^<]*(?:(?!<\\/object>)<[^<]*)*<\\/object>/gi, '')\r\n      .replace(/<embed\\b[^<]*(?:(?!<\\/embed>)<[^<]*)*<\\/embed>/gi, '')\r\n      .replace(/<link\\b[^<]*>/gi, '')\r\n      .replace(/<meta\\b[^<]*>/gi, '')\r\n      .replace(/javascript:/gi, '')\r\n      .replace(/vbscript:/gi, '')\r\n      .replace(/on\\w+\\s*=/gi, '')\r\n      .replace(/<[^>]*>/g, '') // Remove all remaining HTML tags\r\n      .replace(/&lt;/g, '<')\r\n      .replace(/&gt;/g, '>')\r\n      .replace(/&amp;/g, '&')\r\n      .replace(/&quot;/g, '\"')\r\n      .replace(/&#x27;/g, \"'\")\r\n      .replace(/&#x2F;/g, '/')\r\n      .trim();\r\n  }\r\n\r\n  /**\r\n   * Format date to ISO string with timezone\r\n   */\r\n  formatDate(date: Date): string {\r\n    return date.toISOString();\r\n  }\r\n\r\n  /**\r\n   * Parse date from various formats\r\n   */\r\n  parseDate(dateInput: string | Date | number): Date {\r\n    if (dateInput instanceof Date) {\r\n      return dateInput;\r\n    }\r\n    \r\n    if (typeof dateInput === 'number') {\r\n      return new Date(dateInput);\r\n    }\r\n    \r\n    const parsed = new Date(dateInput);\r\n    if (isNaN(parsed.getTime())) {\r\n      throw new Error('Invalid date format');\r\n    }\r\n    \r\n    return parsed;\r\n  }\r\n\r\n  /**\r\n   * Deep clone an object with stack overflow protection\r\n   */\r\n  deepClone<T>(obj: T, depth = 0): T {\r\n    // Check recursion depth to prevent stack overflow\r\n    if (depth > this.maxRecursionDepth) {\r\n      this.logger.warn(`Deep clone reached maximum recursion depth (${this.maxRecursionDepth})`);\r\n      throw new BadRequestException('Object too deeply nested for safe cloning');\r\n    }\r\n\r\n    // Check object size to prevent memory issues\r\n    const objSize = JSON.stringify(obj).length;\r\n    if (objSize > this.maxObjectSize) {\r\n      this.logger.warn(`Object too large for safe cloning (${objSize} bytes)`);\r\n      throw new BadRequestException('Object too large for safe cloning');\r\n    }\r\n\r\n    if (obj === null || typeof obj !== 'object') {\r\n      return obj;\r\n    }\r\n    \r\n    if (obj instanceof Date) {\r\n      return new Date(obj.getTime()) as unknown as T;\r\n    }\r\n    \r\n    if (obj instanceof Array) {\r\n      return obj.map(item => this.deepClone(item, depth + 1)) as unknown as T;\r\n    }\r\n    \r\n    if (typeof obj === 'object') {\r\n      const cloned = {} as T;\r\n      for (const key in obj) {\r\n        if (obj.hasOwnProperty(key)) {\r\n          cloned[key] = this.deepClone(obj[key], depth + 1);\r\n        }\r\n      }\r\n      return cloned;\r\n    }\r\n    \r\n    return obj;\r\n  }\r\n\r\n  /**\r\n   * Merge objects with deep merge strategy and stack overflow protection\r\n   */\r\n  deepMerge<T>(target: T, source: Partial<T>, depth = 0): T {\r\n    // Check recursion depth to prevent stack overflow\r\n    if (depth > this.maxRecursionDepth) {\r\n      this.logger.warn(`Deep merge reached maximum recursion depth (${this.maxRecursionDepth})`);\r\n      throw new BadRequestException('Objects too deeply nested for safe merging');\r\n    }\r\n\r\n    const result = this.deepClone(target);\r\n    \r\n    for (const key in source) {\r\n      if (source.hasOwnProperty(key)) {\r\n        if (source[key] && typeof source[key] === 'object' && !Array.isArray(source[key])) {\r\n          result[key] = this.deepMerge(result[key], source[key], depth + 1);\r\n        } else {\r\n          result[key] = source[key];\r\n        }\r\n      }\r\n    }\r\n    \r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Convert object keys to camelCase (recursively)\r\n   */\r\n  toCamelCase(obj: Record<string, any>, depth = 0): Record<string, any> {\r\n    // Check recursion depth to prevent stack overflow\r\n    if (depth > this.maxRecursionDepth) {\r\n      this.logger.warn(`toCamelCase reached maximum recursion depth (${this.maxRecursionDepth})`);\r\n      throw new BadRequestException('Object too deeply nested for safe transformation');\r\n    }\r\n\r\n    const camelCaseObj: Record<string, any> = {};\r\n    \r\n    for (const key in obj) {\r\n      if (obj.hasOwnProperty(key)) {\r\n        const camelKey = key.replace(/_([a-z])/g, (_, letter) => letter.toUpperCase());\r\n        \r\n        // Recursively transform nested objects\r\n        if (obj[key] && typeof obj[key] === 'object' && !Array.isArray(obj[key]) && !(obj[key] instanceof Date)) {\r\n          camelCaseObj[camelKey] = this.toCamelCase(obj[key], depth + 1);\r\n        } else if (Array.isArray(obj[key])) {\r\n          // Transform array elements if they are objects\r\n          camelCaseObj[camelKey] = obj[key].map(item => \r\n            item && typeof item === 'object' && !(item instanceof Date) \r\n              ? this.toCamelCase(item, depth + 1) \r\n              : item\r\n          );\r\n        } else {\r\n          camelCaseObj[camelKey] = obj[key];\r\n        }\r\n      }\r\n    }\r\n    \r\n    return camelCaseObj;\r\n  }\r\n\r\n  /**\r\n   * Convert object keys to snake_case (recursively)\r\n   */\r\n  toSnakeCase(obj: Record<string, any>, depth = 0): Record<string, any> {\r\n    // Check recursion depth to prevent stack overflow\r\n    if (depth > this.maxRecursionDepth) {\r\n      this.logger.warn(`toSnakeCase reached maximum recursion depth (${this.maxRecursionDepth})`);\r\n      throw new BadRequestException('Object too deeply nested for safe transformation');\r\n    }\r\n\r\n    const snakeCaseObj: Record<string, any> = {};\r\n    \r\n    for (const key in obj) {\r\n      if (obj.hasOwnProperty(key)) {\r\n        const snakeKey = key.replace(/[A-Z]/g, letter => `_${letter.toLowerCase()}`);\r\n        \r\n        // Recursively transform nested objects\r\n        if (obj[key] && typeof obj[key] === 'object' && !Array.isArray(obj[key]) && !(obj[key] instanceof Date)) {\r\n          snakeCaseObj[snakeKey] = this.toSnakeCase(obj[key], depth + 1);\r\n        } else if (Array.isArray(obj[key])) {\r\n          // Transform array elements if they are objects\r\n          snakeCaseObj[snakeKey] = obj[key].map(item => \r\n            item && typeof item === 'object' && !(item instanceof Date) \r\n              ? this.toSnakeCase(item, depth + 1) \r\n              : item\r\n          );\r\n        } else {\r\n          snakeCaseObj[snakeKey] = obj[key];\r\n        }\r\n      }\r\n    }\r\n    \r\n    return snakeCaseObj;\r\n  }\r\n\r\n  /**\r\n   * Check if object is empty\r\n   */\r\n  isEmpty(obj: any): boolean {\r\n    if (obj === null || obj === undefined) return true;\r\n    if (typeof obj === 'string') return obj.trim().length === 0;\r\n    if (Array.isArray(obj)) return obj.length === 0;\r\n    if (typeof obj === 'object') return Object.keys(obj).length === 0;\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Remove undefined and null values from object\r\n   */\r\n  removeEmptyValues<T extends Record<string, any>>(obj: T): Partial<T> {\r\n    const cleaned: Partial<T> = {};\r\n    \r\n    for (const key in obj) {\r\n      if (obj.hasOwnProperty(key) && obj[key] !== undefined && obj[key] !== null) {\r\n        cleaned[key] = obj[key];\r\n      }\r\n    }\r\n    \r\n    return cleaned;\r\n  }\r\n\r\n  /**\r\n   * Safely get nested object property with fallback\r\n   */\r\n  safeGet<T>(obj: any, path: string, defaultValue?: T): T | undefined {\r\n    try {\r\n      const keys = path.split('.');\r\n      let result = obj;\r\n      \r\n      for (const key of keys) {\r\n        if (result === null || result === undefined || typeof result !== 'object') {\r\n          return defaultValue;\r\n        }\r\n        result = result[key];\r\n      }\r\n      \r\n      return result !== undefined ? result : defaultValue;\r\n    } catch (error) {\r\n      this.logger.warn(`Error accessing nested property ${path}: ${error.message}`);\r\n      return defaultValue;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Safely set nested object property\r\n   */\r\n  safeSet(obj: any, path: string, value: any): boolean {\r\n    try {\r\n      const keys = path.split('.');\r\n      let current = obj;\r\n      \r\n      for (let i = 0; i < keys.length - 1; i++) {\r\n        const key = keys[i];\r\n        if (!(key in current) || typeof current[key] !== 'object' || current[key] === null) {\r\n          current[key] = {};\r\n        }\r\n        current = current[key];\r\n      }\r\n      \r\n      current[keys[keys.length - 1]] = value;\r\n      return true;\r\n    } catch (error) {\r\n      this.logger.error(`Error setting nested property ${path}: ${error.message}`);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Check if a value is a valid UUID\r\n   */\r\n  isValidUUID(value: string): boolean {\r\n    const uuidRegex = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;\r\n    return uuidRegex.test(value);\r\n  }\r\n\r\n  /**\r\n   * Generate a UUID v4\r\n   */\r\n  generateUUID(): string {\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\r\n      const r = Math.random() * 16 | 0;\r\n      const v = c === 'x' ? r : (r & 0x3 | 0x8);\r\n      return v.toString(16);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Debounce function execution\r\n   */\r\n  debounce<T extends (...args: any[]) => any>(\r\n    func: T,\r\n    wait: number\r\n  ): (...args: Parameters<T>) => void {\r\n    let timeout: NodeJS.Timeout;\r\n    return (...args: Parameters<T>) => {\r\n      clearTimeout(timeout);\r\n      timeout = setTimeout(() => func.apply(this, args), wait);\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Throttle function execution\r\n   */\r\n  throttle<T extends (...args: any[]) => any>(\r\n    func: T,\r\n    limit: number\r\n  ): (...args: Parameters<T>) => void {\r\n    let inThrottle: boolean;\r\n    return (...args: Parameters<T>) => {\r\n      if (!inThrottle) {\r\n        func.apply(this, args);\r\n        inThrottle = true;\r\n        setTimeout(() => inThrottle = false, limit);\r\n      }\r\n    };\r\n  }\r\n}\r\n"],"version":3}