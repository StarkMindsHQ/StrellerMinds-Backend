{"file":"C:\\Users\\g-ekoh\\Desktop\\StrellerMinds-Backend\\src\\recommendation\\__tests__\\learning-path.service.spec.ts","mappings":"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","names":[],"sources":["C:\\Users\\g-ekoh\\Desktop\\StrellerMinds-Backend\\src\\recommendation\\__tests__\\learning-path.service.spec.ts"],"sourcesContent":["import { Test, TestingModule } from '@nestjs/testing';\r\nimport { getRepositoryToken } from '@nestjs/typeorm';\r\nimport { Repository } from 'typeorm';\r\nimport { LearningPathService, LearningGoal } from '../services/learning-path.service';\r\nimport { RecommendationAnalyticsService } from '../services/recommendation-analytics.service';\r\nimport { ContentSimilarityService } from '../services/content-similarity.service';\r\nimport { LearningPath, LearningPathStep, LearningPathStatus, StepType } from '../entities/learning-path.entity';\r\nimport { UserInteraction, InteractionType } from '../entities/user-interaction.entity';\r\nimport { User } from '../../users/entities/user.entity';\r\nimport { Course } from '../../courses/entities/course.entity';\r\n\r\ndescribe('LearningPathService', () => {\r\n  let service: LearningPathService;\r\n  let learningPathRepository: Repository<LearningPath>;\r\n  let stepRepository: Repository<LearningPathStep>;\r\n  let userRepository: Repository<User>;\r\n  let courseRepository: Repository<Course>;\r\n  let interactionRepository: Repository<UserInteraction>;\r\n  let analyticsService: RecommendationAnalyticsService;\r\n  let similarityService: ContentSimilarityService;\r\n\r\n  const mockUser: User = {\r\n    id: 'user-1',\r\n    email: 'test@example.com',\r\n    firstName: 'Test',\r\n    lastName: 'User',\r\n    skills: ['JavaScript', 'HTML', 'CSS'],\r\n    desiredSkills: ['React', 'Node.js', 'Python'],\r\n  } as User;\r\n\r\n  const mockCourse: Course = {\r\n    id: 'course-1',\r\n    title: 'React Fundamentals',\r\n    description: 'Learn React basics',\r\n    difficulty: 'beginner',\r\n    duration: 120,\r\n    rating: 4.5,\r\n    tags: ['React', 'JavaScript', 'Frontend'],\r\n    skills: ['React', 'JavaScript'],\r\n    instructor: 'Jane Doe',\r\n    isActive: true,\r\n  } as Course;\r\n\r\n  const mockLearningGoal: LearningGoal = {\r\n    targetSkills: ['React', 'Redux'],\r\n    currentLevel: 'beginner',\r\n    targetLevel: 'intermediate',\r\n    timeframe: 8,\r\n    preferences: {\r\n      maxCoursesPerWeek: 2,\r\n      preferredDuration: 90,\r\n      includeTopics: ['Frontend'],\r\n    },\r\n  };\r\n\r\n  const mockLearningPath: LearningPath = {\r\n    id: 'path-1',\r\n    userId: 'user-1',\r\n    title: 'React & Redux Learning Path',\r\n    description: 'Master React and Redux',\r\n    targetSkills: ['React', 'Redux'],\r\n    currentLevel: 'beginner',\r\n    targetLevel: 'intermediate',\r\n    status: LearningPathStatus.NOT_STARTED,\r\n    totalSteps: 5,\r\n    completedSteps: 0,\r\n    progressPercentage: 0,\r\n    estimatedDuration: 600,\r\n    steps: [],\r\n    createdAt: new Date(),\r\n    updatedAt: new Date(),\r\n  } as LearningPath;\r\n\r\n  const mockStep: LearningPathStep = {\r\n    id: 'step-1',\r\n    learningPathId: 'path-1',\r\n    courseId: 'course-1',\r\n    stepType: StepType.COURSE,\r\n    title: 'React Fundamentals',\r\n    description: 'Learn React basics',\r\n    stepOrder: 1,\r\n    estimatedDuration: 120,\r\n    completed: false,\r\n    createdAt: new Date(),\r\n    updatedAt: new Date(),\r\n  } as LearningPathStep;\r\n\r\n  beforeEach(async () => {\r\n    const module: TestingModule = await Test.createTestingModule({\r\n      providers: [\r\n        LearningPathService,\r\n        {\r\n          provide: getRepositoryToken(LearningPath),\r\n          useValue: {\r\n            findOne: jest.fn(),\r\n            find: jest.fn(),\r\n            save: jest.fn(),\r\n            createQueryBuilder: jest.fn(() => ({\r\n              leftJoinAndSelect: jest.fn().mockReturnThis(),\r\n              where: jest.fn().mockReturnThis(),\r\n              andWhere: jest.fn().mockReturnThis(),\r\n              orderBy: jest.fn().mockReturnThis(),\r\n              skip: jest.fn().mockReturnThis(),\r\n              take: jest.fn().mockReturnThis(),\r\n              getCount: jest.fn(),\r\n              getMany: jest.fn(),\r\n            })),\r\n          },\r\n        },\r\n        {\r\n          provide: getRepositoryToken(LearningPathStep),\r\n          useValue: {\r\n            save: jest.fn(),\r\n            find: jest.fn(),\r\n          },\r\n        },\r\n        {\r\n          provide: getRepositoryToken(User),\r\n          useValue: {\r\n            findOne: jest.fn(),\r\n          },\r\n        },\r\n        {\r\n          provide: getRepositoryToken(Course),\r\n          useValue: {\r\n            find: jest.fn(),\r\n            createQueryBuilder: jest.fn(() => ({\r\n              where: jest.fn().mockReturnThis(),\r\n              andWhere: jest.fn().mockReturnThis(),\r\n              orderBy: jest.fn().mockReturnThis(),\r\n              take: jest.fn().mockReturnThis(),\r\n              getMany: jest.fn(),\r\n            })),\r\n          },\r\n        },\r\n        {\r\n          provide: getRepositoryToken(UserInteraction),\r\n          useValue: {\r\n            find: jest.fn(),\r\n          },\r\n        },\r\n        {\r\n          provide: RecommendationAnalyticsService,\r\n          useValue: {\r\n            trackRecommendationGeneration: jest.fn(),\r\n          },\r\n        },\r\n        {\r\n          provide: ContentSimilarityService,\r\n          useValue: {\r\n            findSimilarCourses: jest.fn(),\r\n          },\r\n        },\r\n      ],\r\n    }).compile();\r\n\r\n    service = module.get<LearningPathService>(LearningPathService);\r\n    learningPathRepository = module.get<Repository<LearningPath>>(getRepositoryToken(LearningPath));\r\n    stepRepository = module.get<Repository<LearningPathStep>>(getRepositoryToken(LearningPathStep));\r\n    userRepository = module.get<Repository<User>>(getRepositoryToken(User));\r\n    courseRepository = module.get<Repository<Course>>(getRepositoryToken(Course));\r\n    interactionRepository = module.get<Repository<UserInteraction>>(getRepositoryToken(UserInteraction));\r\n    analyticsService = module.get<RecommendationAnalyticsService>(RecommendationAnalyticsService);\r\n    similarityService = module.get<ContentSimilarityService>(ContentSimilarityService);\r\n  });\r\n\r\n  it('should be defined', () => {\r\n    expect(service).toBeDefined();\r\n  });\r\n\r\n  describe('generateLearningPath', () => {\r\n    it('should generate a learning path successfully', async () => {\r\n      // Arrange\r\n      const userId = 'user-1';\r\n      const options = {\r\n        maxCourses: 5,\r\n        includeAssessments: true,\r\n        includeProjects: true,\r\n        adaptToProgress: true,\r\n        considerPrerequisites: true,\r\n      };\r\n\r\n      jest.spyOn(userRepository, 'findOne').mockResolvedValue(mockUser);\r\n      jest.spyOn(interactionRepository, 'find').mockResolvedValue([]);\r\n      jest.spyOn(courseRepository, 'createQueryBuilder').mockReturnValue({\r\n        where: jest.fn().mockReturnThis(),\r\n        andWhere: jest.fn().mockReturnThis(),\r\n        orderBy: jest.fn().mockReturnThis(),\r\n        getMany: jest.fn().mockResolvedValue([mockCourse]),\r\n      } as any);\r\n      jest.spyOn(learningPathRepository, 'save').mockResolvedValue({ ...mockLearningPath, id: 'generated-path-id' });\r\n      jest.spyOn(stepRepository, 'save').mockResolvedValue([mockStep]);\r\n      jest.spyOn(analyticsService, 'trackRecommendationGeneration').mockResolvedValue();\r\n\r\n      // Act\r\n      const result = await service.generateLearningPath(userId, mockLearningGoal, options);\r\n\r\n      // Assert\r\n      expect(result).toBeDefined();\r\n      expect(result.userId).toBe(userId);\r\n      expect(result.targetSkills).toEqual(mockLearningGoal.targetSkills);\r\n      expect(learningPathRepository.save).toHaveBeenCalled();\r\n      expect(stepRepository.save).toHaveBeenCalled();\r\n      expect(analyticsService.trackRecommendationGeneration).toHaveBeenCalled();\r\n    });\r\n\r\n    it('should handle user with no existing skills', async () => {\r\n      // Arrange\r\n      const userWithoutSkills = { ...mockUser, skills: [] };\r\n      const userId = 'user-1';\r\n\r\n      jest.spyOn(userRepository, 'findOne').mockResolvedValue(userWithoutSkills);\r\n      jest.spyOn(interactionRepository, 'find').mockResolvedValue([]);\r\n      jest.spyOn(courseRepository, 'createQueryBuilder').mockReturnValue({\r\n        where: jest.fn().mockReturnThis(),\r\n        andWhere: jest.fn().mockReturnThis(),\r\n        orderBy: jest.fn().mockReturnThis(),\r\n        getMany: jest.fn().mockResolvedValue([mockCourse]),\r\n      } as any);\r\n      jest.spyOn(learningPathRepository, 'save').mockResolvedValue(mockLearningPath);\r\n      jest.spyOn(stepRepository, 'save').mockResolvedValue([mockStep]);\r\n\r\n      // Act\r\n      const result = await service.generateLearningPath(userId, mockLearningGoal);\r\n\r\n      // Assert\r\n      expect(result).toBeDefined();\r\n      expect(result.currentLevel).toBe('beginner');\r\n    });\r\n\r\n    it('should include assessments when option is enabled', async () => {\r\n      // Arrange\r\n      const userId = 'user-1';\r\n      const options = {\r\n        maxCourses: 2,\r\n        includeAssessments: true,\r\n        includeProjects: false,\r\n        adaptToProgress: true,\r\n        considerPrerequisites: true,\r\n      };\r\n\r\n      jest.spyOn(userRepository, 'findOne').mockResolvedValue(mockUser);\r\n      jest.spyOn(interactionRepository, 'find').mockResolvedValue([]);\r\n      jest.spyOn(courseRepository, 'createQueryBuilder').mockReturnValue({\r\n        where: jest.fn().mockReturnThis(),\r\n        andWhere: jest.fn().mockReturnThis(),\r\n        orderBy: jest.fn().mockReturnThis(),\r\n        getMany: jest.fn().mockResolvedValue([mockCourse]),\r\n      } as any);\r\n      jest.spyOn(learningPathRepository, 'save').mockResolvedValue(mockLearningPath);\r\n      jest.spyOn(stepRepository, 'save').mockImplementation((steps: any) => {\r\n        const hasAssessment = steps.some((step: any) => step.stepType === StepType.ASSESSMENT);\r\n        expect(hasAssessment).toBe(true);\r\n        return Promise.resolve(steps);\r\n      });\r\n\r\n      // Act\r\n      await service.generateLearningPath(userId, mockLearningGoal, options);\r\n\r\n      // Assert\r\n      expect(stepRepository.save).toHaveBeenCalled();\r\n    });\r\n  });\r\n\r\n  describe('getUserLearningPaths', () => {\r\n    it('should retrieve user learning paths with filters', async () => {\r\n      // Arrange\r\n      const userId = 'user-1';\r\n      const query = {\r\n        status: LearningPathStatus.IN_PROGRESS,\r\n        limit: 10,\r\n        offset: 0,\r\n        sortBy: 'createdAt',\r\n        sortOrder: 'DESC' as 'DESC',\r\n      };\r\n\r\n      const mockQueryBuilder = {\r\n        leftJoinAndSelect: jest.fn().mockReturnThis(),\r\n        where: jest.fn().mockReturnThis(),\r\n        andWhere: jest.fn().mockReturnThis(),\r\n        orderBy: jest.fn().mockReturnThis(),\r\n        skip: jest.fn().mockReturnThis(),\r\n        take: jest.fn().mockReturnThis(),\r\n        getCount: jest.fn().mockResolvedValue(1),\r\n        getMany: jest.fn().mockResolvedValue([mockLearningPath]),\r\n      };\r\n\r\n      jest.spyOn(learningPathRepository, 'createQueryBuilder').mockReturnValue(mockQueryBuilder as any);\r\n\r\n      // Act\r\n      const result = await service.getUserLearningPaths(userId, query);\r\n\r\n      // Assert\r\n      expect(result).toBeDefined();\r\n      expect(result.paths).toHaveLength(1);\r\n      expect(result.total).toBe(1);\r\n      expect(mockQueryBuilder.where).toHaveBeenCalledWith('path.userId = :userId', { userId });\r\n      expect(mockQueryBuilder.andWhere).toHaveBeenCalledWith('path.status = :status', { status: query.status });\r\n    });\r\n\r\n    it('should filter by skill area when provided', async () => {\r\n      // Arrange\r\n      const userId = 'user-1';\r\n      const query = {\r\n        skillArea: 'React',\r\n        limit: 10,\r\n        offset: 0,\r\n        sortBy: 'createdAt',\r\n        sortOrder: 'DESC' as 'DESC',\r\n      };\r\n\r\n      const mockQueryBuilder = {\r\n        leftJoinAndSelect: jest.fn().mockReturnThis(),\r\n        where: jest.fn().mockReturnThis(),\r\n        andWhere: jest.fn().mockReturnThis(),\r\n        orderBy: jest.fn().mockReturnThis(),\r\n        skip: jest.fn().mockReturnThis(),\r\n        take: jest.fn().mockReturnThis(),\r\n        getCount: jest.fn().mockResolvedValue(1),\r\n        getMany: jest.fn().mockResolvedValue([mockLearningPath]),\r\n      };\r\n\r\n      jest.spyOn(learningPathRepository, 'createQueryBuilder').mockReturnValue(mockQueryBuilder as any);\r\n\r\n      // Act\r\n      const result = await service.getUserLearningPaths(userId, query);\r\n\r\n      // Assert\r\n      expect(mockQueryBuilder.andWhere).toHaveBeenCalledWith('path.targetSkills @> :skillArea', { skillArea: ['React'] });\r\n    });\r\n  });\r\n\r\n  describe('updateProgress', () => {\r\n    it('should mark step as completed and update path progress', async () => {\r\n      // Arrange\r\n      const pathId = 'path-1';\r\n      const stepId = 'step-1';\r\n      const pathWithSteps = {\r\n        ...mockLearningPath,\r\n        steps: [mockStep, { ...mockStep, id: 'step-2', completed: false }],\r\n        totalSteps: 2,\r\n      };\r\n\r\n      jest.spyOn(learningPathRepository, 'findOne').mockResolvedValue(pathWithSteps);\r\n      jest.spyOn(stepRepository, 'save').mockResolvedValue({ ...mockStep, completed: true });\r\n      jest.spyOn(learningPathRepository, 'save').mockImplementation((path: any) => {\r\n        expect(path.completedSteps).toBe(1);\r\n        expect(path.progressPercentage).toBe(50);\r\n        expect(path.status).toBe(LearningPathStatus.IN_PROGRESS);\r\n        return Promise.resolve(path);\r\n      });\r\n\r\n      // Act\r\n      const result = await service.updateProgress(pathId, stepId, true);\r\n\r\n      // Assert\r\n      expect(result).toBeDefined();\r\n      expect(stepRepository.save).toHaveBeenCalled();\r\n      expect(learningPathRepository.save).toHaveBeenCalled();\r\n    });\r\n\r\n    it('should complete path when all steps are completed', async () => {\r\n      // Arrange\r\n      const pathId = 'path-1';\r\n      const stepId = 'step-2';\r\n      const pathWithSteps = {\r\n        ...mockLearningPath,\r\n        steps: [\r\n          { ...mockStep, completed: true },\r\n          { ...mockStep, id: 'step-2', completed: false }\r\n        ],\r\n        totalSteps: 2,\r\n      };\r\n\r\n      jest.spyOn(learningPathRepository, 'findOne').mockResolvedValue(pathWithSteps);\r\n      jest.spyOn(stepRepository, 'save').mockResolvedValue({ ...mockStep, id: 'step-2', completed: true });\r\n      jest.spyOn(learningPathRepository, 'save').mockImplementation((path: any) => {\r\n        expect(path.progressPercentage).toBe(100);\r\n        expect(path.status).toBe(LearningPathStatus.COMPLETED);\r\n        expect(path.completedAt).toBeDefined();\r\n        return Promise.resolve(path);\r\n      });\r\n\r\n      // Act\r\n      await service.updateProgress(pathId, stepId, true);\r\n\r\n      // Assert\r\n      expect(learningPathRepository.save).toHaveBeenCalled();\r\n    });\r\n\r\n    it('should throw error when path not found', async () => {\r\n      // Arrange\r\n      const pathId = 'nonexistent-path';\r\n      const stepId = 'step-1';\r\n\r\n      jest.spyOn(learningPathRepository, 'findOne').mockResolvedValue(null);\r\n\r\n      // Act & Assert\r\n      await expect(service.updateProgress(pathId, stepId, true)).rejects.toThrow(\r\n        `Learning path ${pathId} not found`\r\n      );\r\n    });\r\n\r\n    it('should throw error when step not found', async () => {\r\n      // Arrange\r\n      const pathId = 'path-1';\r\n      const stepId = 'nonexistent-step';\r\n      const pathWithSteps = {\r\n        ...mockLearningPath,\r\n        steps: [mockStep],\r\n      };\r\n\r\n      jest.spyOn(learningPathRepository, 'findOne').mockResolvedValue(pathWithSteps);\r\n\r\n      // Act & Assert\r\n      await expect(service.updateProgress(pathId, stepId, true)).rejects.toThrow(\r\n        `Step ${stepId} not found in learning path`\r\n      );\r\n    });\r\n  });\r\n\r\n  describe('adaptLearningPath', () => {\r\n    it('should adapt learning path based on user performance', async () => {\r\n      // Arrange\r\n      const pathId = 'path-1';\r\n      const pathWithSteps = {\r\n        ...mockLearningPath,\r\n        steps: [mockStep],\r\n        user: mockUser,\r\n      };\r\n\r\n      jest.spyOn(learningPathRepository, 'findOne').mockResolvedValue(pathWithSteps);\r\n      jest.spyOn(learningPathRepository, 'save').mockImplementation((path: any) => {\r\n        expect(path.metadata.lastAdaptedAt).toBeDefined();\r\n        return Promise.resolve(path);\r\n      });\r\n\r\n      // Act\r\n      const result = await service.adaptLearningPath(pathId);\r\n\r\n      // Assert\r\n      expect(result).toBeDefined();\r\n      expect(learningPathRepository.save).toHaveBeenCalled();\r\n    });\r\n\r\n    it('should throw error when path not found for adaptation', async () => {\r\n      // Arrange\r\n      const pathId = 'nonexistent-path';\r\n\r\n      jest.spyOn(learningPathRepository, 'findOne').mockResolvedValue(null);\r\n\r\n      // Act & Assert\r\n      await expect(service.adaptLearningPath(pathId)).rejects.toThrow(\r\n        `Learning path ${pathId} not found`\r\n      );\r\n    });\r\n  });\r\n\r\n  describe('getPathRecommendations', () => {\r\n    it('should generate path recommendations for user', async () => {\r\n      // Arrange\r\n      const userId = 'user-1';\r\n      const limit = 3;\r\n\r\n      jest.spyOn(userRepository, 'findOne').mockResolvedValue(mockUser);\r\n      jest.spyOn(interactionRepository, 'find').mockResolvedValue([]);\r\n\r\n      // Act\r\n      const result = await service.getPathRecommendations(userId, limit);\r\n\r\n      // Assert\r\n      expect(result).toBeDefined();\r\n      expect(result.skillBasedPaths).toBeDefined();\r\n      expect(result.trendingPaths).toBeDefined();\r\n      expect(result.continuationPaths).toBeDefined();\r\n    });\r\n\r\n    it('should throw error when user not found for recommendations', async () => {\r\n      // Arrange\r\n      const userId = 'nonexistent-user';\r\n\r\n      jest.spyOn(userRepository, 'findOne').mockResolvedValue(null);\r\n\r\n      // Act & Assert\r\n      await expect(service.getPathRecommendations(userId)).rejects.toThrow(\r\n        `User ${userId} not found`\r\n      );\r\n    });\r\n  });\r\n\r\n  describe('analyzeUserProfile', () => {\r\n    it('should analyze user profile correctly', async () => {\r\n      // Arrange\r\n      const userId = 'user-1';\r\n      const interactions = [\r\n        {\r\n          interactionType: InteractionType.COMPLETE,\r\n          course: { skills: ['React', 'JavaScript'] },\r\n        },\r\n        {\r\n          interactionType: InteractionType.ENROLL,\r\n          course: { skills: ['Vue', 'JavaScript'] },\r\n        },\r\n      ] as UserInteraction[];\r\n\r\n      jest.spyOn(userRepository, 'findOne').mockResolvedValue(mockUser);\r\n      jest.spyOn(interactionRepository, 'find').mockResolvedValue(interactions);\r\n\r\n      // Act\r\n      const profile = await (service as any).analyzeUserProfile(userId);\r\n\r\n      // Assert\r\n      expect(profile).toBeDefined();\r\n      expect(profile.currentSkills).toContain('React');\r\n      expect(profile.currentSkills).toContain('JavaScript');\r\n      expect(profile.completionRate).toBe(0.5); // 1 completion out of 2 enrollments\r\n      expect(profile.learningStyle).toBeDefined();\r\n      expect(profile.preferredDifficulty).toBeDefined();\r\n    });\r\n  });\r\n\r\n  describe('calculateCourseRelevanceScore', () => {\r\n    it('should calculate relevance score correctly', () => {\r\n      // Arrange\r\n      const course = {\r\n        skills: ['React', 'JavaScript'],\r\n        rating: 4.5,\r\n        duration: 90,\r\n        prerequisites: ['HTML', 'CSS'],\r\n      } as Course;\r\n\r\n      const userProfile = {\r\n        currentSkills: ['HTML', 'CSS', 'JavaScript'],\r\n      };\r\n\r\n      const goal = {\r\n        targetSkills: ['React', 'Redux'],\r\n        preferences: { preferredDuration: 90 },\r\n      } as LearningGoal;\r\n\r\n      // Act\r\n      const score = (service as any).calculateCourseRelevanceScore(course, userProfile, goal);\r\n\r\n      // Assert\r\n      expect(score).toBeGreaterThan(0);\r\n      expect(score).toBeLessThanOrEqual(1);\r\n    });\r\n  });\r\n\r\n  describe('sequenceCourses', () => {\r\n    it('should sequence courses by difficulty progression', async () => {\r\n      // Arrange\r\n      const courses = [\r\n        { ...mockCourse, difficulty: 'advanced', id: 'course-advanced' },\r\n        { ...mockCourse, difficulty: 'beginner', id: 'course-beginner' },\r\n        { ...mockCourse, difficulty: 'intermediate', id: 'course-intermediate' },\r\n      ] as Course[];\r\n\r\n      const userProfile = { currentSkills: ['HTML', 'CSS'] };\r\n      const goal = { currentLevel: 'beginner', targetLevel: 'advanced' } as LearningGoal;\r\n      const options = { maxCourses: 3, considerPrerequisites: true } as any;\r\n\r\n      // Act\r\n      const result = await (service as any).sequenceCourses(courses, userProfile, goal, options);\r\n\r\n      // Assert\r\n      expect(result).toBeDefined();\r\n      expect(result.length).toBeLessThanOrEqual(options.maxCourses);\r\n      // Should start with beginner courses\r\n      expect(result[0].difficulty).toBe('beginner');\r\n    });\r\n  });\r\n\r\n  describe('error handling', () => {\r\n    it('should handle database errors gracefully', async () => {\r\n      // Arrange\r\n      const userId = 'user-1';\r\n\r\n      jest.spyOn(userRepository, 'findOne').mockRejectedValue(new Error('Database connection failed'));\r\n\r\n      // Act & Assert\r\n      await expect(service.generateLearningPath(userId, mockLearningGoal)).rejects.toThrow();\r\n    });\r\n\r\n    it('should handle empty course results', async () => {\r\n      // Arrange\r\n      const userId = 'user-1';\r\n\r\n      jest.spyOn(userRepository, 'findOne').mockResolvedValue(mockUser);\r\n      jest.spyOn(interactionRepository, 'find').mockResolvedValue([]);\r\n      jest.spyOn(courseRepository, 'createQueryBuilder').mockReturnValue({\r\n        where: jest.fn().mockReturnThis(),\r\n        andWhere: jest.fn().mockReturnThis(),\r\n        orderBy: jest.fn().mockReturnThis(),\r\n        getMany: jest.fn().mockResolvedValue([]), // No courses found\r\n      } as any);\r\n      jest.spyOn(learningPathRepository, 'save').mockResolvedValue(mockLearningPath);\r\n      jest.spyOn(stepRepository, 'save').mockResolvedValue([]);\r\n\r\n      // Act\r\n      const result = await service.generateLearningPath(userId, mockLearningGoal);\r\n\r\n      // Assert\r\n      expect(result).toBeDefined();\r\n      expect(result.totalSteps).toBe(0);\r\n    });\r\n  });\r\n\r\n  describe('performance tests', () => {\r\n    it('should handle complex learning goals efficiently', async () => {\r\n      // Arrange\r\n      const complexGoal: LearningGoal = {\r\n        targetSkills: ['React', 'Redux', 'Node.js', 'MongoDB', 'GraphQL'],\r\n        currentLevel: 'beginner',\r\n        targetLevel: 'advanced',\r\n        timeframe: 16,\r\n        preferences: {\r\n          maxCoursesPerWeek: 3,\r\n          preferredDuration: 120,\r\n          includeTopics: ['Frontend', 'Backend', 'Database'],\r\n          excludeTopics: ['Mobile'],\r\n        },\r\n      };\r\n\r\n      const manyCourses = Array.from({ length: 50 }, (_, i) => ({\r\n        ...mockCourse,\r\n        id: `course-${i}`,\r\n        title: `Course ${i}`,\r\n        skills: ['React', 'JavaScript'],\r\n      })) as Course[];\r\n\r\n      jest.spyOn(userRepository, 'findOne').mockResolvedValue(mockUser);\r\n      jest.spyOn(interactionRepository, 'find').mockResolvedValue([]);\r\n      jest.spyOn(courseRepository, 'createQueryBuilder').mockReturnValue({\r\n        where: jest.fn().mockReturnThis(),\r\n        andWhere: jest.fn().mockReturnThis(),\r\n        orderBy: jest.fn().mockReturnThis(),\r\n        getMany: jest.fn().mockResolvedValue(manyCourses),\r\n      } as any);\r\n      jest.spyOn(learningPathRepository, 'save').mockResolvedValue(mockLearningPath);\r\n      jest.spyOn(stepRepository, 'save').mockResolvedValue([]);\r\n\r\n      const startTime = Date.now();\r\n\r\n      // Act\r\n      const result = await service.generateLearningPath('user-1', complexGoal);\r\n\r\n      // Assert\r\n      const endTime = Date.now();\r\n      const executionTime = endTime - startTime;\r\n      \r\n      expect(result).toBeDefined();\r\n      expect(executionTime).toBeLessThan(3000); // Should complete within 3 seconds\r\n    });\r\n  });\r\n});\r\n"],"version":3}