{"file":"C:\\Users\\g-ekoh\\Desktop\\StrellerMinds-Backend\\src\\app.controller.ts","mappings":";;;;;;;;;;;;;;;;AAAA,2CAAwD;AACxD,+CAA2C;AAC3C,uEAAmE;AACnE,uEAA6D;AAGtD,IAAM,aAAa,GAAnB,MAAM,aAAa;IACxB,YAA6B,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;IAAG,CAAC;IAGvD,QAAQ;QACN,OAAO,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;IACpC,CAAC;IAGD,SAAS,CAAgB,IAAY;QACnC,QAAQ,IAAI,EAAE,CAAC;YACb,KAAK,WAAW;gBACd,MAAM,IAAI,kCAAe,CACvB,4BAAS,CAAC,SAAS,EACnB,oBAAoB,EACpB,GAAG,CACJ,CAAC;YACJ,KAAK,YAAY;gBACf,MAAM,IAAI,kCAAe,CACvB,4BAAS,CAAC,aAAa,EACvB,mBAAmB,EACnB,GAAG,EACH;oBACE;wBACE,KAAK,EAAE,OAAO;wBACd,OAAO,EAAE,sBAAsB;qBAChC;iBACF,CACF,CAAC;YACJ,KAAK,cAAc;gBACjB,MAAM,IAAI,kCAAe,CACvB,4BAAS,CAAC,YAAY,EACtB,yBAAyB,EACzB,GAAG,CACJ,CAAC;YACJ;gBACE,OAAO,EAAE,OAAO,EAAE,uBAAuB,EAAE,CAAC;QAChD,CAAC;IACH,CAAC;CACF,CAAA;AAvCY,sCAAa;AAIxB;IADC,IAAA,YAAG,GAAE;;;;6CAGL;AAGD;IADC,IAAA,YAAG,EAAC,kBAAkB,CAAC;IACb,WAAA,IAAA,cAAK,EAAC,MAAM,CAAC,CAAA;;;;8CA6BvB;wBAtCU,aAAa;IADzB,IAAA,mBAAU,GAAE;yDAE8B,wBAAU,oBAAV,wBAAU;GADxC,aAAa,CAuCzB","names":[],"sources":["C:\\Users\\g-ekoh\\Desktop\\StrellerMinds-Backend\\src\\app.controller.ts"],"sourcesContent":["import { Controller, Get, Param } from '@nestjs/common';\r\nimport { AppService } from './app.service';\r\nimport { CustomException } from './common/errors/custom.exception';\r\nimport { ErrorCode } from './common/errors/error-codes.enum';\r\n\r\n@Controller()\r\nexport class AppController {\r\n  constructor(private readonly appService: AppService) {}\r\n\r\n  @Get()\r\n  getHello(): string {\r\n    return this.appService.getHello();\r\n  }\r\n\r\n  @Get('test-error/:type')\r\n  testError(@Param('type') type: string) {\r\n    switch (type) {\r\n      case 'not-found':\r\n        throw new CustomException(\r\n          ErrorCode.NOT_FOUND,\r\n          'Resource not found',\r\n          404\r\n        );\r\n      case 'validation':\r\n        throw new CustomException(\r\n          ErrorCode.INVALID_INPUT,\r\n          'Validation failed',\r\n          400,\r\n          [\r\n            {\r\n              field: 'email',\r\n              message: 'Invalid email format'\r\n            }\r\n          ]\r\n        );\r\n      case 'unauthorized':\r\n        throw new CustomException(\r\n          ErrorCode.UNAUTHORIZED,\r\n          'Authentication required',\r\n          401\r\n        );\r\n      default:\r\n        return { message: 'Test endpoint working' };\r\n    }\r\n  }\r\n}\r\n"],"version":3}