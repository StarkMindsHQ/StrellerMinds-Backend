{"file":"C:\\Users\\g-ekoh\\Desktop\\StrellerMinds-Backend\\src\\common\\guards\\rate-limiter.guard.ts","mappings":";;;;;;;;;;;;;AAAA,2CAM0B;AAExB,iEAA4D;AAC5D,qCAAqC;AAI9B,IAAM,cAAc,GAApB,MAAM,cAAc;IAGzB,YAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;QACtC,IAAI,CAAC,WAAW,GAAG,IAAI,2CAAmB,CAAC;YACzC,WAAW,EAAE,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,QAAQ,CAAC;YAC7C,SAAS,EAAE,cAAc;YACzB,SAAS,EAAE,MAAM;YACjB,MAAM,EAAE,CAAC;YACT,QAAQ,EAAE,EAAE;SACb,CAAC,CAAC;IACL,CAAC;IAEH,KAAK,CAAC,WAAW,CAAC,OAAyB;QACzC,MAAM,GAAG,GAAG,OAAO,CAAC,YAAY,EAAE,CAAC,UAAU,EAAW,CAAC;QACzD,MAAM,GAAG,GAAG,GAAG,CAAC,EAAE,CAAC;QAEnB,IAAI,CAAC;YACH,MAAM,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;YACpC,OAAO,IAAI,CAAC;QACd,CAAC;QAAC,MAAM,CAAC;YACL,OAAO,CAAC,IAAI,CAAC,+BAA+B,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC;YACxD,MAAM,IAAI,sBAAa,CACnB,qCAAqC,EACrC,mBAAU,CAAC,iBAAiB,CAC/B,CAAC;QAEN,CAAC;IACL,CAAC;CACE,CAAA;AA7BY,wCAAc;yBAAd,cAAc;IAD1B,IAAA,mBAAU,GAAE;yDAIqB,oBAAU,oBAAV,oBAAU;GAH/B,cAAc,CA6B1B","names":[],"sources":["C:\\Users\\g-ekoh\\Desktop\\StrellerMinds-Backend\\src\\common\\guards\\rate-limiter.guard.ts"],"sourcesContent":["import {\r\n    CanActivate,\r\n    ExecutionContext,\r\n    Injectable,\r\n    HttpException,\r\n    HttpStatus,\r\n  } from '@nestjs/common';\r\n  import { Request } from 'express';\r\n  import { RateLimiterPostgres } from 'rate-limiter-flexible';\r\n  import { DataSource } from 'typeorm';\r\n  import { InjectDataSource } from '@nestjs/typeorm';\r\n  \r\n  @Injectable()\r\n  export class RateLimitGuard implements CanActivate {\r\n    private rateLimiter: RateLimiterPostgres;\r\n  \r\n    constructor(private dataSource: DataSource) {\r\n        this.rateLimiter = new RateLimiterPostgres({\r\n          storeClient: this.dataSource.driver['master'], \r\n          tableName: 'rate_limiter',\r\n          keyPrefix: 'auth',\r\n          points: 5,\r\n          duration: 60,\r\n        });\r\n      }\r\n  \r\n    async canActivate(context: ExecutionContext): Promise<boolean> {\r\n      const req = context.switchToHttp().getRequest<Request>();\r\n      const key = req.ip;\r\n  \r\n      try {\r\n        await this.rateLimiter.consume(key);\r\n        return true;\r\n      } catch {\r\n          console.warn(`Rate limit exceeded for IP: ${req.ip}`);\r\n        throw new HttpException(\r\n            'Too many requests. Try again later.',\r\n            HttpStatus.TOO_MANY_REQUESTS,\r\n        );\r\n        \r\n    }\r\n}\r\n  }\r\n  "],"version":3}