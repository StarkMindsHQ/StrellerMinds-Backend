{"file":"C:\\Users\\g-ekoh\\Desktop\\StrellerMinds-Backend\\src\\auth\\password-validation.service.spec.ts","mappings":";;AAAA,6CAAsD;AACtD,+EAA0E;AAE1E,QAAQ,CAAC,2BAA2B,EAAE,GAAG,EAAE;IACzC,IAAI,OAAkC,CAAC;IAEvC,UAAU,CAAC,KAAK,IAAI,EAAE;QACpB,MAAM,MAAM,GAAkB,MAAM,cAAI,CAAC,mBAAmB,CAAC;YAC3D,SAAS,EAAE,CAAC,uDAAyB,CAAC;SACvC,CAAC,CAAC,OAAO,EAAE,CAAC;QAEb,OAAO,GAAG,MAAM,CAAC,GAAG,CAA4B,uDAAyB,CAAC,CAAC;IAC7E,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,mBAAmB,EAAE,GAAG,EAAE;QAC3B,MAAM,CAAC,OAAO,CAAC,CAAC,WAAW,EAAE,CAAC;IAChC,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,kBAAkB,EAAE,GAAG,EAAE;QAChC,EAAE,CAAC,2CAA2C,EAAE,GAAG,EAAE;YACvD,iEAAiE;YACjE,MAAM,MAAM,GAAG,OAAO,CAAC,gBAAgB,CAAC,6BAA6B,CAAC,CAAC;YACvE,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAClC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YACtC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,sBAAsB,CAAC,CAAC,CAAC,CAAC;QACjD,CAAC,CAAC,CAAC;QAEC,EAAE,CAAC,4CAA4C,EAAE,GAAG,EAAE;YACpD,MAAM,MAAM,GAAG,OAAO,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC;YACnD,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACnC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,6CAA6C,CAAC,CAAC;QACjF,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,mDAAmD,EAAE,GAAG,EAAE;YAC3D,MAAM,MAAM,GAAG,OAAO,CAAC,gBAAgB,CAAC,mBAAmB,CAAC,CAAC;YAC7D,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACnC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,qDAAqD,CAAC,CAAC;QACzF,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,mDAAmD,EAAE,GAAG,EAAE;YAC3D,MAAM,MAAM,GAAG,OAAO,CAAC,gBAAgB,CAAC,mBAAmB,CAAC,CAAC;YAC7D,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACnC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,qDAAqD,CAAC,CAAC;QACzF,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,yCAAyC,EAAE,GAAG,EAAE;YACjD,MAAM,MAAM,GAAG,OAAO,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,CAAC;YAC1D,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACnC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,2CAA2C,CAAC,CAAC;QAC/E,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,oDAAoD,EAAE,GAAG,EAAE;YAC5D,MAAM,MAAM,GAAG,OAAO,CAAC,gBAAgB,CAAC,mBAAmB,CAAC,CAAC;YAC7D,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACnC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,sDAAsD,CAAC,CAAC;QAC1F,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,gCAAgC,EAAE,GAAG,EAAE;YACxC,MAAM,MAAM,GAAG,OAAO,CAAC,gBAAgB,CAAC,cAAc,CAAC,CAAC;YACxD,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACnC,6FAA6F;QAC/F,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,oDAAoD,EAAE,GAAG,EAAE;YAC5D,MAAM,MAAM,GAAG,OAAO,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC;YACpD,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACrC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,yBAAyB,EAAE,GAAG,EAAE;QACvC,EAAE,CAAC,sCAAsC,EAAE,GAAG,EAAE;YAC9C,MAAM,YAAY,GAAG,OAAO,CAAC,uBAAuB,EAAE,CAAC;YACvD,MAAM,CAAC,YAAY,CAAC,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;YAC3C,MAAM,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;QACjD,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","names":[],"sources":["C:\\Users\\g-ekoh\\Desktop\\StrellerMinds-Backend\\src\\auth\\password-validation.service.spec.ts"],"sourcesContent":["import { Test, TestingModule } from '@nestjs/testing';\r\nimport { PasswordValidationService } from './password-validation.service';\r\n\r\ndescribe('PasswordValidationService', () => {\r\n  let service: PasswordValidationService;\r\n\r\n  beforeEach(async () => {\r\n    const module: TestingModule = await Test.createTestingModule({\r\n      providers: [PasswordValidationService],\r\n    }).compile();\r\n\r\n    service = module.get<PasswordValidationService>(PasswordValidationService);\r\n  });\r\n\r\n  it('should be defined', () => {\r\n    expect(service).toBeDefined();\r\n  });\r\n\r\n  describe('validatePassword', () => {\r\n    it('should return valid for a strong password', () => {\r\n  // Use a more complex password that will score higher with zxcvbn\r\n  const result = service.validatePassword('Purple-MONKEY-Dishwasher-42');\r\n  expect(result.isValid).toBe(true);\r\n  expect(result.errors).toHaveLength(0);\r\n  expect(result.score).toBeGreaterThanOrEqual(3);\r\n});\r\n\r\n    it('should reject passwords that are too short', () => {\r\n      const result = service.validatePassword('Short1!');\r\n      expect(result.isValid).toBe(false);\r\n      expect(result.errors).toContain('Password must be at least 8 characters long');\r\n    });\r\n\r\n    it('should reject passwords without uppercase letters', () => {\r\n      const result = service.validatePassword('lowercaseonly123!');\r\n      expect(result.isValid).toBe(false);\r\n      expect(result.errors).toContain('Password must contain at least one uppercase letter');\r\n    });\r\n\r\n    it('should reject passwords without lowercase letters', () => {\r\n      const result = service.validatePassword('UPPERCASEONLY123!');\r\n      expect(result.isValid).toBe(false);\r\n      expect(result.errors).toContain('Password must contain at least one lowercase letter');\r\n    });\r\n\r\n    it('should reject passwords without numbers', () => {\r\n      const result = service.validatePassword('NoNumbersHere!');\r\n      expect(result.isValid).toBe(false);\r\n      expect(result.errors).toContain('Password must contain at least one number');\r\n    });\r\n\r\n    it('should reject passwords without special characters', () => {\r\n      const result = service.validatePassword('NoSpecialChars123');\r\n      expect(result.isValid).toBe(false);\r\n      expect(result.errors).toContain('Password must contain at least one special character');\r\n    });\r\n\r\n    it('should reject common passwords', () => {\r\n      const result = service.validatePassword('Password123!');\r\n      expect(result.isValid).toBe(false);\r\n      // Note: This might not always be caught by common-password-checker depending on its database\r\n    });\r\n\r\n    it('should reject weak passwords based on zxcvbn score', () => {\r\n      const result = service.validatePassword('Simple1!');\r\n      expect(result.isValid).toBe(false);\r\n    });\r\n  });\r\n\r\n  describe('getPasswordRequirements', () => {\r\n    it('should return a list of requirements', () => {\r\n      const requirements = service.getPasswordRequirements();\r\n      expect(requirements).toBeInstanceOf(Array);\r\n      expect(requirements.length).toBeGreaterThan(0);\r\n    });\r\n  });\r\n});"],"version":3}