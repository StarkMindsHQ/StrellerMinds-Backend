{"file":"C:\\Users\\g-ekoh\\Desktop\\StrellerMinds-Backend\\src\\progress\\progress.controller.ts","mappings":";;;;;;;;;;;;;;;;AAAA,2CAAqE;AACrE,yDAAqD;AACrD,6CAAyF;AAEzF;;GAEG;AAGI,IAAM,kBAAkB,GAAxB,MAAM,kBAAkB;IAC3B,YAA6B,eAAgC;QAAhC,oBAAe,GAAf,eAAe,CAAiB;IAAG,CAAC;IAEjE;;OAEG;IAMH,cAAc,CACO,MAAc,EACZ,QAAgB;QAEnC,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;QACtD,OAAO,EAAE,OAAO,EAAE,4BAA4B,EAAE,CAAC;IACrD,CAAC;IAED;;OAEG;IAMH,eAAe,CACM,MAAc,EACR,YAAoB;QAE3C,OAAO,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;IACtE,CAAC;CACJ,CAAA;AAjCY,gDAAkB;AAW3B;IALC,IAAA,aAAI,EAAC,4BAA4B,CAAC;IAClC,IAAA,sBAAY,EAAC,EAAE,OAAO,EAAE,iBAAiB,EAAE,WAAW,EAAE,wCAAwC,EAAE,CAAC;IACnG,IAAA,kBAAQ,EAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,WAAW,EAAE,SAAS,EAAE,CAAC;IACpD,IAAA,kBAAQ,EAAC,EAAE,IAAI,EAAE,UAAU,EAAE,WAAW,EAAE,WAAW,EAAE,CAAC;IACxD,IAAA,qBAAW,EAAC,EAAE,MAAM,EAAE,GAAG,EAAE,WAAW,EAAE,6BAA6B,EAAE,CAAC;IAEpE,WAAA,IAAA,cAAK,EAAC,QAAQ,CAAC,CAAA;IACf,WAAA,IAAA,cAAK,EAAC,UAAU,CAAC,CAAA;;;;wDAIrB;AAUD;IALC,IAAA,YAAG,EAAC,SAAS,CAAC;IACd,IAAA,sBAAY,EAAC,EAAE,OAAO,EAAE,mBAAmB,EAAE,WAAW,EAAE,+BAA+B,EAAE,CAAC;IAC5F,IAAA,kBAAQ,EAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,WAAW,EAAE,SAAS,EAAE,CAAC;IACpD,IAAA,kBAAQ,EAAC,EAAE,IAAI,EAAE,cAAc,EAAE,WAAW,EAAE,yBAAyB,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;IAC1F,IAAA,qBAAW,EAAC,EAAE,MAAM,EAAE,GAAG,EAAE,WAAW,EAAE,qBAAqB,EAAE,CAAC;IAE5D,WAAA,IAAA,cAAK,EAAC,QAAQ,CAAC,CAAA;IACf,WAAA,IAAA,cAAK,EAAC,cAAc,CAAC,CAAA;;;;yDAGzB;6BAhCQ,kBAAkB;IAF9B,IAAA,iBAAO,EAAC,UAAU,CAAC;IACnB,IAAA,mBAAU,EAAC,UAAU,CAAC;yDAE2B,kCAAe,oBAAf,kCAAe;GADpD,kBAAkB,CAiC9B","names":[],"sources":["C:\\Users\\g-ekoh\\Desktop\\StrellerMinds-Backend\\src\\progress\\progress.controller.ts"],"sourcesContent":["import { Controller, Get, Post, Param, Query } from '@nestjs/common';\r\nimport { ProgressService } from './progress.service';\r\nimport { ApiTags, ApiOperation, ApiResponse, ApiParam, ApiQuery } from '@nestjs/swagger';\r\n\r\n/**\r\n * Controller for user progress tracking endpoints.\r\n */\r\n@ApiTags('Progress')\r\n@Controller('progress')\r\nexport class ProgressController {\r\n    constructor(private readonly progressService: ProgressService) {}\r\n\r\n    /**\r\n     * Mark a lesson as completed for a user.\r\n     */\r\n    @Post(':userId/complete/:lessonId')\r\n    @ApiOperation({ summary: 'Complete lesson', description: 'Mark a lesson as completed for a user.' })\r\n    @ApiParam({ name: 'userId', description: 'User ID' })\r\n    @ApiParam({ name: 'lessonId', description: 'Lesson ID' })\r\n    @ApiResponse({ status: 201, description: 'Lesson marked as completed.' })\r\n    completeLesson(\r\n        @Param('userId') userId: number,\r\n        @Param('lessonId') lessonId: number\r\n    ) {\r\n        this.progressService.completeLesson(userId, lessonId);\r\n        return { message: 'Lesson marked as completed' };\r\n    }\r\n\r\n    /**\r\n     * Get progress data for a user.\r\n     */\r\n    @Get(':userId')\r\n    @ApiOperation({ summary: 'Get user progress', description: 'Get progress data for a user.' })\r\n    @ApiParam({ name: 'userId', description: 'User ID' })\r\n    @ApiQuery({ name: 'totalLessons', description: 'Total number of lessons', required: true })\r\n    @ApiResponse({ status: 200, description: 'User progress data.' })\r\n    getUserProgress(\r\n        @Param('userId') userId: number,\r\n        @Query('totalLessons') totalLessons: number\r\n    ) {\r\n        return this.progressService.getProgressData(userId, totalLessons);\r\n    }\r\n}\r\n"],"version":3}